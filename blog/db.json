{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1506421893000},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1506421893000},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1506421893000},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1506421893000},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1506421893000},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1506421893000},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1506421893000},{"_id":"themes/next/README.md","hash":"52bad95ac4c88371d3ae9d9ea6e0e14b8c723edf","modified":1506421893000},{"_id":"themes/next/_config.yml","hash":"fb55a183dbf3a1ec210805fdf7c3da8c66a1fb7d","modified":1546698498000},{"_id":"themes/next/bower.json","hash":"63c38f50fb54b25bf5101f566189f9e5b3a6ef0e","modified":1506421893000},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1506421893000},{"_id":"themes/next/package.json","hash":"85a77bafb3d1e958b82e52528b7a95fcd59efda9","modified":1506421893000},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1506421893000},{"_id":"themes/next/README.cn.md","hash":"59e323ce21535d561507c9ecc984b7c4dcb61514","modified":1506421893000},{"_id":"source/.DS_Store","hash":"4ac31aa6b2ae812772f7ab70c0ee57cc29c131a0","modified":1640656699321},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1506421893000},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1506421893000},{"_id":"source/_posts/别再滚了-现在就要解决你的滚动穿透.md","hash":"91ea2cd17a9c3f6e1750eb2a8e3b7e5b50891a6b","modified":1648554009923},{"_id":"source/_posts/zepto源码分析——zepto对象好用的方法都是如何设计的.md","hash":"7cf116a7ac993b04f29486b1ea39b484a2799911","modified":1629942887291},{"_id":"source/_posts/Taro 多端统一的开发解决方案浅析.md","hash":"6cd85984aab5d9be1a489a4eb38e1a49f967dbbf","modified":1646015158609},{"_id":"source/_posts/zepto源码分析——设计.md","hash":"a17f2f0d73088475e8d173402fc2dff73071072e","modified":1629942887293},{"_id":"source/_posts/如何使用Vue CLI 3 搭建一个多页面项目.md","hash":"f2407bd772df2c39268fff1b493c9bce6f07b953","modified":1629949296946},{"_id":"source/_posts/zepto源码分析——序.md","hash":"c274c5dc20b9ad1e60023a6a6de61837e1c03f89","modified":1629942887292},{"_id":"source/_posts/我们是如何在王者比赛中翻车的.md","hash":"dfab9cab875f068e3d8d34ab8ea8e3d165354a1a","modified":1629949296947},{"_id":"source/_posts/北京之行.md","hash":"664527766d8e05f4979a70a4b542382ff741d548","modified":1629942887293},{"_id":"source/_posts/手把手教你用Laravel-echo-server 建立广播系统.md","hash":"e0ff9e75fe1014ba5835c3a553ac20db4908d062","modified":1629949296948},{"_id":"source/_posts/小程序框架——wepy.md","hash":"9647e4df4057e933fb0bdf249389b11fe4bef634","modified":1629942887295},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1506421893000},{"_id":"source/_posts/开始sicp的旅程吧.md","hash":"18ee00c0d8f07ea05dc358c953ecdbf3e3820fab","modified":1629942887296},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1506421893000},{"_id":"source/categories/index.md","hash":"daca8ce3d89b46e42e09019d907a86fa7378f367","modified":1629942887298},{"_id":"source/tags/index.md","hash":"199592be18929736834b58ca55758db9ee611cce","modified":1629942887299},{"_id":"themes/next/.git/packed-refs","hash":"a476816cb73522d446a264df704c6a632081c54a","modified":1506421892000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1506421811000},{"_id":"themes/next/.git/index","hash":"a78d7936b70b3a1052747b79a7bd609a7d2bd011","modified":1624445179831},{"_id":"themes/next/.git/FETCH_HEAD","hash":"b414e9a084638438f0d8ae2426fee2d4bcaa0d3c","modified":1624446597878},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1506421893000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"81dbdf09454cb26f9fd2e3ed1bf3df5af8a528fd","modified":1506421893000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1506421893000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1506421893000},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1506421893000},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1506421893000},{"_id":"themes/next/languages/en.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1506421893000},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1506421893000},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1506421893000},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1506421893000},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1506421893000},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1506421893000},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1506421893000},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1506421893000},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1506421893000},{"_id":"themes/next/languages/zh-tw.yml","hash":"64a16181fcc3779ea335792c22fda3b5202e3e9e","modified":1506421893000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"23817934c6bf7a59a494743777526b8c8ae3350d","modified":1506421893000},{"_id":"themes/next/languages/zh-hk.yml","hash":"19fb3c159fa6f4d58237e5a1a3857048a6add9a6","modified":1506421893000},{"_id":"themes/next/layout/_layout.swig","hash":"fb55ab56e2d478cadc0c3906adfbc4a13620408e","modified":1506421893000},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1506421893000},{"_id":"themes/next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1506421893000},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1506421894000},{"_id":"themes/next/layout/post.swig","hash":"dd24412a52311c85415054738e711c810653688d","modified":1506421893000},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1506421893000},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1506421893000},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1506421893000},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1506421897000},{"_id":"themes/next/layout/page.swig","hash":"dbff0302b4bfabb51556a197bf65190eb30361f0","modified":1506421893000},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1506421893000},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1506421897000},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1506421897000},{"_id":"themes/next/source/404.html","hash":"566a17dce5749ff7f2becdfc36cdb9e9c2b03864","modified":1506745012000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506421894000},{"_id":"themes/next/.git/logs/HEAD","hash":"0d643e569e1d0a2700e1c2a6418a5a423b2bb5f9","modified":1506421892000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1506421811000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1506421811000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1506421811000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1506421811000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1506421811000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1506421811000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1506421811000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1506421811000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1506421811000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1506421811000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1506421811000},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1506421893000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1506421893000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1506421893000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0f59a51b5cea3e8a7c078db486626cddc2978622","modified":1506421893000},{"_id":"themes/next/layout/_macro/post.swig","hash":"9896b34a7edc112c03b393a1602a616710a66ae1","modified":1506421893000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1506421893000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"fc0ff72b3a8ab25029a070acee066d9eaa0b0493","modified":1506435642000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"0d78052679a4f913a5338b66e0cc624c6eb1254b","modified":1506421893000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1506421893000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"dc2a0699152da26de23cf68314d919c7f1b91b77","modified":1506421893000},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1506421893000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1506421893000},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1506421893000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1506421893000},{"_id":"themes/next/layout/_partials/head.swig","hash":"71040aa738c57c24f8b703875d58ab7a262fe075","modified":1506421893000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1506421893000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1506421893000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1506421893000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1506421893000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1506421893000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1506421893000},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1506421894000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1506421894000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1506421894000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1506421893000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1506421894000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1506421894000},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1506421894000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1506421893000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1506421894000},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1506421894000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1506421894000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1506421893000},{"_id":"themes/next/source/images/avatar.png","hash":"c968368e2e08ddcb9b045ae34281936e34198bc5","modified":1506427297000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1506421894000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1506421894000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1506421894000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1506421894000},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1506421894000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1506421894000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1506421894000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506421894000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506421894000},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1506421894000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1506421894000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1506421894000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1506421894000},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1506421894000},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1506421894000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506421894000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506421894000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506421894000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506421894000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506421894000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506421894000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506421894000},{"_id":"themes/next/source/images/alipay.jpg","hash":"2279dba0e6898a82e7d9e638f3fe69679f45b9a1","modified":1506774408000},{"_id":"themes/next/.git/refs/heads/master","hash":"13d37f01583769457bc3fe358d073c15dca3c674","modified":1506421893000},{"_id":"themes/next/.git/objects/pack/pack-890137f943098df12fff2fc32122a0c8a742f56b.idx","hash":"c92561556695472bdc5bd93aef138e6f20d29ca6","modified":1624446597826},{"_id":"themes/next/.git/refs/tags/v5.1.3","hash":"5eec1427a836e6e34c81dc784bafb33c2ccf48f9","modified":1624446597877},{"_id":"themes/next/.git/refs/tags/v5.1.4","hash":"66e8b5048a20ce41a8a240072e535d725d62aef4","modified":1624446597878},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1506421893000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1506421893000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1506421893000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1506421893000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1506421893000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1506421893000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1506421893000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1506421893000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1506421893000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1506421893000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1506421893000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1506421893000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1506421893000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1506421893000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1506421893000},{"_id":"themes/next/layout/_third-party/comments/comments.swig","hash":"e53bb8d1a2a9051bef05492b9a3f549739be0e73","modified":1506435096000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1506421893000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1506421893000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"92ea45b877b1fec2010c7b409f121c986ee5075b","modified":1506421893000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1506421893000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"602104d7ac47f7888d97e810419e58593a79e8ba","modified":1506421893000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1506421893000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1506421893000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1506421893000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1506421893000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1506421893000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1506421894000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"89f88b9c9a191dd980f799fc36b83b63290d3ac9","modified":1506421894000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"38a9f43973704afe7e8ca50f35a25940ea96e3cf","modified":1506421894000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1506421894000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"68c87734324408ae6d4560da1082168ea83ba2c1","modified":1506421894000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1506421894000},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1506421894000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1506421894000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1506421894000},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1506421895000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1506421894000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1506421895000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1506421895000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1506421894000},{"_id":"themes/next/source/js/src/motion.js","hash":"6d34f2a6ea6d73f7715d00f8b175854cd02baa36","modified":1506421895000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1506421895000},{"_id":"themes/next/source/js/src/post-details.js","hash":"50fa390554f0fb467d8eb84ac8eff2cffb13fe67","modified":1506421895000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1506421895000},{"_id":"themes/next/source/js/src/utils.js","hash":"f90c7611dc665b5e321cb81c0bd689445bab438a","modified":1506421895000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1506421895000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"82fee688910efc644d3d1c3305c6ae28ba3f38f9","modified":1506421895000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1506421896000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1506421895000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1506421896000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1506421896000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1506421896000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1506421896000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1506421895000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1506421896000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1506421896000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1506421896000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1506421896000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1506421896000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1506421896000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1506421896000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1506421896000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1506421896000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1506421896000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1506421896000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1506421896000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1506421896000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1506421897000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1506421896000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1506421896000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1506421897000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1506421897000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1506421897000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1506421896000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1506421896000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"0d643e569e1d0a2700e1c2a6418a5a423b2bb5f9","modified":1506421892000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1506421893000},{"_id":"themes/next/.git/refs/remotes/origin/dev","hash":"c9abcffd1f03a6a76afa09334100c5003cf895a0","modified":1624446597860},{"_id":"themes/next/.git/refs/remotes/origin/master","hash":"3c959678e3fe6e51e935526c19927d21443a3be3","modified":1624446597855},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1506421893000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1506421893000},{"_id":"themes/next/layout/_scripts/third-party/comments/livere.swig","hash":"0bcd4136c70f4ba8a7d49ab32aabd94fbae61907","modified":1506434940000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b0e2a0e27a32f72cb283fe4b33d010d485113379","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1506421894000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1506421894000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1506421894000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9a45ed506274f655b11995c408cc566b16dada79","modified":1506421894000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1506421894000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1506421894000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1506421894000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"a509016ac0227a1903d7f0ca3a825cf9ac7fde33","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"24617c40a0d9b5e516d9500a45bc47cb995f325e","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"643eb1ad5bef63e1f5eff13ed33fc7b21111189e","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1506421894000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1506421895000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1506421895000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1506421895000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1506421895000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1506421896000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1506421896000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1506421896000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1506421896000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1506421896000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1506421896000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1506421896000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1506421896000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1506421895000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1506421896000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1506421896000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1506421896000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1506421896000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"0d643e569e1d0a2700e1c2a6418a5a423b2bb5f9","modified":1506421892000},{"_id":"themes/next/.git/logs/refs/remotes/origin/dev","hash":"93c3f7ce72546183cddb537ec153f7b623d43380","modified":1624446597860},{"_id":"themes/next/.git/logs/refs/remotes/origin/master","hash":"da3496e3a1a16f027eeb06cb4d3ff13ff5b75d90","modified":1624446597855},{"_id":"themes/next/.git/objects/pack/pack-9cd1cbc0f9c9c0b1b4b9becee91b151145312118.idx","hash":"f84443ef4f2d75ad1dd31ed9f60fb45556aa5136","modified":1506421892000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"37c7d10289df2deded057545ece3f652dbd18757","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfe6d162b4647aeadee109d06bb314ea252f6904","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e00d9a0bdf35ffc0a7fa387fa294b953c2d28fc","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"962b654f8f7cbd18a298126a403d236ed4540516","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1506421894000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"37e406ec42b7a53c72395bdbaa434270019e7179","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1506421894000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1506421894000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1506421895000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1506421895000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1506421895000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1506421895000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1506421895000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1506421896000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1506421895000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1506421897000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1506421896000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1506421896000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1506421896000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1506421895000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1506421896000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1506421896000},{"_id":"themes/next/.git/objects/pack/pack-890137f943098df12fff2fc32122a0c8a742f56b.pack","hash":"b0472486325092596ffb020b7ae211f62ebbbad9","modified":1624446597825},{"_id":"themes/next/.git/objects/pack/pack-9cd1cbc0f9c9c0b1b4b9becee91b151145312118.pack","hash":"a678da08e6d3af400e24781b42e2704f700d2bc6","modified":1506421892000},{"_id":"public/search.xml","hash":"7068a69b0ab2751a4f2ccec5cb7a8e5c3daceb68","modified":1648554265995},{"_id":"public/categories/index.html","hash":"0171a35e9c69e7176a80b9d5e018e78f33a944f6","modified":1648554266047},{"_id":"public/tags/index.html","hash":"3b35650471bd9b13a456b28a051fdcd11aa624a6","modified":1648554266047},{"_id":"public/2018/10/09/如何使用Vue CLI 3 搭建一个多页面项目/index.html","hash":"defc128365bdb964a5d15fd48972cc557150bb62","modified":1648554266047},{"_id":"public/2018/09/13/北京之行/index.html","hash":"39789015a0d4bd1a789ade2b5c1b20bd507ee87b","modified":1648554266047},{"_id":"public/2017/12/27/小程序框架——wepy/index.html","hash":"d1706e9e261b870f4163596e9e0afbb8351b4a17","modified":1648554266047},{"_id":"public/2017/12/30/开始sicp的旅程吧/index.html","hash":"be8a032df7b73c6b80d1c890c813566f83f99ad4","modified":1648554266048},{"_id":"public/2017/09/30/zepto源码分析——zepto对象好用的方法都是如何设计的/index.html","hash":"2475749b9b64a4d0df234b3d5c1ed04ddb6f0bf4","modified":1648554266048},{"_id":"public/2017/09/27/zepto源码分析——设计/index.html","hash":"9ceafbd07c749343a896328676a6a23ea9620658","modified":1648554266048},{"_id":"public/2017/09/27/zepto源码分析——序/index.html","hash":"53c0ee7a3dd3bc2741bc706a679b794b4bbc548c","modified":1648554266048},{"_id":"public/archives/index.html","hash":"84f3aef7cf1e0167e763bd92b4904c1a8ef03caa","modified":1648554266048},{"_id":"public/archives/2017/index.html","hash":"a7ae39d80598512289b60e4e0db03945df230d89","modified":1648554266048},{"_id":"public/archives/2017/09/index.html","hash":"129b150368b0125fb5c0213f70878a7b1c1b1ae8","modified":1648554266048},{"_id":"public/archives/2017/12/index.html","hash":"367a73719407fb2178e8f31d686fac0310464877","modified":1648554266048},{"_id":"public/archives/2018/index.html","hash":"4c98785a980bdc268ef52202b8c98d50fdbf3bed","modified":1648554266048},{"_id":"public/archives/2018/09/index.html","hash":"874f407b6aa6246cdb770475c956e6cb7292f5dd","modified":1648554266048},{"_id":"public/archives/2018/10/index.html","hash":"2ccf8eb0bf15bd687db888f6846e82d1b9e8e84e","modified":1648554266048},{"_id":"public/categories/编程/index.html","hash":"f672d4a40748f95b47fe6523c5355fe191638147","modified":1648554266049},{"_id":"public/tags/源码/index.html","hash":"91efd41f525aaf2076da502cc891c40a2a42dc2d","modified":1648554266049},{"_id":"public/tags/JavaScript/index.html","hash":"9eaf3bb079d4f814ba662887802c6ab9dafc4cc8","modified":1648554266049},{"_id":"public/tags/zepto/index.html","hash":"34922a7a3960afd882ffa56e0ecd35374368ed1a","modified":1648554266049},{"_id":"public/tags/Vue/index.html","hash":"10c0ff063e41b0cfc420f74adfe2a3ea5e32fe99","modified":1648554266049},{"_id":"public/tags/生活/index.html","hash":"241e94b08f1d0534b1f3b1fb15f4cd3bfc0ba300","modified":1648554266049},{"_id":"public/tags/自述/index.html","hash":"59ec30d40f7a3a2f1c1eb48fc350688bd41d7078","modified":1648554266049},{"_id":"public/tags/华晨宇/index.html","hash":"52d7369e1b7fca24cf2005aa3c850d5d21d24262","modified":1648554266049},{"_id":"public/tags/旅游/index.html","hash":"5ad1b1705fb80f4465c0ad72202573f8529a309b","modified":1648554266049},{"_id":"public/tags/前端/index.html","hash":"ca0d1f0b3f1961d30cffba285a05dcfbfab21e47","modified":1648554266054},{"_id":"public/tags/sicp/index.html","hash":"ac6e35417524b540ee94bbd27927b4c708fe79df","modified":1648554266054},{"_id":"public/tags/计算机基础/index.html","hash":"7705cb93a68c0aea5d8c417201788ec2d8b80b82","modified":1648554266054},{"_id":"public/index.html","hash":"ca3283bad3bdf0e34ebef3c920aaf98d6c1ac1bd","modified":1648554266054},{"_id":"public/2022/03/17/别再滚了-现在就要解决你的滚动穿透/index.html","hash":"7635c28b61c869e2e2c4b4022d4f48887b0cc6b0","modified":1648554266059},{"_id":"public/2021/09/16/Taro 多端统一的开发解决方案浅析/index.html","hash":"7a904fe77bdae6b091f1a49436fc28ece632d168","modified":1648554266059},{"_id":"public/2021/08/26/我们是如何在王者比赛中翻车的/index.html","hash":"dcbb5b288a828729217fc6e19da8a39d243e9dbe","modified":1648554266059},{"_id":"public/2021/07/28/手把手教你用Laravel-echo-server 建立广播系统/index.html","hash":"ec095d1bf0ac6ef53bda758cd738ea7037849f29","modified":1648554266060},{"_id":"public/archives/page/2/index.html","hash":"6d8210c03377fb54504b2217457132770b70ae23","modified":1648554266060},{"_id":"public/archives/2021/index.html","hash":"10f74ab1262f9d37e473a8759d9e4fb746322a38","modified":1648554266060},{"_id":"public/archives/2021/07/index.html","hash":"1f986c97537399b43341a76ed2b3f3d18bda8921","modified":1648554266060},{"_id":"public/archives/2021/08/index.html","hash":"b5fc2e62129e3f7b38bc14916980e8dcaa3ed440","modified":1648554266060},{"_id":"public/archives/2021/09/index.html","hash":"36e080bae1ca2c2ee4f18cbb13034d3ae65d7d7e","modified":1648554266060},{"_id":"public/archives/2022/index.html","hash":"f385fdeb6aeb19c09555e229af1772cfe47db5f9","modified":1648554266060},{"_id":"public/archives/2022/03/index.html","hash":"e72cc793a09568a6a125c19f51a5ac0964dd4244","modified":1648554266060},{"_id":"public/tags/游戏/index.html","hash":"8c2b66134b7620223160a08807386db32e5120fe","modified":1648554266060},{"_id":"public/tags/回顾/index.html","hash":"29606d193a0ed0b7b6cf1728b69e2682e756924c","modified":1648554266060},{"_id":"public/tags/团队协作/index.html","hash":"a70f6ecff28089b40f1a7b2c2ad90a8db6faa032","modified":1648554266061},{"_id":"public/tags/laravel/index.html","hash":"1b7e9230a387f475021b03678735b128b49c94b2","modified":1648554266061},{"_id":"public/tags/web/index.html","hash":"807c9394122962ec7ed666aea55705235f759377","modified":1648554266061},{"_id":"public/tags/WebSockets/index.html","hash":"bcc384febbf3b213a6cf026e092215f39b0e067c","modified":1648554266061},{"_id":"public/tags/Taro/index.html","hash":"5c4169a0b2fef7dbdb9416be85fbcb1427bdf860","modified":1648554266061},{"_id":"public/page/2/index.html","hash":"1b84af51eb7d71cdd77954e63d92c14801a5328e","modified":1648554266061},{"_id":"public/images/avatar.png","hash":"c968368e2e08ddcb9b045ae34281936e34198bc5","modified":1648554266064},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1648554266065},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1648554266065},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1648554266065},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1648554266065},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1648554266065},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1648554266065},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1648554266065},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1648554266065},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1648554266065},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1648554266065},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1648554266065},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1648554266065},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1648554266066},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1648554266066},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1648554266066},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1648554266066},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1648554266066},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1648554266066},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1648554266066},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1648554266066},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1648554266066},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1648554266066},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1648554266066},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1648554266066},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1648554266066},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1648554266066},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1648554266066},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1648554266066},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1648554266066},{"_id":"public/images/alipay.jpg","hash":"2279dba0e6898a82e7d9e638f3fe69679f45b9a1","modified":1648554266682},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1648554266682},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1648554266683},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1648554266688},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1648554266688},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1648554266689},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1648554266689},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1648554266689},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1648554266689},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1648554266689},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1648554266690},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1648554266690},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1648554266690},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1648554266690},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1648554266690},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1648554266690},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1648554266690},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1648554266690},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1648554266690},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1648554266691},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1648554266691},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1648554266691},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1648554266691},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1648554266691},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1648554266691},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1648554266691},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1648554266691},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1648554266691},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1648554266692},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1648554266692},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1648554266692},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1648554266692},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1648554266692},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1648554266692},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1648554266692},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1648554266692},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1648554266692},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1648554266694},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1648554266694},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1648554266694},{"_id":"public/404.html","hash":"0cdf20afab329b928bb92ce1b630ef13bc7ad5fc","modified":1648554266694},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1648554266694},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1648554266694},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1648554266694},{"_id":"public/css/main.css","hash":"e60f182c948fd0fe5196a2a2fd4406987fa82873","modified":1648554266694},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1648554266694},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1648554266694},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1648554266695},{"_id":"public/js/src/motion.js","hash":"da146caf488078a634d961debf2a71ce4106018c","modified":1648554266704},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1648554266704},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1648554266704},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1648554266704},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1648554266704},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1648554266704},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1648554266704},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1648554266704},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1648554266710},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1648554266714},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1648554266714},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1648554266720},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1648554266720},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1648554266720},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1648554266721},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1648554266721},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1648554266721},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1648554266721},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1648554266723},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1648554266725},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1648554266725},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1648554266727},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1648554266768},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1648554266768},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1648554266780},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1648554266803},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1648554266808}],"Category":[{"name":"编程","_id":"cl1c2n6za000buh1yagxc5v7g"}],"Data":[],"Page":[{"title":"分类","date":"2017-09-27T03:01:23.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: \"分类\"\ndate: 2017-09-27 11:01:23\ntype: \"categories\"\ncomments: false\n---\n","updated":"2021-08-26T01:54:47.298Z","path":"categories/index.html","layout":"page","_id":"cl1c2n6ug0000uh1yodkevhr9","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-09-30T04:06:09.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-09-30 12:06:09\ntype: \"tags\"\ncomments: false\n---\n","updated":"2021-08-26T01:54:47.299Z","path":"tags/index.html","layout":"page","_id":"cl1c2n6uo0002uh1yjihdisna","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"zepto源码分析——zepto对象好用的方法都是如何设计的","date":"2017-09-30T03:52:58.000Z","_content":"zepto的核心方法一部分通过给$增加属性而给$(要知道$是一个函数，即是一个对象)，另一部分定义在$.fn这个属性上，然后将zepto.Z.prototype指向$.fn，即所有的Z对象的__proto__指向$.fn，于是可访问到其中的方法。\n<!-- more -->\n---------\n\n","source":"_posts/zepto源码分析——zepto对象好用的方法都是如何设计的.md","raw":"---\ntitle: zepto源码分析——zepto对象好用的方法都是如何设计的\ndate: 2017-09-30 11:52:58\ntags: [源码,JavaScript,zepto]\ncategories: 编程\n---\nzepto的核心方法一部分通过给$增加属性而给$(要知道$是一个函数，即是一个对象)，另一部分定义在$.fn这个属性上，然后将zepto.Z.prototype指向$.fn，即所有的Z对象的__proto__指向$.fn，于是可访问到其中的方法。\n<!-- more -->\n---------\n\n","slug":"zepto源码分析——zepto对象好用的方法都是如何设计的","published":1,"updated":"2021-08-26T01:54:47.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6ui0001uh1ykhieqqi8","content":"<p>zepto的核心方法一部分通过给$增加属性而给$(要知道$是一个函数，即是一个对象)，另一部分定义在$.fn这个属性上，然后将zepto.Z.prototype指向$.fn，即所有的Z对象的<strong>proto</strong>指向$.fn，于是可访问到其中的方法。</p>\n<h2 id><a href=\"#\" class=\"headerlink\" title></a><a id=\"more\"></a></h2>","site":{"data":{}},"excerpt":"<p>zepto的核心方法一部分通过给$增加属性而给$(要知道$是一个函数，即是一个对象)，另一部分定义在$.fn这个属性上，然后将zepto.Z.prototype指向$.fn，即所有的Z对象的<strong>proto</strong>指向$.fn，于是可访问到其中的方法。</p>\n<h2 id><a href=\"#\" class=\"headerlink\" title></a>","more":"</h2>"},{"title":"zepto源码分析——设计","date":"2017-09-27T03:51:00.000Z","_content":"### zepto对象\nzepto或是jQuery的设计思想几乎是一致的，通过选择器获取一个DOM对象，然后对这个对象进行操作。\n我们来看zepto对象是什么样子。\n进入Zepto文档界面，打开控制台，使用$取一个元素，将它打印出来。\n<!-- more -->\n```\n    <h3 id=\"download\">下载 Zepto</h3>\n```\n这个元素用的是id呀，就它了\n\n```\n    let ele = $('#download')\n    ele\n    [h3#download, selector: \"#download\"]\n    Array.isArray(ele)\n    true\n```\n\n看起来是一个数组对象，但实际上并不是,isArray()不要骗人啊~\n我们知道JavaScript中数组是Array对象的实例，那么ele是么？\n\n```\n    ele.__proto__.constructor === Array;\n    false\n    ele instanceof Array\n    false\n```\n\ninstanceof 运算符用来测试一个对象在其原型链中是否存在一个构造函数的 prototype 属性。\n显而易见，ele并不是Array构建出来的，用Array构建出来也没那么多方法用啊，除非大规模重写Array的__proto__对象，那不是太惨了。\n\n#### 那么是谁构建了这个类数组对象？\n\n我们先来看看$\n\n    $\n    ƒ (selector, context){\n        return zepto.init(selector, context)\n\n$是一个函数\n来看看源码\n\n    var Zepto = (function() {\n    })()\n\n    window.Zepto = Zepto\n    window.$ === undefined && (window.$ = Zepto)\n\n$被挂载到window上，要知道在浏览器中所有JavaScript 全局对象、函数以及变量均自动成为window 对象的成员，所以$是全局对象，且是Zepto函数，很明显Zepto函数是一个构造函数。\n\n** 源代码解析部分请配合源代码和搜索食用 **\n\n#### zepto.init\n\n前面已经知道$是一个函数，参数为(selector,context)，返回一个函数，我们先来看看返回的函数是什么样子。\n搜索到zepto.init，可以看到英文注释：\n>     `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and takes a CSS selector and an optional context (and handles various special cases).\n    // This method can be overriden in plugins.\n\n简单来说就是这个方法类似jQuery的$.fn.init方法，传入一个CSS选择器和一个上下文。这个函数还能被插件改写。\n显而易见，这是为了生成之前的类数组对象做准备，选取其中的dom与环境，来看看这个函数的内部。\n$函数的作用有以下几种：\n\n- 把普通DOM对象包装成zepto对象\n- 当页面ready时加载函数\n- 充当选择器选择DOM并将其包装成zepto对象\n- 生成一个dom元素  \n\n详情分析请看源代码解析部分。\n加载函数部分比较好理解，我们先来看看是如何构建zepto对象的。\n#### 构建zepto对象\n当selector是选择器时，查找dom。\n\nzepto.qsa()方法用来选择dom，使用字符串匹配后分别使用各种get方法进行选择dom，最后特殊情况使用querySelectorAll和querySelector。因为它俩的速度要慢得多\n\n************\n找到dom后把dom与selector传给zepto.Z这个构造函数。\n\n    zepto.Z = function(dom, selector) {\n        dom = dom || []\n        dom.__proto__ = $.fn\n        dom.selector = selector || ''\n        return dom\n    }\n    zepto.Z.prototype = $.fn\n\n可以看到dom的隐式原型被指向$.fn,zepto.Z.prototype也被指向$.fn，因为隐式原型与显式原型的关系，实际上只要一个生效就生效了。\n$.fn中定义了zepto类数组对象所有方法，通过原型链这些方法就可以共享啦。","source":"_posts/zepto源码分析——设计.md","raw":"---\ntitle: zepto源码分析——设计\ndate: 2017-09-27 11:51:00\ntags: [源码,JavaScript,zepto]\ncategories: 编程\n---\n### zepto对象\nzepto或是jQuery的设计思想几乎是一致的，通过选择器获取一个DOM对象，然后对这个对象进行操作。\n我们来看zepto对象是什么样子。\n进入Zepto文档界面，打开控制台，使用$取一个元素，将它打印出来。\n<!-- more -->\n```\n    <h3 id=\"download\">下载 Zepto</h3>\n```\n这个元素用的是id呀，就它了\n\n```\n    let ele = $('#download')\n    ele\n    [h3#download, selector: \"#download\"]\n    Array.isArray(ele)\n    true\n```\n\n看起来是一个数组对象，但实际上并不是,isArray()不要骗人啊~\n我们知道JavaScript中数组是Array对象的实例，那么ele是么？\n\n```\n    ele.__proto__.constructor === Array;\n    false\n    ele instanceof Array\n    false\n```\n\ninstanceof 运算符用来测试一个对象在其原型链中是否存在一个构造函数的 prototype 属性。\n显而易见，ele并不是Array构建出来的，用Array构建出来也没那么多方法用啊，除非大规模重写Array的__proto__对象，那不是太惨了。\n\n#### 那么是谁构建了这个类数组对象？\n\n我们先来看看$\n\n    $\n    ƒ (selector, context){\n        return zepto.init(selector, context)\n\n$是一个函数\n来看看源码\n\n    var Zepto = (function() {\n    })()\n\n    window.Zepto = Zepto\n    window.$ === undefined && (window.$ = Zepto)\n\n$被挂载到window上，要知道在浏览器中所有JavaScript 全局对象、函数以及变量均自动成为window 对象的成员，所以$是全局对象，且是Zepto函数，很明显Zepto函数是一个构造函数。\n\n** 源代码解析部分请配合源代码和搜索食用 **\n\n#### zepto.init\n\n前面已经知道$是一个函数，参数为(selector,context)，返回一个函数，我们先来看看返回的函数是什么样子。\n搜索到zepto.init，可以看到英文注释：\n>     `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and takes a CSS selector and an optional context (and handles various special cases).\n    // This method can be overriden in plugins.\n\n简单来说就是这个方法类似jQuery的$.fn.init方法，传入一个CSS选择器和一个上下文。这个函数还能被插件改写。\n显而易见，这是为了生成之前的类数组对象做准备，选取其中的dom与环境，来看看这个函数的内部。\n$函数的作用有以下几种：\n\n- 把普通DOM对象包装成zepto对象\n- 当页面ready时加载函数\n- 充当选择器选择DOM并将其包装成zepto对象\n- 生成一个dom元素  \n\n详情分析请看源代码解析部分。\n加载函数部分比较好理解，我们先来看看是如何构建zepto对象的。\n#### 构建zepto对象\n当selector是选择器时，查找dom。\n\nzepto.qsa()方法用来选择dom，使用字符串匹配后分别使用各种get方法进行选择dom，最后特殊情况使用querySelectorAll和querySelector。因为它俩的速度要慢得多\n\n************\n找到dom后把dom与selector传给zepto.Z这个构造函数。\n\n    zepto.Z = function(dom, selector) {\n        dom = dom || []\n        dom.__proto__ = $.fn\n        dom.selector = selector || ''\n        return dom\n    }\n    zepto.Z.prototype = $.fn\n\n可以看到dom的隐式原型被指向$.fn,zepto.Z.prototype也被指向$.fn，因为隐式原型与显式原型的关系，实际上只要一个生效就生效了。\n$.fn中定义了zepto类数组对象所有方法，通过原型链这些方法就可以共享啦。","slug":"zepto源码分析——设计","published":1,"updated":"2021-08-26T01:54:47.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6up0003uh1yts8zz3u6","content":"<h3 id=\"zepto对象\"><a href=\"#zepto对象\" class=\"headerlink\" title=\"zepto对象\"></a>zepto对象</h3><p>zepto或是jQuery的设计思想几乎是一致的，通过选择器获取一个DOM对象，然后对这个对象进行操作。<br>我们来看zepto对象是什么样子。<br>进入Zepto文档界面，打开控制台，使用$取一个元素，将它打印出来。<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h3 id=&quot;download&quot;&gt;下载 Zepto&lt;/h3&gt;</span><br></pre></td></tr></table></figure></p>\n<p>这个元素用的是id呀，就它了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let ele = $(&apos;#download&apos;)</span><br><span class=\"line\">ele</span><br><span class=\"line\">[h3#download, selector: &quot;#download&quot;]</span><br><span class=\"line\">Array.isArray(ele)</span><br><span class=\"line\">true</span><br></pre></td></tr></table></figure>\n<p>看起来是一个数组对象，但实际上并不是,isArray()不要骗人啊~<br>我们知道JavaScript中数组是Array对象的实例，那么ele是么？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ele.__proto__.constructor === Array;</span><br><span class=\"line\">false</span><br><span class=\"line\">ele instanceof Array</span><br><span class=\"line\">false</span><br></pre></td></tr></table></figure>\n<p>instanceof 运算符用来测试一个对象在其原型链中是否存在一个构造函数的 prototype 属性。<br>显而易见，ele并不是Array构建出来的，用Array构建出来也没那么多方法用啊，除非大规模重写Array的<strong>proto</strong>对象，那不是太惨了。</p>\n<h4 id=\"那么是谁构建了这个类数组对象？\"><a href=\"#那么是谁构建了这个类数组对象？\" class=\"headerlink\" title=\"那么是谁构建了这个类数组对象？\"></a>那么是谁构建了这个类数组对象？</h4><p>我们先来看看$</p>\n<pre><code>$\nƒ (selector, context){\n    return zepto.init(selector, context)\n</code></pre><p>$是一个函数<br>来看看源码</p>\n<pre><code>var Zepto = (function() {\n})()\n\nwindow.Zepto = Zepto\nwindow.$ === undefined &amp;&amp; (window.$ = Zepto)\n</code></pre><p>$被挂载到window上，要知道在浏览器中所有JavaScript 全局对象、函数以及变量均自动成为window 对象的成员，所以$是全局对象，且是Zepto函数，很明显Zepto函数是一个构造函数。</p>\n<p><strong> 源代码解析部分请配合源代码和搜索食用 </strong></p>\n<h4 id=\"zepto-init\"><a href=\"#zepto-init\" class=\"headerlink\" title=\"zepto.init\"></a>zepto.init</h4><p>前面已经知道$是一个函数，参数为(selector,context)，返回一个函数，我们先来看看返回的函数是什么样子。<br>搜索到zepto.init，可以看到英文注释：</p>\n<blockquote>\n<pre><code>`$.zepto.init` is Zepto&apos;s counterpart to jQuery&apos;s `$.fn.init` and takes a CSS selector and an optional context (and handles various special cases).\n// This method can be overriden in plugins.\n</code></pre></blockquote>\n<p>简单来说就是这个方法类似jQuery的$.fn.init方法，传入一个CSS选择器和一个上下文。这个函数还能被插件改写。<br>显而易见，这是为了生成之前的类数组对象做准备，选取其中的dom与环境，来看看这个函数的内部。<br>$函数的作用有以下几种：</p>\n<ul>\n<li>把普通DOM对象包装成zepto对象</li>\n<li>当页面ready时加载函数</li>\n<li>充当选择器选择DOM并将其包装成zepto对象</li>\n<li>生成一个dom元素  </li>\n</ul>\n<p>详情分析请看源代码解析部分。<br>加载函数部分比较好理解，我们先来看看是如何构建zepto对象的。</p>\n<h4 id=\"构建zepto对象\"><a href=\"#构建zepto对象\" class=\"headerlink\" title=\"构建zepto对象\"></a>构建zepto对象</h4><p>当selector是选择器时，查找dom。</p>\n<p>zepto.qsa()方法用来选择dom，使用字符串匹配后分别使用各种get方法进行选择dom，最后特殊情况使用querySelectorAll和querySelector。因为它俩的速度要慢得多</p>\n<hr>\n<p>找到dom后把dom与selector传给zepto.Z这个构造函数。</p>\n<pre><code>zepto.Z = function(dom, selector) {\n    dom = dom || []\n    dom.__proto__ = $.fn\n    dom.selector = selector || &apos;&apos;\n    return dom\n}\nzepto.Z.prototype = $.fn\n</code></pre><p>可以看到dom的隐式原型被指向$.fn,zepto.Z.prototype也被指向$.fn，因为隐式原型与显式原型的关系，实际上只要一个生效就生效了。<br>$.fn中定义了zepto类数组对象所有方法，通过原型链这些方法就可以共享啦。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"zepto对象\"><a href=\"#zepto对象\" class=\"headerlink\" title=\"zepto对象\"></a>zepto对象</h3><p>zepto或是jQuery的设计思想几乎是一致的，通过选择器获取一个DOM对象，然后对这个对象进行操作。<br>我们来看zepto对象是什么样子。<br>进入Zepto文档界面，打开控制台，使用$取一个元素，将它打印出来。<br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h3 id=&quot;download&quot;&gt;下载 Zepto&lt;/h3&gt;</span><br></pre></td></tr></table></figure></p>\n<p>这个元素用的是id呀，就它了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let ele = $(&apos;#download&apos;)</span><br><span class=\"line\">ele</span><br><span class=\"line\">[h3#download, selector: &quot;#download&quot;]</span><br><span class=\"line\">Array.isArray(ele)</span><br><span class=\"line\">true</span><br></pre></td></tr></table></figure>\n<p>看起来是一个数组对象，但实际上并不是,isArray()不要骗人啊~<br>我们知道JavaScript中数组是Array对象的实例，那么ele是么？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ele.__proto__.constructor === Array;</span><br><span class=\"line\">false</span><br><span class=\"line\">ele instanceof Array</span><br><span class=\"line\">false</span><br></pre></td></tr></table></figure>\n<p>instanceof 运算符用来测试一个对象在其原型链中是否存在一个构造函数的 prototype 属性。<br>显而易见，ele并不是Array构建出来的，用Array构建出来也没那么多方法用啊，除非大规模重写Array的<strong>proto</strong>对象，那不是太惨了。</p>\n<h4 id=\"那么是谁构建了这个类数组对象？\"><a href=\"#那么是谁构建了这个类数组对象？\" class=\"headerlink\" title=\"那么是谁构建了这个类数组对象？\"></a>那么是谁构建了这个类数组对象？</h4><p>我们先来看看$</p>\n<pre><code>$\nƒ (selector, context){\n    return zepto.init(selector, context)\n</code></pre><p>$是一个函数<br>来看看源码</p>\n<pre><code>var Zepto = (function() {\n})()\n\nwindow.Zepto = Zepto\nwindow.$ === undefined &amp;&amp; (window.$ = Zepto)\n</code></pre><p>$被挂载到window上，要知道在浏览器中所有JavaScript 全局对象、函数以及变量均自动成为window 对象的成员，所以$是全局对象，且是Zepto函数，很明显Zepto函数是一个构造函数。</p>\n<p><strong> 源代码解析部分请配合源代码和搜索食用 </strong></p>\n<h4 id=\"zepto-init\"><a href=\"#zepto-init\" class=\"headerlink\" title=\"zepto.init\"></a>zepto.init</h4><p>前面已经知道$是一个函数，参数为(selector,context)，返回一个函数，我们先来看看返回的函数是什么样子。<br>搜索到zepto.init，可以看到英文注释：</p>\n<blockquote>\n<pre><code>`$.zepto.init` is Zepto&apos;s counterpart to jQuery&apos;s `$.fn.init` and takes a CSS selector and an optional context (and handles various special cases).\n// This method can be overriden in plugins.\n</code></pre></blockquote>\n<p>简单来说就是这个方法类似jQuery的$.fn.init方法，传入一个CSS选择器和一个上下文。这个函数还能被插件改写。<br>显而易见，这是为了生成之前的类数组对象做准备，选取其中的dom与环境，来看看这个函数的内部。<br>$函数的作用有以下几种：</p>\n<ul>\n<li>把普通DOM对象包装成zepto对象</li>\n<li>当页面ready时加载函数</li>\n<li>充当选择器选择DOM并将其包装成zepto对象</li>\n<li>生成一个dom元素  </li>\n</ul>\n<p>详情分析请看源代码解析部分。<br>加载函数部分比较好理解，我们先来看看是如何构建zepto对象的。</p>\n<h4 id=\"构建zepto对象\"><a href=\"#构建zepto对象\" class=\"headerlink\" title=\"构建zepto对象\"></a>构建zepto对象</h4><p>当selector是选择器时，查找dom。</p>\n<p>zepto.qsa()方法用来选择dom，使用字符串匹配后分别使用各种get方法进行选择dom，最后特殊情况使用querySelectorAll和querySelector。因为它俩的速度要慢得多</p>\n<hr>\n<p>找到dom后把dom与selector传给zepto.Z这个构造函数。</p>\n<pre><code>zepto.Z = function(dom, selector) {\n    dom = dom || []\n    dom.__proto__ = $.fn\n    dom.selector = selector || &apos;&apos;\n    return dom\n}\nzepto.Z.prototype = $.fn\n</code></pre><p>可以看到dom的隐式原型被指向$.fn,zepto.Z.prototype也被指向$.fn，因为隐式原型与显式原型的关系，实际上只要一个生效就生效了。<br>$.fn中定义了zepto类数组对象所有方法，通过原型链这些方法就可以共享啦。</p>"},{"title":"如何使用Vue CLI 3 搭建一个多页面项目","date":"2018-10-09T14:00:12.000Z","_content":"#### 为什么要用vue来做多页面应用\n\n- 熟悉vue开发模式\n- 有大量封装好的组件来用\n- 避免加载不必要的资源\n- 多页面中的部分单页面\n\n#### 如何配置\n\n首先是[官方文档](https://cli.vuejs.org/zh/config/#pages)\n\n其次是，(⊙o⊙)…，能搜到的都是2.x版本的，新版本连build目录都木有了（统一在vue.config.js中配置）\n\n```javascript\nmodule.exports = {\n  pages: {\n    index: {\n      // page 的入口\n      entry: 'src/index/main.js',\n      // 模板来源\n      template: 'public/index.html',\n      // 在 dist/index.html 的输出\n      filename: 'index.html',\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: 'Index Page',\n      // 在这个页面中包含的块，默认情况下会包含\n      // 提取出来的通用 chunk 和 vendor chunk。\n      chunks: ['chunk-vendors', 'chunk-common', 'index']\n    },\n    // 当使用只有入口的字符串格式时，\n    // 模板会被推导为 `public/subpage.html`\n    // 并且如果找不到的话，就回退到 `public/index.html`。\n    // 输出文件名会被推导为 `subpage.html`。\n    subpage: 'src/subpage/main.js'\n  }\n}\n```\n\n参考pages的配置示例，设置一下就行。（目录不要写错了⊙︿⊙）\n\n然后启动devServer，注意这里devServer是没有设置路由的，URL必须加上.html后缀才能访问到输出文件。\n\n#### 为什么要记录一下\n\n其实踩了很多坑，比如config中目录写错了，demo中模块调不到（复制其他现成页面进来的），启动devServe如何不知道如何启动具体页面。\n\n暴露了基础知识的不足，对webpack的原理完全不清楚，上来就是胡瞎用，需要加强。\n\n那么加油咯。","source":"_posts/如何使用Vue CLI 3 搭建一个多页面项目.md","raw":"---\ntitle: 如何使用Vue CLI 3 搭建一个多页面项目\ndate: 2018-10-09 22:00:12\ntags: [Vue]\n---\n#### 为什么要用vue来做多页面应用\n\n- 熟悉vue开发模式\n- 有大量封装好的组件来用\n- 避免加载不必要的资源\n- 多页面中的部分单页面\n\n#### 如何配置\n\n首先是[官方文档](https://cli.vuejs.org/zh/config/#pages)\n\n其次是，(⊙o⊙)…，能搜到的都是2.x版本的，新版本连build目录都木有了（统一在vue.config.js中配置）\n\n```javascript\nmodule.exports = {\n  pages: {\n    index: {\n      // page 的入口\n      entry: 'src/index/main.js',\n      // 模板来源\n      template: 'public/index.html',\n      // 在 dist/index.html 的输出\n      filename: 'index.html',\n      // 当使用 title 选项时，\n      // template 中的 title 标签需要是 <title><%= htmlWebpackPlugin.options.title %></title>\n      title: 'Index Page',\n      // 在这个页面中包含的块，默认情况下会包含\n      // 提取出来的通用 chunk 和 vendor chunk。\n      chunks: ['chunk-vendors', 'chunk-common', 'index']\n    },\n    // 当使用只有入口的字符串格式时，\n    // 模板会被推导为 `public/subpage.html`\n    // 并且如果找不到的话，就回退到 `public/index.html`。\n    // 输出文件名会被推导为 `subpage.html`。\n    subpage: 'src/subpage/main.js'\n  }\n}\n```\n\n参考pages的配置示例，设置一下就行。（目录不要写错了⊙︿⊙）\n\n然后启动devServer，注意这里devServer是没有设置路由的，URL必须加上.html后缀才能访问到输出文件。\n\n#### 为什么要记录一下\n\n其实踩了很多坑，比如config中目录写错了，demo中模块调不到（复制其他现成页面进来的），启动devServe如何不知道如何启动具体页面。\n\n暴露了基础知识的不足，对webpack的原理完全不清楚，上来就是胡瞎用，需要加强。\n\n那么加油咯。","slug":"如何使用Vue CLI 3 搭建一个多页面项目","published":1,"updated":"2021-08-26T03:41:36.946Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6ur0004uh1yfreikljr","content":"<h4 id=\"为什么要用vue来做多页面应用\"><a href=\"#为什么要用vue来做多页面应用\" class=\"headerlink\" title=\"为什么要用vue来做多页面应用\"></a>为什么要用vue来做多页面应用</h4><ul>\n<li>熟悉vue开发模式</li>\n<li>有大量封装好的组件来用</li>\n<li>避免加载不必要的资源</li>\n<li>多页面中的部分单页面</li>\n</ul>\n<h4 id=\"如何配置\"><a href=\"#如何配置\" class=\"headerlink\" title=\"如何配置\"></a>如何配置</h4><p>首先是<a href=\"https://cli.vuejs.org/zh/config/#pages\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>其次是，(⊙o⊙)…，能搜到的都是2.x版本的，新版本连build目录都木有了（统一在vue.config.js中配置）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  pages: &#123;</span><br><span class=\"line\">    index: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// page 的入口</span></span><br><span class=\"line\">      entry: <span class=\"string\">'src/index/main.js'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 模板来源</span></span><br><span class=\"line\">      template: <span class=\"string\">'public/index.html'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 在 dist/index.html 的输出</span></span><br><span class=\"line\">      filename: <span class=\"string\">'index.html'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 当使用 title 选项时，</span></span><br><span class=\"line\">      <span class=\"comment\">// template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span></span><br><span class=\"line\">      title: <span class=\"string\">'Index Page'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 在这个页面中包含的块，默认情况下会包含</span></span><br><span class=\"line\">      <span class=\"comment\">// 提取出来的通用 chunk 和 vendor chunk。</span></span><br><span class=\"line\">      chunks: [<span class=\"string\">'chunk-vendors'</span>, <span class=\"string\">'chunk-common'</span>, <span class=\"string\">'index'</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 当使用只有入口的字符串格式时，</span></span><br><span class=\"line\">    <span class=\"comment\">// 模板会被推导为 `public/subpage.html`</span></span><br><span class=\"line\">    <span class=\"comment\">// 并且如果找不到的话，就回退到 `public/index.html`。</span></span><br><span class=\"line\">    <span class=\"comment\">// 输出文件名会被推导为 `subpage.html`。</span></span><br><span class=\"line\">    subpage: <span class=\"string\">'src/subpage/main.js'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>参考pages的配置示例，设置一下就行。（目录不要写错了⊙︿⊙）</p>\n<p>然后启动devServer，注意这里devServer是没有设置路由的，URL必须加上.html后缀才能访问到输出文件。</p>\n<h4 id=\"为什么要记录一下\"><a href=\"#为什么要记录一下\" class=\"headerlink\" title=\"为什么要记录一下\"></a>为什么要记录一下</h4><p>其实踩了很多坑，比如config中目录写错了，demo中模块调不到（复制其他现成页面进来的），启动devServe如何不知道如何启动具体页面。</p>\n<p>暴露了基础知识的不足，对webpack的原理完全不清楚，上来就是胡瞎用，需要加强。</p>\n<p>那么加油咯。</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"为什么要用vue来做多页面应用\"><a href=\"#为什么要用vue来做多页面应用\" class=\"headerlink\" title=\"为什么要用vue来做多页面应用\"></a>为什么要用vue来做多页面应用</h4><ul>\n<li>熟悉vue开发模式</li>\n<li>有大量封装好的组件来用</li>\n<li>避免加载不必要的资源</li>\n<li>多页面中的部分单页面</li>\n</ul>\n<h4 id=\"如何配置\"><a href=\"#如何配置\" class=\"headerlink\" title=\"如何配置\"></a>如何配置</h4><p>首先是<a href=\"https://cli.vuejs.org/zh/config/#pages\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>其次是，(⊙o⊙)…，能搜到的都是2.x版本的，新版本连build目录都木有了（统一在vue.config.js中配置）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  pages: &#123;</span><br><span class=\"line\">    index: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// page 的入口</span></span><br><span class=\"line\">      entry: <span class=\"string\">'src/index/main.js'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 模板来源</span></span><br><span class=\"line\">      template: <span class=\"string\">'public/index.html'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 在 dist/index.html 的输出</span></span><br><span class=\"line\">      filename: <span class=\"string\">'index.html'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 当使用 title 选项时，</span></span><br><span class=\"line\">      <span class=\"comment\">// template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span></span><br><span class=\"line\">      title: <span class=\"string\">'Index Page'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 在这个页面中包含的块，默认情况下会包含</span></span><br><span class=\"line\">      <span class=\"comment\">// 提取出来的通用 chunk 和 vendor chunk。</span></span><br><span class=\"line\">      chunks: [<span class=\"string\">'chunk-vendors'</span>, <span class=\"string\">'chunk-common'</span>, <span class=\"string\">'index'</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 当使用只有入口的字符串格式时，</span></span><br><span class=\"line\">    <span class=\"comment\">// 模板会被推导为 `public/subpage.html`</span></span><br><span class=\"line\">    <span class=\"comment\">// 并且如果找不到的话，就回退到 `public/index.html`。</span></span><br><span class=\"line\">    <span class=\"comment\">// 输出文件名会被推导为 `subpage.html`。</span></span><br><span class=\"line\">    subpage: <span class=\"string\">'src/subpage/main.js'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>参考pages的配置示例，设置一下就行。（目录不要写错了⊙︿⊙）</p>\n<p>然后启动devServer，注意这里devServer是没有设置路由的，URL必须加上.html后缀才能访问到输出文件。</p>\n<h4 id=\"为什么要记录一下\"><a href=\"#为什么要记录一下\" class=\"headerlink\" title=\"为什么要记录一下\"></a>为什么要记录一下</h4><p>其实踩了很多坑，比如config中目录写错了，demo中模块调不到（复制其他现成页面进来的），启动devServe如何不知道如何启动具体页面。</p>\n<p>暴露了基础知识的不足，对webpack的原理完全不清楚，上来就是胡瞎用，需要加强。</p>\n<p>那么加油咯。</p>\n"},{"title":"我们是如何在王者比赛中翻车的","date":"2021-08-26T00:03:23.000Z","_content":"距离游戏比赛的惨败已经过去了6天，我个人心路历程:\nwtf->都是因为xxxxxxxxxxxxxxxx->输了就输了呗->要是选我的婉儿就好了说不定能翻盘再来->啊，游戏是真的费时间\n\n目前还处在游戏好费时间啊，远离游戏，从我做起这一阶段。但说不准什么时候又变成了游戏真香。\n人呐，就是这么的奇奇怪怪。\n\n### 失败的经验\n还是总结一下失败的经验，下次失败了不会这么震惊，搞的我两三晚都没睡好觉。\n#### 配合\n最核心的问题，与石家庄对阵的两局，5个人的配合只有两个字能说明，辣鸡，这个配合又完全是心态导致的。\n自从打败了西安，基本上确定了打决赛会很稳，几个人都飘的不成样子。在初步了解了石家庄的段位后，群里全是快活的气氛，换位置啦，怎么用xx 随意暴打xx啦之类的话。\n结果就是非常惨烈的翻车，第一局下来，其他人我不知道，我的心态是崩的。\n中路高地居然不是被逼塔或者我方有阵亡的情况下掉的，而是，漏兵线了。\n并且掉了后还在互相指责，我。\n第二局高地掉的更离谱，非要强开导致两路高地直接被兵线退了，张良接命令闪大后又不要打，这。\n总之配合非常离谱，正常来讲石家庄绝对打不过我们，但那两局他们的配合要比我们好的多的多。\n#### 配合如此不好的原因\n有一说一，并不是针对，局内矛头的起点就是ntg。\n队友失误了、被蹲草是非常正常且普通的事儿，职业选手还能被蹲草，没必要因为失误而说某些指责的话，而且也没听安排，事实上让虞姬全输出，炸弹猫+梦魇压制程咬金那不香吗？\n还有ly 的东皇吸人的时机不好，兵线处理的也不好，程咬金处于完全无人能压制的状态，两个人过去居然抓不死，中期居然还有抓到程咬金然后对面直接暂停游戏。喵喵喵，还能这样？？？\n总之节奏被彻底打乱，第一局最后一波简直像在送一样，三个人在中路无所事事结果被5人包饺子。\n第一局到第二局中间应该短暂的休息一下，转变一下心态。而我一直处于巨大的震惊当中（本来还算有优势莫名其妙浪输了），没换手机，没清醒一下，直接拉人准备了第二局。\n第二局本来想抢婉儿拯救局面，结果ntg 说拿太早被针对，但帮抢后放三楼和二楼其实效果没差，于是拿了昭君想打运营。这成了我输了游戏后后悔好几天的事儿。\n拿到昭君后对面选了吕布（大后期英雄）女娲（大后期英雄）露娜（中期英雄，但我方有张良与兰陵王作为克制点）。\n结果的结果，张良与兰陵王基本不限制露娜发育，不抢蓝不针对性抓单，露娜带线刷野美滋滋，昭君的作用完全没法发挥（清线转线快），迎来彻底失败。\n#### 游戏卡顿\n不得不说小米11 是真的辣鸡，我不知道为什么加了散热器后打一个王者还能掉帧掉到十几二十帧，第一局我玩露露基本上是屁股坐下去接下来要失联.5s的感觉，第二局没有选婉儿而是选昭君也有这方面的考量，实在是太卡了。888的性能完全没问题，就是MIUI 的锅，怕什么烧WiFi，稍微有点温度就限制性能，即使我加了散热器，这都还不够。\n骂小米也骂的够多了，无济于事。\n中途怎么就没想起来换小米10呢？又是一大后悔点。\n#### 精神状态不好\n晚上没睡好+拉肚子，老婆又是工作狂魔，一天我都在调bug，中午我跟老婆说你做饭吧，换来了嗯嗯然后拖到了一点我自己去搞，中午也没睡，十二分没有精神，全程就是迷糊状态，靠本能反应在打。\n\n\n总结：事情还是要多多准备，骄兵必败。还有，辣鸡小米。\n\n少打游戏多看书吧，王者游戏机制也实属阴间。\n辣鸡小米，但是挑来挑去还是只能选它，这就更气了哈哈哈。","source":"_posts/我们是如何在王者比赛中翻车的.md","raw":"---\ntitle: 我们是如何在王者比赛中翻车的\ndate: 2021-08-26 08:03:23\ntags: [游戏, 回顾, 团队协作]\n---\n距离游戏比赛的惨败已经过去了6天，我个人心路历程:\nwtf->都是因为xxxxxxxxxxxxxxxx->输了就输了呗->要是选我的婉儿就好了说不定能翻盘再来->啊，游戏是真的费时间\n\n目前还处在游戏好费时间啊，远离游戏，从我做起这一阶段。但说不准什么时候又变成了游戏真香。\n人呐，就是这么的奇奇怪怪。\n\n### 失败的经验\n还是总结一下失败的经验，下次失败了不会这么震惊，搞的我两三晚都没睡好觉。\n#### 配合\n最核心的问题，与石家庄对阵的两局，5个人的配合只有两个字能说明，辣鸡，这个配合又完全是心态导致的。\n自从打败了西安，基本上确定了打决赛会很稳，几个人都飘的不成样子。在初步了解了石家庄的段位后，群里全是快活的气氛，换位置啦，怎么用xx 随意暴打xx啦之类的话。\n结果就是非常惨烈的翻车，第一局下来，其他人我不知道，我的心态是崩的。\n中路高地居然不是被逼塔或者我方有阵亡的情况下掉的，而是，漏兵线了。\n并且掉了后还在互相指责，我。\n第二局高地掉的更离谱，非要强开导致两路高地直接被兵线退了，张良接命令闪大后又不要打，这。\n总之配合非常离谱，正常来讲石家庄绝对打不过我们，但那两局他们的配合要比我们好的多的多。\n#### 配合如此不好的原因\n有一说一，并不是针对，局内矛头的起点就是ntg。\n队友失误了、被蹲草是非常正常且普通的事儿，职业选手还能被蹲草，没必要因为失误而说某些指责的话，而且也没听安排，事实上让虞姬全输出，炸弹猫+梦魇压制程咬金那不香吗？\n还有ly 的东皇吸人的时机不好，兵线处理的也不好，程咬金处于完全无人能压制的状态，两个人过去居然抓不死，中期居然还有抓到程咬金然后对面直接暂停游戏。喵喵喵，还能这样？？？\n总之节奏被彻底打乱，第一局最后一波简直像在送一样，三个人在中路无所事事结果被5人包饺子。\n第一局到第二局中间应该短暂的休息一下，转变一下心态。而我一直处于巨大的震惊当中（本来还算有优势莫名其妙浪输了），没换手机，没清醒一下，直接拉人准备了第二局。\n第二局本来想抢婉儿拯救局面，结果ntg 说拿太早被针对，但帮抢后放三楼和二楼其实效果没差，于是拿了昭君想打运营。这成了我输了游戏后后悔好几天的事儿。\n拿到昭君后对面选了吕布（大后期英雄）女娲（大后期英雄）露娜（中期英雄，但我方有张良与兰陵王作为克制点）。\n结果的结果，张良与兰陵王基本不限制露娜发育，不抢蓝不针对性抓单，露娜带线刷野美滋滋，昭君的作用完全没法发挥（清线转线快），迎来彻底失败。\n#### 游戏卡顿\n不得不说小米11 是真的辣鸡，我不知道为什么加了散热器后打一个王者还能掉帧掉到十几二十帧，第一局我玩露露基本上是屁股坐下去接下来要失联.5s的感觉，第二局没有选婉儿而是选昭君也有这方面的考量，实在是太卡了。888的性能完全没问题，就是MIUI 的锅，怕什么烧WiFi，稍微有点温度就限制性能，即使我加了散热器，这都还不够。\n骂小米也骂的够多了，无济于事。\n中途怎么就没想起来换小米10呢？又是一大后悔点。\n#### 精神状态不好\n晚上没睡好+拉肚子，老婆又是工作狂魔，一天我都在调bug，中午我跟老婆说你做饭吧，换来了嗯嗯然后拖到了一点我自己去搞，中午也没睡，十二分没有精神，全程就是迷糊状态，靠本能反应在打。\n\n\n总结：事情还是要多多准备，骄兵必败。还有，辣鸡小米。\n\n少打游戏多看书吧，王者游戏机制也实属阴间。\n辣鸡小米，但是挑来挑去还是只能选它，这就更气了哈哈哈。","slug":"我们是如何在王者比赛中翻车的","published":1,"updated":"2021-08-26T03:41:36.947Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6us0005uh1ys2108emp","content":"<p>距离游戏比赛的惨败已经过去了6天，我个人心路历程:<br>wtf-&gt;都是因为xxxxxxxxxxxxxxxx-&gt;输了就输了呗-&gt;要是选我的婉儿就好了说不定能翻盘再来-&gt;啊，游戏是真的费时间</p>\n<p>目前还处在游戏好费时间啊，远离游戏，从我做起这一阶段。但说不准什么时候又变成了游戏真香。<br>人呐，就是这么的奇奇怪怪。</p>\n<h3 id=\"失败的经验\"><a href=\"#失败的经验\" class=\"headerlink\" title=\"失败的经验\"></a>失败的经验</h3><p>还是总结一下失败的经验，下次失败了不会这么震惊，搞的我两三晚都没睡好觉。</p>\n<h4 id=\"配合\"><a href=\"#配合\" class=\"headerlink\" title=\"配合\"></a>配合</h4><p>最核心的问题，与石家庄对阵的两局，5个人的配合只有两个字能说明，辣鸡，这个配合又完全是心态导致的。<br>自从打败了西安，基本上确定了打决赛会很稳，几个人都飘的不成样子。在初步了解了石家庄的段位后，群里全是快活的气氛，换位置啦，怎么用xx 随意暴打xx啦之类的话。<br>结果就是非常惨烈的翻车，第一局下来，其他人我不知道，我的心态是崩的。<br>中路高地居然不是被逼塔或者我方有阵亡的情况下掉的，而是，漏兵线了。<br>并且掉了后还在互相指责，我。<br>第二局高地掉的更离谱，非要强开导致两路高地直接被兵线退了，张良接命令闪大后又不要打，这。<br>总之配合非常离谱，正常来讲石家庄绝对打不过我们，但那两局他们的配合要比我们好的多的多。</p>\n<h4 id=\"配合如此不好的原因\"><a href=\"#配合如此不好的原因\" class=\"headerlink\" title=\"配合如此不好的原因\"></a>配合如此不好的原因</h4><p>有一说一，并不是针对，局内矛头的起点就是ntg。<br>队友失误了、被蹲草是非常正常且普通的事儿，职业选手还能被蹲草，没必要因为失误而说某些指责的话，而且也没听安排，事实上让虞姬全输出，炸弹猫+梦魇压制程咬金那不香吗？<br>还有ly 的东皇吸人的时机不好，兵线处理的也不好，程咬金处于完全无人能压制的状态，两个人过去居然抓不死，中期居然还有抓到程咬金然后对面直接暂停游戏。喵喵喵，还能这样？？？<br>总之节奏被彻底打乱，第一局最后一波简直像在送一样，三个人在中路无所事事结果被5人包饺子。<br>第一局到第二局中间应该短暂的休息一下，转变一下心态。而我一直处于巨大的震惊当中（本来还算有优势莫名其妙浪输了），没换手机，没清醒一下，直接拉人准备了第二局。<br>第二局本来想抢婉儿拯救局面，结果ntg 说拿太早被针对，但帮抢后放三楼和二楼其实效果没差，于是拿了昭君想打运营。这成了我输了游戏后后悔好几天的事儿。<br>拿到昭君后对面选了吕布（大后期英雄）女娲（大后期英雄）露娜（中期英雄，但我方有张良与兰陵王作为克制点）。<br>结果的结果，张良与兰陵王基本不限制露娜发育，不抢蓝不针对性抓单，露娜带线刷野美滋滋，昭君的作用完全没法发挥（清线转线快），迎来彻底失败。</p>\n<h4 id=\"游戏卡顿\"><a href=\"#游戏卡顿\" class=\"headerlink\" title=\"游戏卡顿\"></a>游戏卡顿</h4><p>不得不说小米11 是真的辣鸡，我不知道为什么加了散热器后打一个王者还能掉帧掉到十几二十帧，第一局我玩露露基本上是屁股坐下去接下来要失联.5s的感觉，第二局没有选婉儿而是选昭君也有这方面的考量，实在是太卡了。888的性能完全没问题，就是MIUI 的锅，怕什么烧WiFi，稍微有点温度就限制性能，即使我加了散热器，这都还不够。<br>骂小米也骂的够多了，无济于事。<br>中途怎么就没想起来换小米10呢？又是一大后悔点。</p>\n<h4 id=\"精神状态不好\"><a href=\"#精神状态不好\" class=\"headerlink\" title=\"精神状态不好\"></a>精神状态不好</h4><p>晚上没睡好+拉肚子，老婆又是工作狂魔，一天我都在调bug，中午我跟老婆说你做饭吧，换来了嗯嗯然后拖到了一点我自己去搞，中午也没睡，十二分没有精神，全程就是迷糊状态，靠本能反应在打。</p>\n<p>总结：事情还是要多多准备，骄兵必败。还有，辣鸡小米。</p>\n<p>少打游戏多看书吧，王者游戏机制也实属阴间。<br>辣鸡小米，但是挑来挑去还是只能选它，这就更气了哈哈哈。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>距离游戏比赛的惨败已经过去了6天，我个人心路历程:<br>wtf-&gt;都是因为xxxxxxxxxxxxxxxx-&gt;输了就输了呗-&gt;要是选我的婉儿就好了说不定能翻盘再来-&gt;啊，游戏是真的费时间</p>\n<p>目前还处在游戏好费时间啊，远离游戏，从我做起这一阶段。但说不准什么时候又变成了游戏真香。<br>人呐，就是这么的奇奇怪怪。</p>\n<h3 id=\"失败的经验\"><a href=\"#失败的经验\" class=\"headerlink\" title=\"失败的经验\"></a>失败的经验</h3><p>还是总结一下失败的经验，下次失败了不会这么震惊，搞的我两三晚都没睡好觉。</p>\n<h4 id=\"配合\"><a href=\"#配合\" class=\"headerlink\" title=\"配合\"></a>配合</h4><p>最核心的问题，与石家庄对阵的两局，5个人的配合只有两个字能说明，辣鸡，这个配合又完全是心态导致的。<br>自从打败了西安，基本上确定了打决赛会很稳，几个人都飘的不成样子。在初步了解了石家庄的段位后，群里全是快活的气氛，换位置啦，怎么用xx 随意暴打xx啦之类的话。<br>结果就是非常惨烈的翻车，第一局下来，其他人我不知道，我的心态是崩的。<br>中路高地居然不是被逼塔或者我方有阵亡的情况下掉的，而是，漏兵线了。<br>并且掉了后还在互相指责，我。<br>第二局高地掉的更离谱，非要强开导致两路高地直接被兵线退了，张良接命令闪大后又不要打，这。<br>总之配合非常离谱，正常来讲石家庄绝对打不过我们，但那两局他们的配合要比我们好的多的多。</p>\n<h4 id=\"配合如此不好的原因\"><a href=\"#配合如此不好的原因\" class=\"headerlink\" title=\"配合如此不好的原因\"></a>配合如此不好的原因</h4><p>有一说一，并不是针对，局内矛头的起点就是ntg。<br>队友失误了、被蹲草是非常正常且普通的事儿，职业选手还能被蹲草，没必要因为失误而说某些指责的话，而且也没听安排，事实上让虞姬全输出，炸弹猫+梦魇压制程咬金那不香吗？<br>还有ly 的东皇吸人的时机不好，兵线处理的也不好，程咬金处于完全无人能压制的状态，两个人过去居然抓不死，中期居然还有抓到程咬金然后对面直接暂停游戏。喵喵喵，还能这样？？？<br>总之节奏被彻底打乱，第一局最后一波简直像在送一样，三个人在中路无所事事结果被5人包饺子。<br>第一局到第二局中间应该短暂的休息一下，转变一下心态。而我一直处于巨大的震惊当中（本来还算有优势莫名其妙浪输了），没换手机，没清醒一下，直接拉人准备了第二局。<br>第二局本来想抢婉儿拯救局面，结果ntg 说拿太早被针对，但帮抢后放三楼和二楼其实效果没差，于是拿了昭君想打运营。这成了我输了游戏后后悔好几天的事儿。<br>拿到昭君后对面选了吕布（大后期英雄）女娲（大后期英雄）露娜（中期英雄，但我方有张良与兰陵王作为克制点）。<br>结果的结果，张良与兰陵王基本不限制露娜发育，不抢蓝不针对性抓单，露娜带线刷野美滋滋，昭君的作用完全没法发挥（清线转线快），迎来彻底失败。</p>\n<h4 id=\"游戏卡顿\"><a href=\"#游戏卡顿\" class=\"headerlink\" title=\"游戏卡顿\"></a>游戏卡顿</h4><p>不得不说小米11 是真的辣鸡，我不知道为什么加了散热器后打一个王者还能掉帧掉到十几二十帧，第一局我玩露露基本上是屁股坐下去接下来要失联.5s的感觉，第二局没有选婉儿而是选昭君也有这方面的考量，实在是太卡了。888的性能完全没问题，就是MIUI 的锅，怕什么烧WiFi，稍微有点温度就限制性能，即使我加了散热器，这都还不够。<br>骂小米也骂的够多了，无济于事。<br>中途怎么就没想起来换小米10呢？又是一大后悔点。</p>\n<h4 id=\"精神状态不好\"><a href=\"#精神状态不好\" class=\"headerlink\" title=\"精神状态不好\"></a>精神状态不好</h4><p>晚上没睡好+拉肚子，老婆又是工作狂魔，一天我都在调bug，中午我跟老婆说你做饭吧，换来了嗯嗯然后拖到了一点我自己去搞，中午也没睡，十二分没有精神，全程就是迷糊状态，靠本能反应在打。</p>\n<p>总结：事情还是要多多准备，骄兵必败。还有，辣鸡小米。</p>\n<p>少打游戏多看书吧，王者游戏机制也实属阴间。<br>辣鸡小米，但是挑来挑去还是只能选它，这就更气了哈哈哈。</p>\n"},{"title":"zepto源码分析——序","date":"2017-09-27T03:00:12.000Z","_content":"\n### 为什么17年还要读zepto的源码？\n问这个问题首先要清除为什么读源码。[程序员阅读源码是一种什么心态？源码对编程意义何在？如何才能更好阅读代码？](!https://www.zhihu.com/question/29765945)这个问题高票答案基本上已经解释的很好了，但我还想再补充几点。\n<!-- more -->\n    - 向优秀的人学习，这个毫无疑问。\n    - 人大多是依靠模仿学习的，想要模仿，必须先了解。\n    - 巩固基础，而基础有多重要就不用说了吧。\n\n确实mvvm框架极火爆，也的确好用，但是依我现在目前的水平来看（js基础不是很牢，计算机基础也跟不上），学习优秀库是一个极其方便且好用的学习以及复习策略。\n\n### 为什么是zepto？\nzepto大家都说好。\n还有一点是在几个月以前我已经根据前辈的源码分析熟悉了一遍并自己仿制了一个类zepto的库，重拾起来应该更轻松。\n还有一点，zepto的分析已经有很多人进行了，资料也很多，基本上没什么大问题，但是大都有一点缺点，就是不够通俗易懂。依我来看前端JavaScript水平的差距是巨大的。初学者可能一点一点的啃过基础大部头，以为自己已经了解了JavaScript，却被实际的各种用法所困惑。\n我作为一个初学者，希望可以通过阅读和拆析zepto的源码来略微的垫高这一沟壑。\n\n### 究竟怎么阅读？\n读之前首先一定要会用吧，如果不会用建议去看看zepto的文档，和jQuery很像。\n会了基本的用法之后就可以准备阅读了。\n首先需要源代码的源文件，其次要找好的资料。\n\n#### 什么才算是好的资料？\n在我看来至少要满足以下几点：\n\n    - 语句通顺易懂\n    - 不办弄概念\n    - 最好能引导人进行主动阅读\n    - 对一些概念进行扩展\n\n在zepto源码分析的诸多资料中，个人认为称的上好的资料应当是王福朋老师的[zepto设计和源码分析](!http://www.imooc.com/learn/745),在慕课网上的课程讲解十分详细，但个人推荐阅读[文字版](!https://www.kancloud.cn/wangfupeng/zepto-design-srouce/173689).\n在js进阶的资料中，个人认为最好的应当是曾探老师的[JavaScript设计模式与开发实践](!https://book.douban.com/subject/26382780/)","source":"_posts/zepto源码分析——序.md","raw":"---\ntitle: zepto源码分析——序\ndate: 2017-09-27 11:00:12\ntags: [源码,JavaScript,zepto,自述]\ncategories: 编程\n---\n\n### 为什么17年还要读zepto的源码？\n问这个问题首先要清除为什么读源码。[程序员阅读源码是一种什么心态？源码对编程意义何在？如何才能更好阅读代码？](!https://www.zhihu.com/question/29765945)这个问题高票答案基本上已经解释的很好了，但我还想再补充几点。\n<!-- more -->\n    - 向优秀的人学习，这个毫无疑问。\n    - 人大多是依靠模仿学习的，想要模仿，必须先了解。\n    - 巩固基础，而基础有多重要就不用说了吧。\n\n确实mvvm框架极火爆，也的确好用，但是依我现在目前的水平来看（js基础不是很牢，计算机基础也跟不上），学习优秀库是一个极其方便且好用的学习以及复习策略。\n\n### 为什么是zepto？\nzepto大家都说好。\n还有一点是在几个月以前我已经根据前辈的源码分析熟悉了一遍并自己仿制了一个类zepto的库，重拾起来应该更轻松。\n还有一点，zepto的分析已经有很多人进行了，资料也很多，基本上没什么大问题，但是大都有一点缺点，就是不够通俗易懂。依我来看前端JavaScript水平的差距是巨大的。初学者可能一点一点的啃过基础大部头，以为自己已经了解了JavaScript，却被实际的各种用法所困惑。\n我作为一个初学者，希望可以通过阅读和拆析zepto的源码来略微的垫高这一沟壑。\n\n### 究竟怎么阅读？\n读之前首先一定要会用吧，如果不会用建议去看看zepto的文档，和jQuery很像。\n会了基本的用法之后就可以准备阅读了。\n首先需要源代码的源文件，其次要找好的资料。\n\n#### 什么才算是好的资料？\n在我看来至少要满足以下几点：\n\n    - 语句通顺易懂\n    - 不办弄概念\n    - 最好能引导人进行主动阅读\n    - 对一些概念进行扩展\n\n在zepto源码分析的诸多资料中，个人认为称的上好的资料应当是王福朋老师的[zepto设计和源码分析](!http://www.imooc.com/learn/745),在慕课网上的课程讲解十分详细，但个人推荐阅读[文字版](!https://www.kancloud.cn/wangfupeng/zepto-design-srouce/173689).\n在js进阶的资料中，个人认为最好的应当是曾探老师的[JavaScript设计模式与开发实践](!https://book.douban.com/subject/26382780/)","slug":"zepto源码分析——序","published":1,"updated":"2021-08-26T01:54:47.292Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6uv0006uh1yof1qgaji","content":"<h3 id=\"为什么17年还要读zepto的源码？\"><a href=\"#为什么17年还要读zepto的源码？\" class=\"headerlink\" title=\"为什么17年还要读zepto的源码？\"></a>为什么17年还要读zepto的源码？</h3><p>问这个问题首先要清除为什么读源码。<a href=\"!https://www.zhihu.com/question/29765945\">程序员阅读源码是一种什么心态？源码对编程意义何在？如何才能更好阅读代码？</a>这个问题高票答案基本上已经解释的很好了，但我还想再补充几点。<br><a id=\"more\"></a></p>\n<pre><code>- 向优秀的人学习，这个毫无疑问。\n- 人大多是依靠模仿学习的，想要模仿，必须先了解。\n- 巩固基础，而基础有多重要就不用说了吧。\n</code></pre><p>确实mvvm框架极火爆，也的确好用，但是依我现在目前的水平来看（js基础不是很牢，计算机基础也跟不上），学习优秀库是一个极其方便且好用的学习以及复习策略。</p>\n<h3 id=\"为什么是zepto？\"><a href=\"#为什么是zepto？\" class=\"headerlink\" title=\"为什么是zepto？\"></a>为什么是zepto？</h3><p>zepto大家都说好。<br>还有一点是在几个月以前我已经根据前辈的源码分析熟悉了一遍并自己仿制了一个类zepto的库，重拾起来应该更轻松。<br>还有一点，zepto的分析已经有很多人进行了，资料也很多，基本上没什么大问题，但是大都有一点缺点，就是不够通俗易懂。依我来看前端JavaScript水平的差距是巨大的。初学者可能一点一点的啃过基础大部头，以为自己已经了解了JavaScript，却被实际的各种用法所困惑。<br>我作为一个初学者，希望可以通过阅读和拆析zepto的源码来略微的垫高这一沟壑。</p>\n<h3 id=\"究竟怎么阅读？\"><a href=\"#究竟怎么阅读？\" class=\"headerlink\" title=\"究竟怎么阅读？\"></a>究竟怎么阅读？</h3><p>读之前首先一定要会用吧，如果不会用建议去看看zepto的文档，和jQuery很像。<br>会了基本的用法之后就可以准备阅读了。<br>首先需要源代码的源文件，其次要找好的资料。</p>\n<h4 id=\"什么才算是好的资料？\"><a href=\"#什么才算是好的资料？\" class=\"headerlink\" title=\"什么才算是好的资料？\"></a>什么才算是好的资料？</h4><p>在我看来至少要满足以下几点：</p>\n<pre><code>- 语句通顺易懂\n- 不办弄概念\n- 最好能引导人进行主动阅读\n- 对一些概念进行扩展\n</code></pre><p>在zepto源码分析的诸多资料中，个人认为称的上好的资料应当是王福朋老师的<a href=\"!http://www.imooc.com/learn/745\">zepto设计和源码分析</a>,在慕课网上的课程讲解十分详细，但个人推荐阅读<a href=\"!https://www.kancloud.cn/wangfupeng/zepto-design-srouce/173689\">文字版</a>.<br>在js进阶的资料中，个人认为最好的应当是曾探老师的<a href=\"!https://book.douban.com/subject/26382780/\">JavaScript设计模式与开发实践</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"为什么17年还要读zepto的源码？\"><a href=\"#为什么17年还要读zepto的源码？\" class=\"headerlink\" title=\"为什么17年还要读zepto的源码？\"></a>为什么17年还要读zepto的源码？</h3><p>问这个问题首先要清除为什么读源码。<a href=\"!https://www.zhihu.com/question/29765945\">程序员阅读源码是一种什么心态？源码对编程意义何在？如何才能更好阅读代码？</a>这个问题高票答案基本上已经解释的很好了，但我还想再补充几点。<br>","more":"</p>\n<pre><code>- 向优秀的人学习，这个毫无疑问。\n- 人大多是依靠模仿学习的，想要模仿，必须先了解。\n- 巩固基础，而基础有多重要就不用说了吧。\n</code></pre><p>确实mvvm框架极火爆，也的确好用，但是依我现在目前的水平来看（js基础不是很牢，计算机基础也跟不上），学习优秀库是一个极其方便且好用的学习以及复习策略。</p>\n<h3 id=\"为什么是zepto？\"><a href=\"#为什么是zepto？\" class=\"headerlink\" title=\"为什么是zepto？\"></a>为什么是zepto？</h3><p>zepto大家都说好。<br>还有一点是在几个月以前我已经根据前辈的源码分析熟悉了一遍并自己仿制了一个类zepto的库，重拾起来应该更轻松。<br>还有一点，zepto的分析已经有很多人进行了，资料也很多，基本上没什么大问题，但是大都有一点缺点，就是不够通俗易懂。依我来看前端JavaScript水平的差距是巨大的。初学者可能一点一点的啃过基础大部头，以为自己已经了解了JavaScript，却被实际的各种用法所困惑。<br>我作为一个初学者，希望可以通过阅读和拆析zepto的源码来略微的垫高这一沟壑。</p>\n<h3 id=\"究竟怎么阅读？\"><a href=\"#究竟怎么阅读？\" class=\"headerlink\" title=\"究竟怎么阅读？\"></a>究竟怎么阅读？</h3><p>读之前首先一定要会用吧，如果不会用建议去看看zepto的文档，和jQuery很像。<br>会了基本的用法之后就可以准备阅读了。<br>首先需要源代码的源文件，其次要找好的资料。</p>\n<h4 id=\"什么才算是好的资料？\"><a href=\"#什么才算是好的资料？\" class=\"headerlink\" title=\"什么才算是好的资料？\"></a>什么才算是好的资料？</h4><p>在我看来至少要满足以下几点：</p>\n<pre><code>- 语句通顺易懂\n- 不办弄概念\n- 最好能引导人进行主动阅读\n- 对一些概念进行扩展\n</code></pre><p>在zepto源码分析的诸多资料中，个人认为称的上好的资料应当是王福朋老师的<a href=\"!http://www.imooc.com/learn/745\">zepto设计和源码分析</a>,在慕课网上的课程讲解十分详细，但个人推荐阅读<a href=\"!https://www.kancloud.cn/wangfupeng/zepto-design-srouce/173689\">文字版</a>.<br>在js进阶的资料中，个人认为最好的应当是曾探老师的<a href=\"!https://book.douban.com/subject/26382780/\">JavaScript设计模式与开发实践</a></p>"},{"title":"北京之行","date":"2018-09-13T13:29:12.000Z","_content":"# 北京之行\n\n## 行程篇\n\n9.8早上火车过去，9.11晚9点坐火车回来，全是Z开头，都是坐6个小时左右\n\n9.8早上坐火车真心不算累，也可能大早上神清气爽，两个人开开心心吃饱喝足再出发的关系，但是，晚上回来的时候简直累死！！\n\n### 火车篇\n\n- 火车硬座上睡觉是真心不舒服，时间再短也不行，而且还挤的慌。最最重要的是，我俩居然被分开了。。。为啥买票一个订单两个座会差那么多啊摔！！！\n\n- 去北京路上的风景挺好的，蓝天白云，看着电影吃着牛肉，没事望望玉米田。\n ![](https://ws1.sinaimg.cn/large/690f0543ly1fv80e42h88j221s1jce81.jpg)\n 小虫子乱入\n ![](https://ws1.sinaimg.cn/large/690f0543ly1fv80d57ja9j221s1jcu0x.jpg)\n### 景点篇\n- 故宫真的是跑断腿，但是建筑的宏伟霸气加上蓝天白云，超级超级美。\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80envdyqj221s1jcnpd.jpg)\n- 天安门广场也还好，各种震撼，特别搭配蓝天白云，顺便知道那么一点历史，心里特别有感觉，自己像一个伪历史见证者。但是天安门那一区域进去前要安检，但是这个安检只是做做样子，我觉着主要作用还是降低人流量，刷身份证才能进。不知道海外同胞是怎么过安检呢？\n- 中关村下了车，没感觉有啥特别的，反倒像奸商聚集地，歇了一会走人了。\n- 北大清华两校没进去，北大是迎接新生呢，不让外来游客参观，清华园那边不想跑了。所以两个都没看成，只看了外面的样子。不过就我看到的，两个学校的校门是真的小，感觉其他学校校门都是一个比一个大，这是我们学校不用只看门面的意思吗？\n- 圆明园现在应该是只剩下旅游局在骗钱了，去游客中心存包人家不让存，可能是过点了（下午两点），印象分极低。当然，也可能是当时我俩都太累了，所以评价有失公道。里面大概是天鹅湖、沙盘模型、大水法（没被烧到和抢走的残石）。\n  - 看到大水法其实也挺有感慨的，毕竟国家屈辱的历史，不过更多的是百年前底层人民的悲惨，皇帝尚且有这么豪华巨大的园林（故宫的5倍大小），底层人民在面对战争的时候有什么呢？可能只剩下想活下去的意志了吧。然而不要偷这些名贵的文物啊、古树啊、石料啊，现在看来都是无价宝啊大爷们，你们把古树烧掉了弄成碳卖钱很不划算啊啊啊。当然树还能再长，和平万岁。\n  - 沙盘模型就是一个圆明园的缩略模型，离东门很近，路过了看一看还行。\n  - 天鹅湖没太有印象，当然风景很好~\n\n### 食物篇\n\n并不知道北京的特色是什么，灵光一闪那就是吃火锅了，老北京火锅，大铜锅，涮羊肉，美滋滋。\n\n其实是没这个计划的，因为没钱，本来准备是看到啥吃啥，然而几乎上啥也没看到，要么看起来高级不敢进，要么小小餐馆还是不敢进。况且京城看起来真的是荒凉，不知道是大还是人都在外围或者是在工作，真真的看起来荒凉。人少买东西的少，但是比郑州要干净太多了。\n\n早上在普通餐馆吃了东西，还行，不贵，听着人说带京味儿的口音还挺有意思。\n\n跑过故宫后那个累，然而故宫北门周边并没有那种坐下来就吃的小馆子。于是北门涮肉走起。\n\n从故宫北门走了约1.7公里，期间的小巷子小破路一度让我认为是不是走错了。还好在倒下前走到了。\n\n说下食物，北京的铜锅涮肉都讲究清汤，一个大铜锅（给我们的是小的→_→)，中间是碳，汤开了就能咕嘟咕嘟的涮起肉来。\n\n这个清汤锅底收我20块好不爽啊，我好穷⊙︿⊙\n\n鲜切羊肉一流，其他的都是还行，鲜切羊肉非常好吃，怎么描述那种感觉呢？我能说记不清了嘛。。。\n\n其他的都是日常火锅，总之鲜切羊肉必点，39 五两。（顺便送一个伞，遮阳伞忘店里了╯﹏╰）\n\n在这次北门火锅后还吃了另一家酒店不远的羊火涮肉，同样的操作，但是便宜太多，作为吃饱喝足的地方那是极好的，想吃特色肉这里就不太行了，都是冷冻的，鲜切（名义）羊肉吃起来也没那种感觉。\n\n好像只是吃了两顿火锅次次吃到饱，吃饭次数好少~\n\n## 演唱会篇\n\n去北京当然是为了看花花演唱会啦，提前准备了这么久，不好好享受演唱会怎么行！！！\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80eho3chj221s1jcqv5.jpg)\n\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80elt238j221s1jcnpd.jpg)\n\n所以我跑神了好多，摔。\n\n心里压力大是一方面，我来说说让我出戏的要点：\n\n- 98场\n  - 那个位置已经快是距花花最远的地方了，以我的视力很难看清楚，举着望远镜也不现实（还是只能看屏幕，看人还是远远的看的感觉）\n  - 乐器声要不要这么大啊，这一场说实话人声很小，不知道是混音的关系还是座位的关系。\n  - 总之我看不到也听不到人声，只能随着音乐嗨，进不了状态，频频出戏\n- 99场\n  - 团票的位置果然更好，但是坐的更高更远了，能看到花花的影子，大屏幕还是看不太清。\n  - 跑了一天了真心累\n\n个人最喜欢的两首：地球之盐、我~\n刚好一首开场，一首收尾~\n\n话说花花真的是太拼，嗓子做了雾化打了封闭，结果还是唱，而且可怕的是高音依然稳，虽然第二场有所收敛但同样各种炸，果然要吹爆我花。\n\n```\n封闭主要是指将激素类的药物和局部麻醉药物混合在一起注射到疼痛或者炎症的部位，\n```\n\n但是也太拼了，身体会受不了的，吸血公司也是够够的：\n\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80okhevwj20qo1hcter.jpg)\n\n看这行程\n\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80okmja8j20k00m1jtg.jpg)\n\n希望花花能早日离开这种吸血公司~\n\n---\n\n总结这次北京行：开心~\n\n做人嘛，最重要的就是开心。\n\n努力自由咯。","source":"_posts/北京之行.md","raw":"---\ntitle: 北京之行\ndate: 2018-09-13 21:29:12\ntags: [生活,华晨宇,旅游]\n---\n# 北京之行\n\n## 行程篇\n\n9.8早上火车过去，9.11晚9点坐火车回来，全是Z开头，都是坐6个小时左右\n\n9.8早上坐火车真心不算累，也可能大早上神清气爽，两个人开开心心吃饱喝足再出发的关系，但是，晚上回来的时候简直累死！！\n\n### 火车篇\n\n- 火车硬座上睡觉是真心不舒服，时间再短也不行，而且还挤的慌。最最重要的是，我俩居然被分开了。。。为啥买票一个订单两个座会差那么多啊摔！！！\n\n- 去北京路上的风景挺好的，蓝天白云，看着电影吃着牛肉，没事望望玉米田。\n ![](https://ws1.sinaimg.cn/large/690f0543ly1fv80e42h88j221s1jce81.jpg)\n 小虫子乱入\n ![](https://ws1.sinaimg.cn/large/690f0543ly1fv80d57ja9j221s1jcu0x.jpg)\n### 景点篇\n- 故宫真的是跑断腿，但是建筑的宏伟霸气加上蓝天白云，超级超级美。\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80envdyqj221s1jcnpd.jpg)\n- 天安门广场也还好，各种震撼，特别搭配蓝天白云，顺便知道那么一点历史，心里特别有感觉，自己像一个伪历史见证者。但是天安门那一区域进去前要安检，但是这个安检只是做做样子，我觉着主要作用还是降低人流量，刷身份证才能进。不知道海外同胞是怎么过安检呢？\n- 中关村下了车，没感觉有啥特别的，反倒像奸商聚集地，歇了一会走人了。\n- 北大清华两校没进去，北大是迎接新生呢，不让外来游客参观，清华园那边不想跑了。所以两个都没看成，只看了外面的样子。不过就我看到的，两个学校的校门是真的小，感觉其他学校校门都是一个比一个大，这是我们学校不用只看门面的意思吗？\n- 圆明园现在应该是只剩下旅游局在骗钱了，去游客中心存包人家不让存，可能是过点了（下午两点），印象分极低。当然，也可能是当时我俩都太累了，所以评价有失公道。里面大概是天鹅湖、沙盘模型、大水法（没被烧到和抢走的残石）。\n  - 看到大水法其实也挺有感慨的，毕竟国家屈辱的历史，不过更多的是百年前底层人民的悲惨，皇帝尚且有这么豪华巨大的园林（故宫的5倍大小），底层人民在面对战争的时候有什么呢？可能只剩下想活下去的意志了吧。然而不要偷这些名贵的文物啊、古树啊、石料啊，现在看来都是无价宝啊大爷们，你们把古树烧掉了弄成碳卖钱很不划算啊啊啊。当然树还能再长，和平万岁。\n  - 沙盘模型就是一个圆明园的缩略模型，离东门很近，路过了看一看还行。\n  - 天鹅湖没太有印象，当然风景很好~\n\n### 食物篇\n\n并不知道北京的特色是什么，灵光一闪那就是吃火锅了，老北京火锅，大铜锅，涮羊肉，美滋滋。\n\n其实是没这个计划的，因为没钱，本来准备是看到啥吃啥，然而几乎上啥也没看到，要么看起来高级不敢进，要么小小餐馆还是不敢进。况且京城看起来真的是荒凉，不知道是大还是人都在外围或者是在工作，真真的看起来荒凉。人少买东西的少，但是比郑州要干净太多了。\n\n早上在普通餐馆吃了东西，还行，不贵，听着人说带京味儿的口音还挺有意思。\n\n跑过故宫后那个累，然而故宫北门周边并没有那种坐下来就吃的小馆子。于是北门涮肉走起。\n\n从故宫北门走了约1.7公里，期间的小巷子小破路一度让我认为是不是走错了。还好在倒下前走到了。\n\n说下食物，北京的铜锅涮肉都讲究清汤，一个大铜锅（给我们的是小的→_→)，中间是碳，汤开了就能咕嘟咕嘟的涮起肉来。\n\n这个清汤锅底收我20块好不爽啊，我好穷⊙︿⊙\n\n鲜切羊肉一流，其他的都是还行，鲜切羊肉非常好吃，怎么描述那种感觉呢？我能说记不清了嘛。。。\n\n其他的都是日常火锅，总之鲜切羊肉必点，39 五两。（顺便送一个伞，遮阳伞忘店里了╯﹏╰）\n\n在这次北门火锅后还吃了另一家酒店不远的羊火涮肉，同样的操作，但是便宜太多，作为吃饱喝足的地方那是极好的，想吃特色肉这里就不太行了，都是冷冻的，鲜切（名义）羊肉吃起来也没那种感觉。\n\n好像只是吃了两顿火锅次次吃到饱，吃饭次数好少~\n\n## 演唱会篇\n\n去北京当然是为了看花花演唱会啦，提前准备了这么久，不好好享受演唱会怎么行！！！\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80eho3chj221s1jcqv5.jpg)\n\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80elt238j221s1jcnpd.jpg)\n\n所以我跑神了好多，摔。\n\n心里压力大是一方面，我来说说让我出戏的要点：\n\n- 98场\n  - 那个位置已经快是距花花最远的地方了，以我的视力很难看清楚，举着望远镜也不现实（还是只能看屏幕，看人还是远远的看的感觉）\n  - 乐器声要不要这么大啊，这一场说实话人声很小，不知道是混音的关系还是座位的关系。\n  - 总之我看不到也听不到人声，只能随着音乐嗨，进不了状态，频频出戏\n- 99场\n  - 团票的位置果然更好，但是坐的更高更远了，能看到花花的影子，大屏幕还是看不太清。\n  - 跑了一天了真心累\n\n个人最喜欢的两首：地球之盐、我~\n刚好一首开场，一首收尾~\n\n话说花花真的是太拼，嗓子做了雾化打了封闭，结果还是唱，而且可怕的是高音依然稳，虽然第二场有所收敛但同样各种炸，果然要吹爆我花。\n\n```\n封闭主要是指将激素类的药物和局部麻醉药物混合在一起注射到疼痛或者炎症的部位，\n```\n\n但是也太拼了，身体会受不了的，吸血公司也是够够的：\n\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80okhevwj20qo1hcter.jpg)\n\n看这行程\n\n![](https://ws1.sinaimg.cn/large/690f0543ly1fv80okmja8j20k00m1jtg.jpg)\n\n希望花花能早日离开这种吸血公司~\n\n---\n\n总结这次北京行：开心~\n\n做人嘛，最重要的就是开心。\n\n努力自由咯。","slug":"北京之行","published":1,"updated":"2021-08-26T01:54:47.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6uw0007uh1ynyqtnyeu","content":"<h1 id=\"北京之行\"><a href=\"#北京之行\" class=\"headerlink\" title=\"北京之行\"></a>北京之行</h1><h2 id=\"行程篇\"><a href=\"#行程篇\" class=\"headerlink\" title=\"行程篇\"></a>行程篇</h2><p>9.8早上火车过去，9.11晚9点坐火车回来，全是Z开头，都是坐6个小时左右</p>\n<p>9.8早上坐火车真心不算累，也可能大早上神清气爽，两个人开开心心吃饱喝足再出发的关系，但是，晚上回来的时候简直累死！！</p>\n<h3 id=\"火车篇\"><a href=\"#火车篇\" class=\"headerlink\" title=\"火车篇\"></a>火车篇</h3><ul>\n<li><p>火车硬座上睡觉是真心不舒服，时间再短也不行，而且还挤的慌。最最重要的是，我俩居然被分开了。。。为啥买票一个订单两个座会差那么多啊摔！！！</p>\n</li>\n<li><p>去北京路上的风景挺好的，蓝天白云，看着电影吃着牛肉，没事望望玉米田。<br><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80e42h88j221s1jce81.jpg\" alt><br>小虫子乱入<br><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80d57ja9j221s1jcu0x.jpg\" alt></p>\n<h3 id=\"景点篇\"><a href=\"#景点篇\" class=\"headerlink\" title=\"景点篇\"></a>景点篇</h3></li>\n<li>故宫真的是跑断腿，但是建筑的宏伟霸气加上蓝天白云，超级超级美。<br><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80envdyqj221s1jcnpd.jpg\" alt></li>\n<li>天安门广场也还好，各种震撼，特别搭配蓝天白云，顺便知道那么一点历史，心里特别有感觉，自己像一个伪历史见证者。但是天安门那一区域进去前要安检，但是这个安检只是做做样子，我觉着主要作用还是降低人流量，刷身份证才能进。不知道海外同胞是怎么过安检呢？</li>\n<li>中关村下了车，没感觉有啥特别的，反倒像奸商聚集地，歇了一会走人了。</li>\n<li>北大清华两校没进去，北大是迎接新生呢，不让外来游客参观，清华园那边不想跑了。所以两个都没看成，只看了外面的样子。不过就我看到的，两个学校的校门是真的小，感觉其他学校校门都是一个比一个大，这是我们学校不用只看门面的意思吗？</li>\n<li>圆明园现在应该是只剩下旅游局在骗钱了，去游客中心存包人家不让存，可能是过点了（下午两点），印象分极低。当然，也可能是当时我俩都太累了，所以评价有失公道。里面大概是天鹅湖、沙盘模型、大水法（没被烧到和抢走的残石）。<ul>\n<li>看到大水法其实也挺有感慨的，毕竟国家屈辱的历史，不过更多的是百年前底层人民的悲惨，皇帝尚且有这么豪华巨大的园林（故宫的5倍大小），底层人民在面对战争的时候有什么呢？可能只剩下想活下去的意志了吧。然而不要偷这些名贵的文物啊、古树啊、石料啊，现在看来都是无价宝啊大爷们，你们把古树烧掉了弄成碳卖钱很不划算啊啊啊。当然树还能再长，和平万岁。</li>\n<li>沙盘模型就是一个圆明园的缩略模型，离东门很近，路过了看一看还行。</li>\n<li>天鹅湖没太有印象，当然风景很好~</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"食物篇\"><a href=\"#食物篇\" class=\"headerlink\" title=\"食物篇\"></a>食物篇</h3><p>并不知道北京的特色是什么，灵光一闪那就是吃火锅了，老北京火锅，大铜锅，涮羊肉，美滋滋。</p>\n<p>其实是没这个计划的，因为没钱，本来准备是看到啥吃啥，然而几乎上啥也没看到，要么看起来高级不敢进，要么小小餐馆还是不敢进。况且京城看起来真的是荒凉，不知道是大还是人都在外围或者是在工作，真真的看起来荒凉。人少买东西的少，但是比郑州要干净太多了。</p>\n<p>早上在普通餐馆吃了东西，还行，不贵，听着人说带京味儿的口音还挺有意思。</p>\n<p>跑过故宫后那个累，然而故宫北门周边并没有那种坐下来就吃的小馆子。于是北门涮肉走起。</p>\n<p>从故宫北门走了约1.7公里，期间的小巷子小破路一度让我认为是不是走错了。还好在倒下前走到了。</p>\n<p>说下食物，北京的铜锅涮肉都讲究清汤，一个大铜锅（给我们的是小的→_→)，中间是碳，汤开了就能咕嘟咕嘟的涮起肉来。</p>\n<p>这个清汤锅底收我20块好不爽啊，我好穷⊙︿⊙</p>\n<p>鲜切羊肉一流，其他的都是还行，鲜切羊肉非常好吃，怎么描述那种感觉呢？我能说记不清了嘛。。。</p>\n<p>其他的都是日常火锅，总之鲜切羊肉必点，39 五两。（顺便送一个伞，遮阳伞忘店里了╯﹏╰）</p>\n<p>在这次北门火锅后还吃了另一家酒店不远的羊火涮肉，同样的操作，但是便宜太多，作为吃饱喝足的地方那是极好的，想吃特色肉这里就不太行了，都是冷冻的，鲜切（名义）羊肉吃起来也没那种感觉。</p>\n<p>好像只是吃了两顿火锅次次吃到饱，吃饭次数好少~</p>\n<h2 id=\"演唱会篇\"><a href=\"#演唱会篇\" class=\"headerlink\" title=\"演唱会篇\"></a>演唱会篇</h2><p>去北京当然是为了看花花演唱会啦，提前准备了这么久，不好好享受演唱会怎么行！！！<br><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80eho3chj221s1jcqv5.jpg\" alt></p>\n<p><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80elt238j221s1jcnpd.jpg\" alt></p>\n<p>所以我跑神了好多，摔。</p>\n<p>心里压力大是一方面，我来说说让我出戏的要点：</p>\n<ul>\n<li>98场<ul>\n<li>那个位置已经快是距花花最远的地方了，以我的视力很难看清楚，举着望远镜也不现实（还是只能看屏幕，看人还是远远的看的感觉）</li>\n<li>乐器声要不要这么大啊，这一场说实话人声很小，不知道是混音的关系还是座位的关系。</li>\n<li>总之我看不到也听不到人声，只能随着音乐嗨，进不了状态，频频出戏</li>\n</ul>\n</li>\n<li>99场<ul>\n<li>团票的位置果然更好，但是坐的更高更远了，能看到花花的影子，大屏幕还是看不太清。</li>\n<li>跑了一天了真心累</li>\n</ul>\n</li>\n</ul>\n<p>个人最喜欢的两首：地球之盐、我~<br>刚好一首开场，一首收尾~</p>\n<p>话说花花真的是太拼，嗓子做了雾化打了封闭，结果还是唱，而且可怕的是高音依然稳，虽然第二场有所收敛但同样各种炸，果然要吹爆我花。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">封闭主要是指将激素类的药物和局部麻醉药物混合在一起注射到疼痛或者炎症的部位，</span><br></pre></td></tr></table></figure>\n<p>但是也太拼了，身体会受不了的，吸血公司也是够够的：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80okhevwj20qo1hcter.jpg\" alt></p>\n<p>看这行程</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80okmja8j20k00m1jtg.jpg\" alt></p>\n<p>希望花花能早日离开这种吸血公司~</p>\n<hr>\n<p>总结这次北京行：开心~</p>\n<p>做人嘛，最重要的就是开心。</p>\n<p>努力自由咯。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"北京之行\"><a href=\"#北京之行\" class=\"headerlink\" title=\"北京之行\"></a>北京之行</h1><h2 id=\"行程篇\"><a href=\"#行程篇\" class=\"headerlink\" title=\"行程篇\"></a>行程篇</h2><p>9.8早上火车过去，9.11晚9点坐火车回来，全是Z开头，都是坐6个小时左右</p>\n<p>9.8早上坐火车真心不算累，也可能大早上神清气爽，两个人开开心心吃饱喝足再出发的关系，但是，晚上回来的时候简直累死！！</p>\n<h3 id=\"火车篇\"><a href=\"#火车篇\" class=\"headerlink\" title=\"火车篇\"></a>火车篇</h3><ul>\n<li><p>火车硬座上睡觉是真心不舒服，时间再短也不行，而且还挤的慌。最最重要的是，我俩居然被分开了。。。为啥买票一个订单两个座会差那么多啊摔！！！</p>\n</li>\n<li><p>去北京路上的风景挺好的，蓝天白云，看着电影吃着牛肉，没事望望玉米田。<br><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80e42h88j221s1jce81.jpg\" alt><br>小虫子乱入<br><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80d57ja9j221s1jcu0x.jpg\" alt></p>\n<h3 id=\"景点篇\"><a href=\"#景点篇\" class=\"headerlink\" title=\"景点篇\"></a>景点篇</h3></li>\n<li>故宫真的是跑断腿，但是建筑的宏伟霸气加上蓝天白云，超级超级美。<br><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80envdyqj221s1jcnpd.jpg\" alt></li>\n<li>天安门广场也还好，各种震撼，特别搭配蓝天白云，顺便知道那么一点历史，心里特别有感觉，自己像一个伪历史见证者。但是天安门那一区域进去前要安检，但是这个安检只是做做样子，我觉着主要作用还是降低人流量，刷身份证才能进。不知道海外同胞是怎么过安检呢？</li>\n<li>中关村下了车，没感觉有啥特别的，反倒像奸商聚集地，歇了一会走人了。</li>\n<li>北大清华两校没进去，北大是迎接新生呢，不让外来游客参观，清华园那边不想跑了。所以两个都没看成，只看了外面的样子。不过就我看到的，两个学校的校门是真的小，感觉其他学校校门都是一个比一个大，这是我们学校不用只看门面的意思吗？</li>\n<li>圆明园现在应该是只剩下旅游局在骗钱了，去游客中心存包人家不让存，可能是过点了（下午两点），印象分极低。当然，也可能是当时我俩都太累了，所以评价有失公道。里面大概是天鹅湖、沙盘模型、大水法（没被烧到和抢走的残石）。<ul>\n<li>看到大水法其实也挺有感慨的，毕竟国家屈辱的历史，不过更多的是百年前底层人民的悲惨，皇帝尚且有这么豪华巨大的园林（故宫的5倍大小），底层人民在面对战争的时候有什么呢？可能只剩下想活下去的意志了吧。然而不要偷这些名贵的文物啊、古树啊、石料啊，现在看来都是无价宝啊大爷们，你们把古树烧掉了弄成碳卖钱很不划算啊啊啊。当然树还能再长，和平万岁。</li>\n<li>沙盘模型就是一个圆明园的缩略模型，离东门很近，路过了看一看还行。</li>\n<li>天鹅湖没太有印象，当然风景很好~</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"食物篇\"><a href=\"#食物篇\" class=\"headerlink\" title=\"食物篇\"></a>食物篇</h3><p>并不知道北京的特色是什么，灵光一闪那就是吃火锅了，老北京火锅，大铜锅，涮羊肉，美滋滋。</p>\n<p>其实是没这个计划的，因为没钱，本来准备是看到啥吃啥，然而几乎上啥也没看到，要么看起来高级不敢进，要么小小餐馆还是不敢进。况且京城看起来真的是荒凉，不知道是大还是人都在外围或者是在工作，真真的看起来荒凉。人少买东西的少，但是比郑州要干净太多了。</p>\n<p>早上在普通餐馆吃了东西，还行，不贵，听着人说带京味儿的口音还挺有意思。</p>\n<p>跑过故宫后那个累，然而故宫北门周边并没有那种坐下来就吃的小馆子。于是北门涮肉走起。</p>\n<p>从故宫北门走了约1.7公里，期间的小巷子小破路一度让我认为是不是走错了。还好在倒下前走到了。</p>\n<p>说下食物，北京的铜锅涮肉都讲究清汤，一个大铜锅（给我们的是小的→_→)，中间是碳，汤开了就能咕嘟咕嘟的涮起肉来。</p>\n<p>这个清汤锅底收我20块好不爽啊，我好穷⊙︿⊙</p>\n<p>鲜切羊肉一流，其他的都是还行，鲜切羊肉非常好吃，怎么描述那种感觉呢？我能说记不清了嘛。。。</p>\n<p>其他的都是日常火锅，总之鲜切羊肉必点，39 五两。（顺便送一个伞，遮阳伞忘店里了╯﹏╰）</p>\n<p>在这次北门火锅后还吃了另一家酒店不远的羊火涮肉，同样的操作，但是便宜太多，作为吃饱喝足的地方那是极好的，想吃特色肉这里就不太行了，都是冷冻的，鲜切（名义）羊肉吃起来也没那种感觉。</p>\n<p>好像只是吃了两顿火锅次次吃到饱，吃饭次数好少~</p>\n<h2 id=\"演唱会篇\"><a href=\"#演唱会篇\" class=\"headerlink\" title=\"演唱会篇\"></a>演唱会篇</h2><p>去北京当然是为了看花花演唱会啦，提前准备了这么久，不好好享受演唱会怎么行！！！<br><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80eho3chj221s1jcqv5.jpg\" alt></p>\n<p><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80elt238j221s1jcnpd.jpg\" alt></p>\n<p>所以我跑神了好多，摔。</p>\n<p>心里压力大是一方面，我来说说让我出戏的要点：</p>\n<ul>\n<li>98场<ul>\n<li>那个位置已经快是距花花最远的地方了，以我的视力很难看清楚，举着望远镜也不现实（还是只能看屏幕，看人还是远远的看的感觉）</li>\n<li>乐器声要不要这么大啊，这一场说实话人声很小，不知道是混音的关系还是座位的关系。</li>\n<li>总之我看不到也听不到人声，只能随着音乐嗨，进不了状态，频频出戏</li>\n</ul>\n</li>\n<li>99场<ul>\n<li>团票的位置果然更好，但是坐的更高更远了，能看到花花的影子，大屏幕还是看不太清。</li>\n<li>跑了一天了真心累</li>\n</ul>\n</li>\n</ul>\n<p>个人最喜欢的两首：地球之盐、我~<br>刚好一首开场，一首收尾~</p>\n<p>话说花花真的是太拼，嗓子做了雾化打了封闭，结果还是唱，而且可怕的是高音依然稳，虽然第二场有所收敛但同样各种炸，果然要吹爆我花。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">封闭主要是指将激素类的药物和局部麻醉药物混合在一起注射到疼痛或者炎症的部位，</span><br></pre></td></tr></table></figure>\n<p>但是也太拼了，身体会受不了的，吸血公司也是够够的：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80okhevwj20qo1hcter.jpg\" alt></p>\n<p>看这行程</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/690f0543ly1fv80okmja8j20k00m1jtg.jpg\" alt></p>\n<p>希望花花能早日离开这种吸血公司~</p>\n<hr>\n<p>总结这次北京行：开心~</p>\n<p>做人嘛，最重要的就是开心。</p>\n<p>努力自由咯。</p>\n"},{"title":"手把手教你用Laravel-echo-server 建立广播系统","date":"2021-07-28T00:01:19.000Z","_content":"# 开始之前\n- Laravel并没有官方的Socket.IO 服务器，所以我们使用Laravel-echo-server 这个第三方库，只要正确配置，无缝接入Laravel\n- 需要会使用Laravel 的事件的写法\n- 确保config/broadcasting.php 中default 不为null\n  \n# 原理简述\nLaravel 广播系统的原理其实很简单，客户端与Socket.io服务端（Laravel-echo-server) 建立连接，服务端监听驱动器事件，当驱动器产生事件时，服务端（Laravel-echo-server）监听到事件并向指定频道发送事件消息，客户端监听指定频道，收取事件消息。\n\n# 建立连接\n## 驱动器\n本文使用Redis 作为驱动器, 请参考Laravel Redis 的配置项并保证正常使用。\n## 服务端（发送广播）\n### Laravel-echo-server\n#### 安装\n需要全局安装Laravel-echo-server。\n```\nnpm install -g laravel-echo-server\n```\n#### 初始化配置\n使用包自带的init 命令可以快速初始化配置文件\n```\nlaravel-echo-server init\n```\n首次使用可以一路回车，全使用默认配置，执行后路径下会生成 laravel-echo-server.json 文件，根据实际需要再修改配置信息。\n```json\n{\n  \"authHost\": \"dash.dev.car.co.uk\",\n  \"authEndpoint\": \"/broadcasting/auth\",\n  \"clients\": [\n    {\n      \"appId\": \"\",\n      \"key\": \"\"\n    }\n  ],\n  \"database\": \"redis\",\n  \"databaseConfig\": {\n    \"redis\": {\n      \"port\": \"6379\"\n    }\n  },\n  \"devMode\": false,\n  \"host\": null,\n  \"port\": \"6001\",\n  \"protocol\": \"http\",\n  \"socketio\": {},\n  \"secureOptions\": 67108864,\n  \"sslCertPath\": \"\",\n  \"sslKeyPath\": \"\",\n  \"sslCertChainPath\": \"\",\n  \"sslPassphrase\": \"\",\n  \"subscribers\": {\n    \"http\": true,\n    \"redis\": true\n  },\n  \"apiOriginAllow\": {\n    \"allowCors\": false,\n    \"allowOrigin\": \"\",\n    \"allowMethods\": \"\",\n    \"allowHeaders\": \"\"\n  }\n}\n```\n注意：\n- appId 是使用http 请求来触发广播的，如果只需要在Laravel 中使用Redis 触发广播，可以忽略此项配置。\n- 开发时建议devMode 设为true, 可以直观的看到连接及server 运行情况。\n- 注意驱动器的配置，给驱动器配置正确的地址及端口。\n- 跨域请求对cookies 有限制，注意合适的跨域配置\n\n#### 启动\n```\nlaravel-echo-server start\n```\n看到”Server ready!“ 证明server 已经启动成功了。\n### Laravel\n#### 触发广播事件\n广播依赖于事件系统，这样设计是有原因的。\n事件系统可以很好的解耦某个逻辑的不同响应，比如用户注册后可以短信、邮件等多种方式通知用户注册成功，并执行其他操作，使用一个事件及多个监听器就可以很好的解耦业务逻辑。\n##### 定义广播事件\n将事件实现 Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast\n```php\nuse Illuminate\\Broadcasting\\Channel;\nuse Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;\n\nclass BroadcastDemo implements ShouldBroadcast\n{\n    public function broadcastOn()\n    {\n        // need return a channel or channels\n        return new Channel('channel-demo');\n    }\n}\n```\n必须存在 broadcastOn方法，该方法返回一个频道或者频道数组，事件会被广播到这些频道。\n正常触发事件就可以触发广播。\n##### 广播数据\nLaravel 会默认将事件中public 属性自动序列化为广播数据，即允许客户端访问事件中的公有数据。\n但是也可以使用broadcastWith 方法更细粒度的控制广播数据。\n##### 广播驱动\n需要配置和laravel-echo-server 相同的驱动器，驱动器来实现发布-订阅模式，laravel 使用事件系统发布消息，laravel-echo-server订阅事件，做出回调（使用socket.io 推送消息），这里我们使用的是redis作为队列驱动程序，当laravel 触发推送到指定频道时，在redis-cli 中使用SUBSCRIBE 监听对应频道或所有频道也可以看到具体信息。\n\n#### 频道\n依然拿现实中的广播系统做类比，公共频道就像广播电台，客户端只要能连接到指定频道就都可以收听，但很多信息是不能放在公开频道上的，所以需要授权以进入频道。\n##### 频道认证\n当连接私有频道时，客户端向laravel-echo-server发起请求，laravel-echo-server 将此请求转发给Laravel 以判断是否应该授权。\nLaravel 默认授权路由为：/broadcasting/auth，通常来说使用\n```php\nBroadcast::routes();\n```\n就会注册授权路由，或者可以使用BroadcastManager 来更细粒化的控制。\n在routes/channels.php 中使用Broadcast::channel 方法定义授权回调，方法返回Boolean 值，回调中当前用户被当做第一个参数，额外的通配符参数会被作为后续参数。\n需要注意的是，由于通配符中也使用了「.」，所以参数中会只取第一个点前面的字符。实际使用中可以将「.」替换为其他字符来获取完整信息\n##### 仅广播给他人\n现实中，如果边听收音机边给电台热线打电话，收音机中肯定也会出现电话对话声，离得近了甚至会产生回音。\n网络中的广播系统自然也会有这种情况发生，但在网上是没法走开的，所以需要广播系统可以针对性的进行推送，避开触发此次广播的用户。\nlaravel 在每个请求中使用X-Socket-ID 来标识用户，客户端可以将X-Socket-ID 设为socketId，使用axios 时库会自动向header中添加，但使用其他请求库时可以在socket 连接建立后将X-Socket-ID配置如header，可以参考以下代码:\n```js\nechoInstance.connector.socket.on('connect', () => {\n  http.defaults.headers.common['X-Socket-Id'] = echoInstance.socketId();\n});\n```\n\n当请求携带有X-Socket-ID时，调用broadcast函数时使用toOthers 方法，即可将指定连接从广播接收者中排除。\n```php\nbroadcast(new BroadcastDemo())->toOthers();\n```\n到目前为止，我们已经构建了一个可以适应大部分需求的广播系统的发送，接下来我们看看如何配置客户端。\n## 客户端（接收广播）\n### 建立连接\n客户端需要使用 Socket.IO JavaScript库来建立文件，当启动laravel-echo-server 后，可以通过 server 地址及端口号获取Socket.IO 库，比如开发时通常使用http://localhost 与6001 端口，可以使用\n```url\nhttp://localhost:6001/socket.io/socket.io.js\n```\n获取到Socket.IO 库。\n如果需要手动在客户端添加Socket.IO 库，请注意socket.io.js 版本，目前只有2.x 版本可以正常使用。\n\n接着，我们需要在合适的时机建立实例化Echo(示例代码使用localhost 与6001端口)：\n```js\nimport Echo from \"laravel-echo\"\n\nconst EchoInstance = new Echo({\n    broadcaster: 'socket.io',\n    host: 'http://localhost:6001'\n});\n```\n实例化Echo 时，客户端的echo 库会发送http 请求到server 端请求建立连接。\n### 加入频道\n建立连接后可以使用echoInstance的channel 方法加入指定频道，使用listen 监听频道上的指定事件：\n```js\nechoInstance\n      .channel('channelName')\n      .listen('eventName', ()=>{\n        //   callback\n      })\n```\n需要退出频道时，使用leave 方法即可。\n","source":"_posts/手把手教你用Laravel-echo-server 建立广播系统.md","raw":"---\ntitle: 手把手教你用Laravel-echo-server 建立广播系统\ndate: 2021-07-28 08:01:19\ntags: ['laravel', 'WebSockets', 'web']\n---\n# 开始之前\n- Laravel并没有官方的Socket.IO 服务器，所以我们使用Laravel-echo-server 这个第三方库，只要正确配置，无缝接入Laravel\n- 需要会使用Laravel 的事件的写法\n- 确保config/broadcasting.php 中default 不为null\n  \n# 原理简述\nLaravel 广播系统的原理其实很简单，客户端与Socket.io服务端（Laravel-echo-server) 建立连接，服务端监听驱动器事件，当驱动器产生事件时，服务端（Laravel-echo-server）监听到事件并向指定频道发送事件消息，客户端监听指定频道，收取事件消息。\n\n# 建立连接\n## 驱动器\n本文使用Redis 作为驱动器, 请参考Laravel Redis 的配置项并保证正常使用。\n## 服务端（发送广播）\n### Laravel-echo-server\n#### 安装\n需要全局安装Laravel-echo-server。\n```\nnpm install -g laravel-echo-server\n```\n#### 初始化配置\n使用包自带的init 命令可以快速初始化配置文件\n```\nlaravel-echo-server init\n```\n首次使用可以一路回车，全使用默认配置，执行后路径下会生成 laravel-echo-server.json 文件，根据实际需要再修改配置信息。\n```json\n{\n  \"authHost\": \"dash.dev.car.co.uk\",\n  \"authEndpoint\": \"/broadcasting/auth\",\n  \"clients\": [\n    {\n      \"appId\": \"\",\n      \"key\": \"\"\n    }\n  ],\n  \"database\": \"redis\",\n  \"databaseConfig\": {\n    \"redis\": {\n      \"port\": \"6379\"\n    }\n  },\n  \"devMode\": false,\n  \"host\": null,\n  \"port\": \"6001\",\n  \"protocol\": \"http\",\n  \"socketio\": {},\n  \"secureOptions\": 67108864,\n  \"sslCertPath\": \"\",\n  \"sslKeyPath\": \"\",\n  \"sslCertChainPath\": \"\",\n  \"sslPassphrase\": \"\",\n  \"subscribers\": {\n    \"http\": true,\n    \"redis\": true\n  },\n  \"apiOriginAllow\": {\n    \"allowCors\": false,\n    \"allowOrigin\": \"\",\n    \"allowMethods\": \"\",\n    \"allowHeaders\": \"\"\n  }\n}\n```\n注意：\n- appId 是使用http 请求来触发广播的，如果只需要在Laravel 中使用Redis 触发广播，可以忽略此项配置。\n- 开发时建议devMode 设为true, 可以直观的看到连接及server 运行情况。\n- 注意驱动器的配置，给驱动器配置正确的地址及端口。\n- 跨域请求对cookies 有限制，注意合适的跨域配置\n\n#### 启动\n```\nlaravel-echo-server start\n```\n看到”Server ready!“ 证明server 已经启动成功了。\n### Laravel\n#### 触发广播事件\n广播依赖于事件系统，这样设计是有原因的。\n事件系统可以很好的解耦某个逻辑的不同响应，比如用户注册后可以短信、邮件等多种方式通知用户注册成功，并执行其他操作，使用一个事件及多个监听器就可以很好的解耦业务逻辑。\n##### 定义广播事件\n将事件实现 Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast\n```php\nuse Illuminate\\Broadcasting\\Channel;\nuse Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;\n\nclass BroadcastDemo implements ShouldBroadcast\n{\n    public function broadcastOn()\n    {\n        // need return a channel or channels\n        return new Channel('channel-demo');\n    }\n}\n```\n必须存在 broadcastOn方法，该方法返回一个频道或者频道数组，事件会被广播到这些频道。\n正常触发事件就可以触发广播。\n##### 广播数据\nLaravel 会默认将事件中public 属性自动序列化为广播数据，即允许客户端访问事件中的公有数据。\n但是也可以使用broadcastWith 方法更细粒度的控制广播数据。\n##### 广播驱动\n需要配置和laravel-echo-server 相同的驱动器，驱动器来实现发布-订阅模式，laravel 使用事件系统发布消息，laravel-echo-server订阅事件，做出回调（使用socket.io 推送消息），这里我们使用的是redis作为队列驱动程序，当laravel 触发推送到指定频道时，在redis-cli 中使用SUBSCRIBE 监听对应频道或所有频道也可以看到具体信息。\n\n#### 频道\n依然拿现实中的广播系统做类比，公共频道就像广播电台，客户端只要能连接到指定频道就都可以收听，但很多信息是不能放在公开频道上的，所以需要授权以进入频道。\n##### 频道认证\n当连接私有频道时，客户端向laravel-echo-server发起请求，laravel-echo-server 将此请求转发给Laravel 以判断是否应该授权。\nLaravel 默认授权路由为：/broadcasting/auth，通常来说使用\n```php\nBroadcast::routes();\n```\n就会注册授权路由，或者可以使用BroadcastManager 来更细粒化的控制。\n在routes/channels.php 中使用Broadcast::channel 方法定义授权回调，方法返回Boolean 值，回调中当前用户被当做第一个参数，额外的通配符参数会被作为后续参数。\n需要注意的是，由于通配符中也使用了「.」，所以参数中会只取第一个点前面的字符。实际使用中可以将「.」替换为其他字符来获取完整信息\n##### 仅广播给他人\n现实中，如果边听收音机边给电台热线打电话，收音机中肯定也会出现电话对话声，离得近了甚至会产生回音。\n网络中的广播系统自然也会有这种情况发生，但在网上是没法走开的，所以需要广播系统可以针对性的进行推送，避开触发此次广播的用户。\nlaravel 在每个请求中使用X-Socket-ID 来标识用户，客户端可以将X-Socket-ID 设为socketId，使用axios 时库会自动向header中添加，但使用其他请求库时可以在socket 连接建立后将X-Socket-ID配置如header，可以参考以下代码:\n```js\nechoInstance.connector.socket.on('connect', () => {\n  http.defaults.headers.common['X-Socket-Id'] = echoInstance.socketId();\n});\n```\n\n当请求携带有X-Socket-ID时，调用broadcast函数时使用toOthers 方法，即可将指定连接从广播接收者中排除。\n```php\nbroadcast(new BroadcastDemo())->toOthers();\n```\n到目前为止，我们已经构建了一个可以适应大部分需求的广播系统的发送，接下来我们看看如何配置客户端。\n## 客户端（接收广播）\n### 建立连接\n客户端需要使用 Socket.IO JavaScript库来建立文件，当启动laravel-echo-server 后，可以通过 server 地址及端口号获取Socket.IO 库，比如开发时通常使用http://localhost 与6001 端口，可以使用\n```url\nhttp://localhost:6001/socket.io/socket.io.js\n```\n获取到Socket.IO 库。\n如果需要手动在客户端添加Socket.IO 库，请注意socket.io.js 版本，目前只有2.x 版本可以正常使用。\n\n接着，我们需要在合适的时机建立实例化Echo(示例代码使用localhost 与6001端口)：\n```js\nimport Echo from \"laravel-echo\"\n\nconst EchoInstance = new Echo({\n    broadcaster: 'socket.io',\n    host: 'http://localhost:6001'\n});\n```\n实例化Echo 时，客户端的echo 库会发送http 请求到server 端请求建立连接。\n### 加入频道\n建立连接后可以使用echoInstance的channel 方法加入指定频道，使用listen 监听频道上的指定事件：\n```js\nechoInstance\n      .channel('channelName')\n      .listen('eventName', ()=>{\n        //   callback\n      })\n```\n需要退出频道时，使用leave 方法即可。\n","slug":"手把手教你用Laravel-echo-server 建立广播系统","published":1,"updated":"2021-08-26T03:41:36.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6ux0008uh1y2ym4wdyj","content":"<h1 id=\"开始之前\"><a href=\"#开始之前\" class=\"headerlink\" title=\"开始之前\"></a>开始之前</h1><ul>\n<li>Laravel并没有官方的Socket.IO 服务器，所以我们使用Laravel-echo-server 这个第三方库，只要正确配置，无缝接入Laravel</li>\n<li>需要会使用Laravel 的事件的写法</li>\n<li>确保config/broadcasting.php 中default 不为null</li>\n</ul>\n<h1 id=\"原理简述\"><a href=\"#原理简述\" class=\"headerlink\" title=\"原理简述\"></a>原理简述</h1><p>Laravel 广播系统的原理其实很简单，客户端与Socket.io服务端（Laravel-echo-server) 建立连接，服务端监听驱动器事件，当驱动器产生事件时，服务端（Laravel-echo-server）监听到事件并向指定频道发送事件消息，客户端监听指定频道，收取事件消息。</p>\n<h1 id=\"建立连接\"><a href=\"#建立连接\" class=\"headerlink\" title=\"建立连接\"></a>建立连接</h1><h2 id=\"驱动器\"><a href=\"#驱动器\" class=\"headerlink\" title=\"驱动器\"></a>驱动器</h2><p>本文使用Redis 作为驱动器, 请参考Laravel Redis 的配置项并保证正常使用。</p>\n<h2 id=\"服务端（发送广播）\"><a href=\"#服务端（发送广播）\" class=\"headerlink\" title=\"服务端（发送广播）\"></a>服务端（发送广播）</h2><h3 id=\"Laravel-echo-server\"><a href=\"#Laravel-echo-server\" class=\"headerlink\" title=\"Laravel-echo-server\"></a>Laravel-echo-server</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>需要全局安装Laravel-echo-server。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g laravel-echo-server</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"初始化配置\"><a href=\"#初始化配置\" class=\"headerlink\" title=\"初始化配置\"></a>初始化配置</h4><p>使用包自带的init 命令可以快速初始化配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">laravel-echo-server init</span><br></pre></td></tr></table></figure></p>\n<p>首次使用可以一路回车，全使用默认配置，执行后路径下会生成 laravel-echo-server.json 文件，根据实际需要再修改配置信息。<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"authHost\"</span>: <span class=\"string\">\"dash.dev.car.co.uk\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"authEndpoint\"</span>: <span class=\"string\">\"/broadcasting/auth\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"clients\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"appId\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">\"database\"</span>: <span class=\"string\">\"redis\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"databaseConfig\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"redis\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"port\"</span>: <span class=\"string\">\"6379\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"devMode\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"host\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"port\"</span>: <span class=\"string\">\"6001\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"protocol\"</span>: <span class=\"string\">\"http\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"socketio\"</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"secureOptions\"</span>: <span class=\"number\">67108864</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"sslCertPath\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"sslKeyPath\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"sslCertChainPath\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"sslPassphrase\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"subscribers\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"http\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"redis\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"apiOriginAllow\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"allowCors\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowOrigin\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowMethods\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowHeaders\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意：</p>\n<ul>\n<li>appId 是使用http 请求来触发广播的，如果只需要在Laravel 中使用Redis 触发广播，可以忽略此项配置。</li>\n<li>开发时建议devMode 设为true, 可以直观的看到连接及server 运行情况。</li>\n<li>注意驱动器的配置，给驱动器配置正确的地址及端口。</li>\n<li>跨域请求对cookies 有限制，注意合适的跨域配置</li>\n</ul>\n<h4 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">laravel-echo-server start</span><br></pre></td></tr></table></figure>\n<p>看到”Server ready!“ 证明server 已经启动成功了。</p>\n<h3 id=\"Laravel\"><a href=\"#Laravel\" class=\"headerlink\" title=\"Laravel\"></a>Laravel</h3><h4 id=\"触发广播事件\"><a href=\"#触发广播事件\" class=\"headerlink\" title=\"触发广播事件\"></a>触发广播事件</h4><p>广播依赖于事件系统，这样设计是有原因的。<br>事件系统可以很好的解耦某个逻辑的不同响应，比如用户注册后可以短信、邮件等多种方式通知用户注册成功，并执行其他操作，使用一个事件及多个监听器就可以很好的解耦业务逻辑。</p>\n<h5 id=\"定义广播事件\"><a href=\"#定义广播事件\" class=\"headerlink\" title=\"定义广播事件\"></a>定义广播事件</h5><p>将事件实现 Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Broadcasting</span>\\<span class=\"title\">Channel</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Contracts</span>\\<span class=\"title\">Broadcasting</span>\\<span class=\"title\">ShouldBroadcast</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BroadcastDemo</span> <span class=\"keyword\">implements</span> <span class=\"title\">ShouldBroadcast</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">broadcastOn</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// need return a channel or channels</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Channel(<span class=\"string\">'channel-demo'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>必须存在 broadcastOn方法，该方法返回一个频道或者频道数组，事件会被广播到这些频道。<br>正常触发事件就可以触发广播。</p>\n<h5 id=\"广播数据\"><a href=\"#广播数据\" class=\"headerlink\" title=\"广播数据\"></a>广播数据</h5><p>Laravel 会默认将事件中public 属性自动序列化为广播数据，即允许客户端访问事件中的公有数据。<br>但是也可以使用broadcastWith 方法更细粒度的控制广播数据。</p>\n<h5 id=\"广播驱动\"><a href=\"#广播驱动\" class=\"headerlink\" title=\"广播驱动\"></a>广播驱动</h5><p>需要配置和laravel-echo-server 相同的驱动器，驱动器来实现发布-订阅模式，laravel 使用事件系统发布消息，laravel-echo-server订阅事件，做出回调（使用socket.io 推送消息），这里我们使用的是redis作为队列驱动程序，当laravel 触发推送到指定频道时，在redis-cli 中使用SUBSCRIBE 监听对应频道或所有频道也可以看到具体信息。</p>\n<h4 id=\"频道\"><a href=\"#频道\" class=\"headerlink\" title=\"频道\"></a>频道</h4><p>依然拿现实中的广播系统做类比，公共频道就像广播电台，客户端只要能连接到指定频道就都可以收听，但很多信息是不能放在公开频道上的，所以需要授权以进入频道。</p>\n<h5 id=\"频道认证\"><a href=\"#频道认证\" class=\"headerlink\" title=\"频道认证\"></a>频道认证</h5><p>当连接私有频道时，客户端向laravel-echo-server发起请求，laravel-echo-server 将此请求转发给Laravel 以判断是否应该授权。<br>Laravel 默认授权路由为：/broadcasting/auth，通常来说使用<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Broadcast::routes();</span><br></pre></td></tr></table></figure></p>\n<p>就会注册授权路由，或者可以使用BroadcastManager 来更细粒化的控制。<br>在routes/channels.php 中使用Broadcast::channel 方法定义授权回调，方法返回Boolean 值，回调中当前用户被当做第一个参数，额外的通配符参数会被作为后续参数。<br>需要注意的是，由于通配符中也使用了「.」，所以参数中会只取第一个点前面的字符。实际使用中可以将「.」替换为其他字符来获取完整信息</p>\n<h5 id=\"仅广播给他人\"><a href=\"#仅广播给他人\" class=\"headerlink\" title=\"仅广播给他人\"></a>仅广播给他人</h5><p>现实中，如果边听收音机边给电台热线打电话，收音机中肯定也会出现电话对话声，离得近了甚至会产生回音。<br>网络中的广播系统自然也会有这种情况发生，但在网上是没法走开的，所以需要广播系统可以针对性的进行推送，避开触发此次广播的用户。<br>laravel 在每个请求中使用X-Socket-ID 来标识用户，客户端可以将X-Socket-ID 设为socketId，使用axios 时库会自动向header中添加，但使用其他请求库时可以在socket 连接建立后将X-Socket-ID配置如header，可以参考以下代码:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echoInstance.connector.socket.on(<span class=\"string\">'connect'</span>, () =&gt; &#123;</span><br><span class=\"line\">  http.defaults.headers.common[<span class=\"string\">'X-Socket-Id'</span>] = echoInstance.socketId();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>当请求携带有X-Socket-ID时，调用broadcast函数时使用toOthers 方法，即可将指定连接从广播接收者中排除。<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">broadcast(<span class=\"keyword\">new</span> BroadcastDemo())-&gt;toOthers();</span><br></pre></td></tr></table></figure></p>\n<p>到目前为止，我们已经构建了一个可以适应大部分需求的广播系统的发送，接下来我们看看如何配置客户端。</p>\n<h2 id=\"客户端（接收广播）\"><a href=\"#客户端（接收广播）\" class=\"headerlink\" title=\"客户端（接收广播）\"></a>客户端（接收广播）</h2><h3 id=\"建立连接-1\"><a href=\"#建立连接-1\" class=\"headerlink\" title=\"建立连接\"></a>建立连接</h3><p>客户端需要使用 Socket.IO JavaScript库来建立文件，当启动laravel-echo-server 后，可以通过 server 地址及端口号获取Socket.IO 库，比如开发时通常使用<a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">http://localhost</a> 与6001 端口，可以使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:6001/socket.io/socket.io.js</span><br></pre></td></tr></table></figure></p>\n<p>获取到Socket.IO 库。<br>如果需要手动在客户端添加Socket.IO 库，请注意socket.io.js 版本，目前只有2.x 版本可以正常使用。</p>\n<p>接着，我们需要在合适的时机建立实例化Echo(示例代码使用localhost 与6001端口)：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Echo <span class=\"keyword\">from</span> <span class=\"string\">\"laravel-echo\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> EchoInstance = <span class=\"keyword\">new</span> Echo(&#123;</span><br><span class=\"line\">    broadcaster: <span class=\"string\">'socket.io'</span>,</span><br><span class=\"line\">    host: <span class=\"string\">'http://localhost:6001'</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>实例化Echo 时，客户端的echo 库会发送http 请求到server 端请求建立连接。</p>\n<h3 id=\"加入频道\"><a href=\"#加入频道\" class=\"headerlink\" title=\"加入频道\"></a>加入频道</h3><p>建立连接后可以使用echoInstance的channel 方法加入指定频道，使用listen 监听频道上的指定事件：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echoInstance</span><br><span class=\"line\">      .channel(<span class=\"string\">'channelName'</span>)</span><br><span class=\"line\">      .listen(<span class=\"string\">'eventName'</span>, ()=&gt;&#123;</span><br><span class=\"line\">        <span class=\"comment\">//   callback</span></span><br><span class=\"line\">      &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>需要退出频道时，使用leave 方法即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"开始之前\"><a href=\"#开始之前\" class=\"headerlink\" title=\"开始之前\"></a>开始之前</h1><ul>\n<li>Laravel并没有官方的Socket.IO 服务器，所以我们使用Laravel-echo-server 这个第三方库，只要正确配置，无缝接入Laravel</li>\n<li>需要会使用Laravel 的事件的写法</li>\n<li>确保config/broadcasting.php 中default 不为null</li>\n</ul>\n<h1 id=\"原理简述\"><a href=\"#原理简述\" class=\"headerlink\" title=\"原理简述\"></a>原理简述</h1><p>Laravel 广播系统的原理其实很简单，客户端与Socket.io服务端（Laravel-echo-server) 建立连接，服务端监听驱动器事件，当驱动器产生事件时，服务端（Laravel-echo-server）监听到事件并向指定频道发送事件消息，客户端监听指定频道，收取事件消息。</p>\n<h1 id=\"建立连接\"><a href=\"#建立连接\" class=\"headerlink\" title=\"建立连接\"></a>建立连接</h1><h2 id=\"驱动器\"><a href=\"#驱动器\" class=\"headerlink\" title=\"驱动器\"></a>驱动器</h2><p>本文使用Redis 作为驱动器, 请参考Laravel Redis 的配置项并保证正常使用。</p>\n<h2 id=\"服务端（发送广播）\"><a href=\"#服务端（发送广播）\" class=\"headerlink\" title=\"服务端（发送广播）\"></a>服务端（发送广播）</h2><h3 id=\"Laravel-echo-server\"><a href=\"#Laravel-echo-server\" class=\"headerlink\" title=\"Laravel-echo-server\"></a>Laravel-echo-server</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>需要全局安装Laravel-echo-server。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g laravel-echo-server</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"初始化配置\"><a href=\"#初始化配置\" class=\"headerlink\" title=\"初始化配置\"></a>初始化配置</h4><p>使用包自带的init 命令可以快速初始化配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">laravel-echo-server init</span><br></pre></td></tr></table></figure></p>\n<p>首次使用可以一路回车，全使用默认配置，执行后路径下会生成 laravel-echo-server.json 文件，根据实际需要再修改配置信息。<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"authHost\"</span>: <span class=\"string\">\"dash.dev.car.co.uk\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"authEndpoint\"</span>: <span class=\"string\">\"/broadcasting/auth\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"clients\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"appId\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">\"database\"</span>: <span class=\"string\">\"redis\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"databaseConfig\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"redis\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"port\"</span>: <span class=\"string\">\"6379\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"devMode\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"host\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"port\"</span>: <span class=\"string\">\"6001\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"protocol\"</span>: <span class=\"string\">\"http\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"socketio\"</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"secureOptions\"</span>: <span class=\"number\">67108864</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"sslCertPath\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"sslKeyPath\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"sslCertChainPath\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"sslPassphrase\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"subscribers\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"http\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"redis\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"apiOriginAllow\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"allowCors\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowOrigin\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowMethods\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowHeaders\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意：</p>\n<ul>\n<li>appId 是使用http 请求来触发广播的，如果只需要在Laravel 中使用Redis 触发广播，可以忽略此项配置。</li>\n<li>开发时建议devMode 设为true, 可以直观的看到连接及server 运行情况。</li>\n<li>注意驱动器的配置，给驱动器配置正确的地址及端口。</li>\n<li>跨域请求对cookies 有限制，注意合适的跨域配置</li>\n</ul>\n<h4 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">laravel-echo-server start</span><br></pre></td></tr></table></figure>\n<p>看到”Server ready!“ 证明server 已经启动成功了。</p>\n<h3 id=\"Laravel\"><a href=\"#Laravel\" class=\"headerlink\" title=\"Laravel\"></a>Laravel</h3><h4 id=\"触发广播事件\"><a href=\"#触发广播事件\" class=\"headerlink\" title=\"触发广播事件\"></a>触发广播事件</h4><p>广播依赖于事件系统，这样设计是有原因的。<br>事件系统可以很好的解耦某个逻辑的不同响应，比如用户注册后可以短信、邮件等多种方式通知用户注册成功，并执行其他操作，使用一个事件及多个监听器就可以很好的解耦业务逻辑。</p>\n<h5 id=\"定义广播事件\"><a href=\"#定义广播事件\" class=\"headerlink\" title=\"定义广播事件\"></a>定义广播事件</h5><p>将事件实现 Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Broadcasting</span>\\<span class=\"title\">Channel</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Contracts</span>\\<span class=\"title\">Broadcasting</span>\\<span class=\"title\">ShouldBroadcast</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BroadcastDemo</span> <span class=\"keyword\">implements</span> <span class=\"title\">ShouldBroadcast</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">broadcastOn</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// need return a channel or channels</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Channel(<span class=\"string\">'channel-demo'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>必须存在 broadcastOn方法，该方法返回一个频道或者频道数组，事件会被广播到这些频道。<br>正常触发事件就可以触发广播。</p>\n<h5 id=\"广播数据\"><a href=\"#广播数据\" class=\"headerlink\" title=\"广播数据\"></a>广播数据</h5><p>Laravel 会默认将事件中public 属性自动序列化为广播数据，即允许客户端访问事件中的公有数据。<br>但是也可以使用broadcastWith 方法更细粒度的控制广播数据。</p>\n<h5 id=\"广播驱动\"><a href=\"#广播驱动\" class=\"headerlink\" title=\"广播驱动\"></a>广播驱动</h5><p>需要配置和laravel-echo-server 相同的驱动器，驱动器来实现发布-订阅模式，laravel 使用事件系统发布消息，laravel-echo-server订阅事件，做出回调（使用socket.io 推送消息），这里我们使用的是redis作为队列驱动程序，当laravel 触发推送到指定频道时，在redis-cli 中使用SUBSCRIBE 监听对应频道或所有频道也可以看到具体信息。</p>\n<h4 id=\"频道\"><a href=\"#频道\" class=\"headerlink\" title=\"频道\"></a>频道</h4><p>依然拿现实中的广播系统做类比，公共频道就像广播电台，客户端只要能连接到指定频道就都可以收听，但很多信息是不能放在公开频道上的，所以需要授权以进入频道。</p>\n<h5 id=\"频道认证\"><a href=\"#频道认证\" class=\"headerlink\" title=\"频道认证\"></a>频道认证</h5><p>当连接私有频道时，客户端向laravel-echo-server发起请求，laravel-echo-server 将此请求转发给Laravel 以判断是否应该授权。<br>Laravel 默认授权路由为：/broadcasting/auth，通常来说使用<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Broadcast::routes();</span><br></pre></td></tr></table></figure></p>\n<p>就会注册授权路由，或者可以使用BroadcastManager 来更细粒化的控制。<br>在routes/channels.php 中使用Broadcast::channel 方法定义授权回调，方法返回Boolean 值，回调中当前用户被当做第一个参数，额外的通配符参数会被作为后续参数。<br>需要注意的是，由于通配符中也使用了「.」，所以参数中会只取第一个点前面的字符。实际使用中可以将「.」替换为其他字符来获取完整信息</p>\n<h5 id=\"仅广播给他人\"><a href=\"#仅广播给他人\" class=\"headerlink\" title=\"仅广播给他人\"></a>仅广播给他人</h5><p>现实中，如果边听收音机边给电台热线打电话，收音机中肯定也会出现电话对话声，离得近了甚至会产生回音。<br>网络中的广播系统自然也会有这种情况发生，但在网上是没法走开的，所以需要广播系统可以针对性的进行推送，避开触发此次广播的用户。<br>laravel 在每个请求中使用X-Socket-ID 来标识用户，客户端可以将X-Socket-ID 设为socketId，使用axios 时库会自动向header中添加，但使用其他请求库时可以在socket 连接建立后将X-Socket-ID配置如header，可以参考以下代码:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echoInstance.connector.socket.on(<span class=\"string\">'connect'</span>, () =&gt; &#123;</span><br><span class=\"line\">  http.defaults.headers.common[<span class=\"string\">'X-Socket-Id'</span>] = echoInstance.socketId();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>当请求携带有X-Socket-ID时，调用broadcast函数时使用toOthers 方法，即可将指定连接从广播接收者中排除。<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">broadcast(<span class=\"keyword\">new</span> BroadcastDemo())-&gt;toOthers();</span><br></pre></td></tr></table></figure></p>\n<p>到目前为止，我们已经构建了一个可以适应大部分需求的广播系统的发送，接下来我们看看如何配置客户端。</p>\n<h2 id=\"客户端（接收广播）\"><a href=\"#客户端（接收广播）\" class=\"headerlink\" title=\"客户端（接收广播）\"></a>客户端（接收广播）</h2><h3 id=\"建立连接-1\"><a href=\"#建立连接-1\" class=\"headerlink\" title=\"建立连接\"></a>建立连接</h3><p>客户端需要使用 Socket.IO JavaScript库来建立文件，当启动laravel-echo-server 后，可以通过 server 地址及端口号获取Socket.IO 库，比如开发时通常使用<a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">http://localhost</a> 与6001 端口，可以使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:6001/socket.io/socket.io.js</span><br></pre></td></tr></table></figure></p>\n<p>获取到Socket.IO 库。<br>如果需要手动在客户端添加Socket.IO 库，请注意socket.io.js 版本，目前只有2.x 版本可以正常使用。</p>\n<p>接着，我们需要在合适的时机建立实例化Echo(示例代码使用localhost 与6001端口)：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Echo <span class=\"keyword\">from</span> <span class=\"string\">\"laravel-echo\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> EchoInstance = <span class=\"keyword\">new</span> Echo(&#123;</span><br><span class=\"line\">    broadcaster: <span class=\"string\">'socket.io'</span>,</span><br><span class=\"line\">    host: <span class=\"string\">'http://localhost:6001'</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>实例化Echo 时，客户端的echo 库会发送http 请求到server 端请求建立连接。</p>\n<h3 id=\"加入频道\"><a href=\"#加入频道\" class=\"headerlink\" title=\"加入频道\"></a>加入频道</h3><p>建立连接后可以使用echoInstance的channel 方法加入指定频道，使用listen 监听频道上的指定事件：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echoInstance</span><br><span class=\"line\">      .channel(<span class=\"string\">'channelName'</span>)</span><br><span class=\"line\">      .listen(<span class=\"string\">'eventName'</span>, ()=&gt;&#123;</span><br><span class=\"line\">        <span class=\"comment\">//   callback</span></span><br><span class=\"line\">      &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>需要退出频道时，使用leave 方法即可。</p>\n"},{"title":"小程序框架——wepy","date":"2017-12-27T14:29:12.000Z","_content":"小程序的写法实在不太敢恭维。wepy参照了Vue的一些风格和特性，对小程序开发进行二次封装，更贴近MVVM架构。\n- 文件说明\n    - wpy文件可使用Vue的代码提示和代码风格\n    - wpy文件内容主要分三块，脚本、结构、样式。三个标签均支持lang和src属性，当src属性有效时，会忽略内联代码\n    - 脚本部分\n        - 入口\n            - 继承自wepy.app类，此处语法参见ES6实现继承\n- 改进\n    - 小程序对组件化支持非常不友好，wepy改进了组件开发的方法。组件的所有业务和功能在本身实现，组件之间彼此隔离\n","source":"_posts/小程序框架——wepy.md","raw":"---\ntitle: 小程序框架——wepy\ndate: 2017-12-27 22:29:12\ntags: [前端]\n---\n小程序的写法实在不太敢恭维。wepy参照了Vue的一些风格和特性，对小程序开发进行二次封装，更贴近MVVM架构。\n- 文件说明\n    - wpy文件可使用Vue的代码提示和代码风格\n    - wpy文件内容主要分三块，脚本、结构、样式。三个标签均支持lang和src属性，当src属性有效时，会忽略内联代码\n    - 脚本部分\n        - 入口\n            - 继承自wepy.app类，此处语法参见ES6实现继承\n- 改进\n    - 小程序对组件化支持非常不友好，wepy改进了组件开发的方法。组件的所有业务和功能在本身实现，组件之间彼此隔离\n","slug":"小程序框架——wepy","published":1,"updated":"2021-08-26T01:54:47.295Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6uy0009uh1yspd8560w","content":"<p>小程序的写法实在不太敢恭维。wepy参照了Vue的一些风格和特性，对小程序开发进行二次封装，更贴近MVVM架构。</p>\n<ul>\n<li>文件说明<ul>\n<li>wpy文件可使用Vue的代码提示和代码风格</li>\n<li>wpy文件内容主要分三块，脚本、结构、样式。三个标签均支持lang和src属性，当src属性有效时，会忽略内联代码</li>\n<li>脚本部分<ul>\n<li>入口<ul>\n<li>继承自wepy.app类，此处语法参见ES6实现继承</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>改进<ul>\n<li>小程序对组件化支持非常不友好，wepy改进了组件开发的方法。组件的所有业务和功能在本身实现，组件之间彼此隔离</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>小程序的写法实在不太敢恭维。wepy参照了Vue的一些风格和特性，对小程序开发进行二次封装，更贴近MVVM架构。</p>\n<ul>\n<li>文件说明<ul>\n<li>wpy文件可使用Vue的代码提示和代码风格</li>\n<li>wpy文件内容主要分三块，脚本、结构、样式。三个标签均支持lang和src属性，当src属性有效时，会忽略内联代码</li>\n<li>脚本部分<ul>\n<li>入口<ul>\n<li>继承自wepy.app类，此处语法参见ES6实现继承</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>改进<ul>\n<li>小程序对组件化支持非常不友好，wepy改进了组件开发的方法。组件的所有业务和功能在本身实现，组件之间彼此隔离</li>\n</ul>\n</li>\n</ul>\n"},{"title":"开始sicp的旅程吧，scheme要跑起来","date":"2017-12-30T14:04:29.000Z","_content":"作为一只萌新，知识可不能仅靠工作上的摸索踩坑和单纯经验上的积累，深入基础是十分有必要滴，而且还得应付考试不是，考试是个好理由，不敢拒绝。\n有需要也有必要补足计算机基础知识，那么作为野生程序员，咋么做呢？\n参考前人的经验，首选自然是萧大的[编程入门指南](https://zhuanlan.zhihu.com/xiao-jing-mo/19959253),而我现在不应该再入门了吧，那自然搞起sicp啦。\n\n### 为什么要学sicp\n多人推荐，评分高，那就没的说了呗。大部分理由都可以参见这篇文章：[老赵书托（2）：计算机程序的构造与解释 - 老赵点滴 - 追求编程之美](http://blog.zhaojie.me/2009/07/recommended-reading-2-sicp.html)\n\n### 为什么不学python版本的sicp\n说实话学python版的的确效率高、收益大，不过我也有自己的考虑。\n\n    - 我看过一遍python版的中文翻译，然而并不懂，和其他的python书看起来并没什么区别，或许我当年太弱鸡？\n    - 基于上，python版的就要配合课程进行学习，然而时间决定了我目前不太能常看视频\n    - 谁说的刷了老版的就看不了新版的哦，cs61扔入计划\n\n### 准备工作\nok,开始了没什么疑问，然而刚刚上去我就经受了小小打击，那就是sicp所用的语言。\nscheme应该是简单但强大的语言了吧，但着实小众，作为方言还有方言，怎么运行成了一个问题。依我目前的了解，有以下几种方法跑。\n\n    - 云端跑\n        - 好处\n            - 复制粘贴即可运行\n        - 坏处\n            - 浏览器必须的\n            - 联网必须的\n            - 复杂了就玩不转了\n    - 本地跑\n        - Emacs + 插件\n            - 好处\n                - 未知，因为下载了并没有安装，但是听说这是个神级编译器，参见[一年成为 Emacs 高手 (像神一样使用编辑器)](https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org)对手是vim等，以后有缘再见吧\n            - 坏处\n                - 没用过，上手需要熟悉一段时间\n        - 开源包，如Racket、MIT Scheme\n            - 参考[程序设计技术和方法](http://www.math.pku.edu.cn/teachers/qiuzy/progtech/)\n            - 好处\n                - 安装即用\n            - 坏处\n                - 在老婆的电脑上装了MIT Scheme，运行及其不便，可能因为我是萌新吧\n                - windows不友好，自我感觉\n                - Racket并不能做所有sicp的题目\n        - 扩展包，如biwascheme\n            - 此项目官网[biwascheme](http://www.biwascheme.org/)\n            - 好处\n                - 不仅能本地运行，还能使用本地JavaScript来跑，HTML中看结果，简直666\n                - 不仅能在HTML里预览，还可以扔到JavaScript来跑，更加666。参见[Github](https://github.com/biwascheme/biwascheme)\n            - 坏处\n                - 未知\n\n以上准备运行的参考资料：\n1、[sicp学习前的几个准备资料](http://cocode.cc/t/sicp/7689)\n2、[安装scheme解释器](http://tieba.baidu.com/p/1855833563)\n3、[Scheme 编程环境的设置](http://www.yinwang.org/blog-cn/2013/04/11/scheme-setup)\n4、[MIT-scheme](https://www.gnu.org/software/mit-scheme/)\n\n### biwascheme的使用\n好处多多，作为前端用起vscode又很方便，HTML预览也好，run code一键都很方便，那肯定是用它的咯。\nHow to use with HTML：\n    ```\n        <!DOCTYPE html>\n        <html>\n            <body>\n\n            <div id=\"bs-console\"></div>\n\n            <script src=\"biwascheme.js\">\n                (define (test x)\n                    (+ x x))\n                (print (test 2))\n            </script>\n\n            </body>\n        </html>\n    ```\nHow to use with node.js to run a biwa script\n    ```\n        $ npm install biwascheme\n\n        create a file a.scm:\n\n        (display \"Hello, world!\") (newline)\n\n        $ biwas a.scm\n    ```\nHow to use from inside node.js as a module\n    ```\n        $ npm install biwascheme\n\n        create a file server.js:\n\n        var BiwaScheme = require(\"biwascheme\"); BiwaScheme.run(\"(+ 1 2)\"); // or // BiwaScheme.run_file(\"a.scm\");\n\n        $ node server.js\n    ```\n\n这样子可以愉快的刷题啦，希望可以帮到你们。\n我这样子这么费时费力的记录还有时间看书吗，摔！","source":"_posts/开始sicp的旅程吧.md","raw":"---\ntitle: 开始sicp的旅程吧，scheme要跑起来\ndate: 2017-12-30 22:04:29\ntags: [sicp,计算机基础]\ncategories: 编程\n---\n作为一只萌新，知识可不能仅靠工作上的摸索踩坑和单纯经验上的积累，深入基础是十分有必要滴，而且还得应付考试不是，考试是个好理由，不敢拒绝。\n有需要也有必要补足计算机基础知识，那么作为野生程序员，咋么做呢？\n参考前人的经验，首选自然是萧大的[编程入门指南](https://zhuanlan.zhihu.com/xiao-jing-mo/19959253),而我现在不应该再入门了吧，那自然搞起sicp啦。\n\n### 为什么要学sicp\n多人推荐，评分高，那就没的说了呗。大部分理由都可以参见这篇文章：[老赵书托（2）：计算机程序的构造与解释 - 老赵点滴 - 追求编程之美](http://blog.zhaojie.me/2009/07/recommended-reading-2-sicp.html)\n\n### 为什么不学python版本的sicp\n说实话学python版的的确效率高、收益大，不过我也有自己的考虑。\n\n    - 我看过一遍python版的中文翻译，然而并不懂，和其他的python书看起来并没什么区别，或许我当年太弱鸡？\n    - 基于上，python版的就要配合课程进行学习，然而时间决定了我目前不太能常看视频\n    - 谁说的刷了老版的就看不了新版的哦，cs61扔入计划\n\n### 准备工作\nok,开始了没什么疑问，然而刚刚上去我就经受了小小打击，那就是sicp所用的语言。\nscheme应该是简单但强大的语言了吧，但着实小众，作为方言还有方言，怎么运行成了一个问题。依我目前的了解，有以下几种方法跑。\n\n    - 云端跑\n        - 好处\n            - 复制粘贴即可运行\n        - 坏处\n            - 浏览器必须的\n            - 联网必须的\n            - 复杂了就玩不转了\n    - 本地跑\n        - Emacs + 插件\n            - 好处\n                - 未知，因为下载了并没有安装，但是听说这是个神级编译器，参见[一年成为 Emacs 高手 (像神一样使用编辑器)](https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org)对手是vim等，以后有缘再见吧\n            - 坏处\n                - 没用过，上手需要熟悉一段时间\n        - 开源包，如Racket、MIT Scheme\n            - 参考[程序设计技术和方法](http://www.math.pku.edu.cn/teachers/qiuzy/progtech/)\n            - 好处\n                - 安装即用\n            - 坏处\n                - 在老婆的电脑上装了MIT Scheme，运行及其不便，可能因为我是萌新吧\n                - windows不友好，自我感觉\n                - Racket并不能做所有sicp的题目\n        - 扩展包，如biwascheme\n            - 此项目官网[biwascheme](http://www.biwascheme.org/)\n            - 好处\n                - 不仅能本地运行，还能使用本地JavaScript来跑，HTML中看结果，简直666\n                - 不仅能在HTML里预览，还可以扔到JavaScript来跑，更加666。参见[Github](https://github.com/biwascheme/biwascheme)\n            - 坏处\n                - 未知\n\n以上准备运行的参考资料：\n1、[sicp学习前的几个准备资料](http://cocode.cc/t/sicp/7689)\n2、[安装scheme解释器](http://tieba.baidu.com/p/1855833563)\n3、[Scheme 编程环境的设置](http://www.yinwang.org/blog-cn/2013/04/11/scheme-setup)\n4、[MIT-scheme](https://www.gnu.org/software/mit-scheme/)\n\n### biwascheme的使用\n好处多多，作为前端用起vscode又很方便，HTML预览也好，run code一键都很方便，那肯定是用它的咯。\nHow to use with HTML：\n    ```\n        <!DOCTYPE html>\n        <html>\n            <body>\n\n            <div id=\"bs-console\"></div>\n\n            <script src=\"biwascheme.js\">\n                (define (test x)\n                    (+ x x))\n                (print (test 2))\n            </script>\n\n            </body>\n        </html>\n    ```\nHow to use with node.js to run a biwa script\n    ```\n        $ npm install biwascheme\n\n        create a file a.scm:\n\n        (display \"Hello, world!\") (newline)\n\n        $ biwas a.scm\n    ```\nHow to use from inside node.js as a module\n    ```\n        $ npm install biwascheme\n\n        create a file server.js:\n\n        var BiwaScheme = require(\"biwascheme\"); BiwaScheme.run(\"(+ 1 2)\"); // or // BiwaScheme.run_file(\"a.scm\");\n\n        $ node server.js\n    ```\n\n这样子可以愉快的刷题啦，希望可以帮到你们。\n我这样子这么费时费力的记录还有时间看书吗，摔！","slug":"开始sicp的旅程吧","published":1,"updated":"2021-08-26T01:54:47.296Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6uz000auh1yd7a7qsq3","content":"<p>作为一只萌新，知识可不能仅靠工作上的摸索踩坑和单纯经验上的积累，深入基础是十分有必要滴，而且还得应付考试不是，考试是个好理由，不敢拒绝。<br>有需要也有必要补足计算机基础知识，那么作为野生程序员，咋么做呢？<br>参考前人的经验，首选自然是萧大的<a href=\"https://zhuanlan.zhihu.com/xiao-jing-mo/19959253\" target=\"_blank\" rel=\"noopener\">编程入门指南</a>,而我现在不应该再入门了吧，那自然搞起sicp啦。</p>\n<h3 id=\"为什么要学sicp\"><a href=\"#为什么要学sicp\" class=\"headerlink\" title=\"为什么要学sicp\"></a>为什么要学sicp</h3><p>多人推荐，评分高，那就没的说了呗。大部分理由都可以参见这篇文章：<a href=\"http://blog.zhaojie.me/2009/07/recommended-reading-2-sicp.html\" target=\"_blank\" rel=\"noopener\">老赵书托（2）：计算机程序的构造与解释 - 老赵点滴 - 追求编程之美</a></p>\n<h3 id=\"为什么不学python版本的sicp\"><a href=\"#为什么不学python版本的sicp\" class=\"headerlink\" title=\"为什么不学python版本的sicp\"></a>为什么不学python版本的sicp</h3><p>说实话学python版的的确效率高、收益大，不过我也有自己的考虑。</p>\n<pre><code>- 我看过一遍python版的中文翻译，然而并不懂，和其他的python书看起来并没什么区别，或许我当年太弱鸡？\n- 基于上，python版的就要配合课程进行学习，然而时间决定了我目前不太能常看视频\n- 谁说的刷了老版的就看不了新版的哦，cs61扔入计划\n</code></pre><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>ok,开始了没什么疑问，然而刚刚上去我就经受了小小打击，那就是sicp所用的语言。<br>scheme应该是简单但强大的语言了吧，但着实小众，作为方言还有方言，怎么运行成了一个问题。依我目前的了解，有以下几种方法跑。</p>\n<pre><code>- 云端跑\n    - 好处\n        - 复制粘贴即可运行\n    - 坏处\n        - 浏览器必须的\n        - 联网必须的\n        - 复杂了就玩不转了\n- 本地跑\n    - Emacs + 插件\n        - 好处\n            - 未知，因为下载了并没有安装，但是听说这是个神级编译器，参见[一年成为 Emacs 高手 (像神一样使用编辑器)](https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org)对手是vim等，以后有缘再见吧\n        - 坏处\n            - 没用过，上手需要熟悉一段时间\n    - 开源包，如Racket、MIT Scheme\n        - 参考[程序设计技术和方法](http://www.math.pku.edu.cn/teachers/qiuzy/progtech/)\n        - 好处\n            - 安装即用\n        - 坏处\n            - 在老婆的电脑上装了MIT Scheme，运行及其不便，可能因为我是萌新吧\n            - windows不友好，自我感觉\n            - Racket并不能做所有sicp的题目\n    - 扩展包，如biwascheme\n        - 此项目官网[biwascheme](http://www.biwascheme.org/)\n        - 好处\n            - 不仅能本地运行，还能使用本地JavaScript来跑，HTML中看结果，简直666\n            - 不仅能在HTML里预览，还可以扔到JavaScript来跑，更加666。参见[Github](https://github.com/biwascheme/biwascheme)\n        - 坏处\n            - 未知\n</code></pre><p>以上准备运行的参考资料：<br>1、<a href=\"http://cocode.cc/t/sicp/7689\" target=\"_blank\" rel=\"noopener\">sicp学习前的几个准备资料</a><br>2、<a href=\"http://tieba.baidu.com/p/1855833563\" target=\"_blank\" rel=\"noopener\">安装scheme解释器</a><br>3、<a href=\"http://www.yinwang.org/blog-cn/2013/04/11/scheme-setup\" target=\"_blank\" rel=\"noopener\">Scheme 编程环境的设置</a><br>4、<a href=\"https://www.gnu.org/software/mit-scheme/\" target=\"_blank\" rel=\"noopener\">MIT-scheme</a></p>\n<h3 id=\"biwascheme的使用\"><a href=\"#biwascheme的使用\" class=\"headerlink\" title=\"biwascheme的使用\"></a>biwascheme的使用</h3><p>好处多多，作为前端用起vscode又很方便，HTML预览也好，run code一键都很方便，那肯定是用它的咯。<br>How to use with HTML：<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div id=&quot;bs-console&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;script src=&quot;biwascheme.js&quot;&gt;</span><br><span class=\"line\">        (define (test x)</span><br><span class=\"line\">            (+ x x))</span><br><span class=\"line\">        (print (test 2))</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<p>How to use with node.js to run a biwa script<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install biwascheme</span><br><span class=\"line\"></span><br><span class=\"line\">create a file a.scm:</span><br><span class=\"line\"></span><br><span class=\"line\">(display &quot;Hello, world!&quot;) (newline)</span><br><span class=\"line\"></span><br><span class=\"line\">$ biwas a.scm</span><br></pre></td></tr></table></figure></p>\n<p>How to use from inside node.js as a module<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install biwascheme</span><br><span class=\"line\"></span><br><span class=\"line\">create a file server.js:</span><br><span class=\"line\"></span><br><span class=\"line\">var BiwaScheme = require(&quot;biwascheme&quot;); BiwaScheme.run(&quot;(+ 1 2)&quot;); // or // BiwaScheme.run_file(&quot;a.scm&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">$ node server.js</span><br></pre></td></tr></table></figure></p>\n<p>这样子可以愉快的刷题啦，希望可以帮到你们。<br>我这样子这么费时费力的记录还有时间看书吗，摔！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>作为一只萌新，知识可不能仅靠工作上的摸索踩坑和单纯经验上的积累，深入基础是十分有必要滴，而且还得应付考试不是，考试是个好理由，不敢拒绝。<br>有需要也有必要补足计算机基础知识，那么作为野生程序员，咋么做呢？<br>参考前人的经验，首选自然是萧大的<a href=\"https://zhuanlan.zhihu.com/xiao-jing-mo/19959253\" target=\"_blank\" rel=\"noopener\">编程入门指南</a>,而我现在不应该再入门了吧，那自然搞起sicp啦。</p>\n<h3 id=\"为什么要学sicp\"><a href=\"#为什么要学sicp\" class=\"headerlink\" title=\"为什么要学sicp\"></a>为什么要学sicp</h3><p>多人推荐，评分高，那就没的说了呗。大部分理由都可以参见这篇文章：<a href=\"http://blog.zhaojie.me/2009/07/recommended-reading-2-sicp.html\" target=\"_blank\" rel=\"noopener\">老赵书托（2）：计算机程序的构造与解释 - 老赵点滴 - 追求编程之美</a></p>\n<h3 id=\"为什么不学python版本的sicp\"><a href=\"#为什么不学python版本的sicp\" class=\"headerlink\" title=\"为什么不学python版本的sicp\"></a>为什么不学python版本的sicp</h3><p>说实话学python版的的确效率高、收益大，不过我也有自己的考虑。</p>\n<pre><code>- 我看过一遍python版的中文翻译，然而并不懂，和其他的python书看起来并没什么区别，或许我当年太弱鸡？\n- 基于上，python版的就要配合课程进行学习，然而时间决定了我目前不太能常看视频\n- 谁说的刷了老版的就看不了新版的哦，cs61扔入计划\n</code></pre><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>ok,开始了没什么疑问，然而刚刚上去我就经受了小小打击，那就是sicp所用的语言。<br>scheme应该是简单但强大的语言了吧，但着实小众，作为方言还有方言，怎么运行成了一个问题。依我目前的了解，有以下几种方法跑。</p>\n<pre><code>- 云端跑\n    - 好处\n        - 复制粘贴即可运行\n    - 坏处\n        - 浏览器必须的\n        - 联网必须的\n        - 复杂了就玩不转了\n- 本地跑\n    - Emacs + 插件\n        - 好处\n            - 未知，因为下载了并没有安装，但是听说这是个神级编译器，参见[一年成为 Emacs 高手 (像神一样使用编辑器)](https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org)对手是vim等，以后有缘再见吧\n        - 坏处\n            - 没用过，上手需要熟悉一段时间\n    - 开源包，如Racket、MIT Scheme\n        - 参考[程序设计技术和方法](http://www.math.pku.edu.cn/teachers/qiuzy/progtech/)\n        - 好处\n            - 安装即用\n        - 坏处\n            - 在老婆的电脑上装了MIT Scheme，运行及其不便，可能因为我是萌新吧\n            - windows不友好，自我感觉\n            - Racket并不能做所有sicp的题目\n    - 扩展包，如biwascheme\n        - 此项目官网[biwascheme](http://www.biwascheme.org/)\n        - 好处\n            - 不仅能本地运行，还能使用本地JavaScript来跑，HTML中看结果，简直666\n            - 不仅能在HTML里预览，还可以扔到JavaScript来跑，更加666。参见[Github](https://github.com/biwascheme/biwascheme)\n        - 坏处\n            - 未知\n</code></pre><p>以上准备运行的参考资料：<br>1、<a href=\"http://cocode.cc/t/sicp/7689\" target=\"_blank\" rel=\"noopener\">sicp学习前的几个准备资料</a><br>2、<a href=\"http://tieba.baidu.com/p/1855833563\" target=\"_blank\" rel=\"noopener\">安装scheme解释器</a><br>3、<a href=\"http://www.yinwang.org/blog-cn/2013/04/11/scheme-setup\" target=\"_blank\" rel=\"noopener\">Scheme 编程环境的设置</a><br>4、<a href=\"https://www.gnu.org/software/mit-scheme/\" target=\"_blank\" rel=\"noopener\">MIT-scheme</a></p>\n<h3 id=\"biwascheme的使用\"><a href=\"#biwascheme的使用\" class=\"headerlink\" title=\"biwascheme的使用\"></a>biwascheme的使用</h3><p>好处多多，作为前端用起vscode又很方便，HTML预览也好，run code一键都很方便，那肯定是用它的咯。<br>How to use with HTML：<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div id=&quot;bs-console&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;script src=&quot;biwascheme.js&quot;&gt;</span><br><span class=\"line\">        (define (test x)</span><br><span class=\"line\">            (+ x x))</span><br><span class=\"line\">        (print (test 2))</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<p>How to use with node.js to run a biwa script<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install biwascheme</span><br><span class=\"line\"></span><br><span class=\"line\">create a file a.scm:</span><br><span class=\"line\"></span><br><span class=\"line\">(display &quot;Hello, world!&quot;) (newline)</span><br><span class=\"line\"></span><br><span class=\"line\">$ biwas a.scm</span><br></pre></td></tr></table></figure></p>\n<p>How to use from inside node.js as a module<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install biwascheme</span><br><span class=\"line\"></span><br><span class=\"line\">create a file server.js:</span><br><span class=\"line\"></span><br><span class=\"line\">var BiwaScheme = require(&quot;biwascheme&quot;); BiwaScheme.run(&quot;(+ 1 2)&quot;); // or // BiwaScheme.run_file(&quot;a.scm&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">$ node server.js</span><br></pre></td></tr></table></figure></p>\n<p>这样子可以愉快的刷题啦，希望可以帮到你们。<br>我这样子这么费时费力的记录还有时间看书吗，摔！</p>\n"},{"title":"别再滚了 - 现在就要解决你的滚动穿透问题","date":"2022-03-17T09:45:20.000Z","_content":"\n# 前言\n\n日常 web 开发中，我们经常遇到想要滚动某元素，但却导致了其他元素发生了滚动的问题。\n\n比如我们某元素使用了浮层，当浮层无法滑动时，我们尝试滑动浮层，会发现浮层下的元素（通常来说是页面）发生了滚动，这就是滚动穿透。\n\n而元素滚动到底时，再尝试滚动会导致元素的可滚动父级开始滚动，这就是滚动链(Scroll Chaining)，如下 demo:\n\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"滚动穿透\" src=\"https://codepen.io/hnsxxscyx/embed/qBpbErW?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/hnsxxscyx/pen/qBpbErW\">\n  滚动穿透</a> by 不得不错 (<a href=\"https://codepen.io/hnsxxscyx\">@hnsxxscyx</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n\n通常来说这并不是什么问题，尤其是在桌面端，但移动端的滚动会尤其让用户感觉奇怪。\n\n如果你也遇到了这样的问题，那不妨从下面找一下解决方案。\n\n# 原因\n\n通常的滚动不是我们自己实现的，利用 transform 等模拟 scroll 的库也不会有滚动穿透的现象发生。\n\n是因为子元素的 scroll 事件冒泡到根节点，导致根节点进行滚动了吗？\n\n实际上并不是，在子元素上，scroll event 其实是不冒泡的，参见!(MDN)[https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event]。而 document 上 的滚动是冒泡的，这就是为什么我们监听页面滚动时可以将监听事件挂载到 document 或 window 上。\n\n<!-- 其实这种现象虽然奇怪，但浏览器厂商的实现是没有问题的，一起来看一下[W3C 的规范](https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#scrolling-events)。\n重点放在这一段：\n```\nWhenever an element gets scrolled (whether in response to user interaction or by an API), the user agent must run these steps:\n\n    Let doc be the element’s node document.\n\n    If the element is already in doc’s pending scroll event targets, abort these steps.\n\n    Append the element to doc’s pending scroll event targets.\n\n``` -->\n\n那为什么会这样呢？我想滑动的明明是子元素，父级元素却滚动起来了，[W3C 的规范](https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#scrolling-events) 也没要求这样啊。\n\n换个说法来说规范可能更好理解一些，规范不是用户手册，它只会规定了你要有哪些特性以及如何实现这些特性，但它不会规定你不要实现某些特性。而各大浏览器厂商不约而同的选择了这样的模式：当尝试滚动目标元素时，如果元素不能滚动，那就去尝试让它的父级元素进行滚动，哪个能滚滚哪个。\n\n与此一致的还有滚动链(Scroll Chaining), 当滚动元素滚动到底部或顶部时，再进行滚动(PC 需要使用滚轮)，会带动外层元素或页面继续滚动。\n\n参考这个 codepen, 滚动.scroll-wrapper-2 元素到底时，继续滚动会使.scroll-wrapper-1 开始滚动，而.scroll-wrapper-1 滚动到底时，会带动页面滚动。\n了解了原因，问题就好解决了。\n\n# 如何解决\n\n## 滚动穿透\n\n当有 mask 时，我们把 document 变为不可滚动的即可。\n\n通常情况下我们都可以直接给 body 添加 overflow: hidden 属性，这样别说滚动穿透，连页面的滚动都被限制了，自然不会产生滚动了（bootstrap 也是这样做的，可以看这个[demo](https://codepen.io/hnsxxscyx/pen/jOYwLYe))。\n\n再给想要可以滚动的元素(如弹窗)添加上相应的 overflow 属性值，这样弹窗上的元素也可以滚动。\n\n通常来说滚动穿透的问题这样就可以解决了，哪怕是多层嵌套的问题，也可以套用这个模板来解决：只让允许的部分发生滚动。\n\n## 滚动链(Scroll Chaining)\n\n感谢 W3C，为我们带来了好用的[overscroll-behavior](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior) 属性，我先来简单介绍一下它。\n\n```css\noverscroll-behavior: [ contain | none | auto ]{1,2};\n```\n\nauto 作为默认值没什么好说的，重点在于 contain 与 none 值。\n\n<b>contain</b> 属性保留了默认的滚动行为，但它不会传递滚动行为，就像我可以在目标元素内进行下拉刷新的操作，但不论如何滚动，滚动行为始终被局限在此元素内。\n\n<b>none</b> 属性移除了滚动边界的一些行为，元素始终也不能超过其滚动边界，当然，它也把滚动行为限制到了元素内。\n\n这两个属性主要在移动端的实际表现有所不同（PC 端通常没有元素需要跨越滚动边界的特性）。\n\n喜大普奔，事情完美被解决了，如果你不需要兼容 Safari 的话。\n\n连 IE 都可以使用-ms-scroll-chaining 来近似实现这一效果，但无论是桌面端还是移动端，Safari 目前都不支持这一特性，唯一让人感觉有希望的应该就是可以在 developer menu 中开启对它的支持，想必正式支持也快了吧。\n\n如果说桌面端的 Safari 还可以忽略的话，iOS 的市占率决定了必须要对这一问题进行修复。对于 iOS 系统来说，它不允许浏览器使用其他内核，所以 Chrome 更像是套了一层 Safari 内核的壳，所以不管用什么浏览器，它都没有支持这一特性。\n\n未来可能是美好的，但现在还是需要自己动手。\n\n应用元素上的滚动事件并不能使用 preventDefault 来阻止滚动行为，scroll event 的 cancelable 属性是 false。也可以这样想，scroll 的效果在先，scroll event 在后，当 listener 拿到 event 时，它已经发生滚动了，总不能让元素再滚回来吧。\n\n那我们就要从其他方向入手，比如是什么导致了滚动。\n\n在桌面端，通常是滚动滚动与拖拽滚动条，而移动端，自然是[Touch](https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Using_Touch_Events) 相关的事件。\n\n此处仅以移动端为例，桌面端将 touch 相关的事件换为[Wheel](https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent) 事件即可（注意[MouseScrollEvent](https://developer.mozilla.org/en-US/docs/Web/API/MouseScrollEvent) 已经逐渐被废弃）。\n\ntouch 事件是可以被 preventDefault 的，所以我们阻止越界滚动的思路是这样：\n\n```\n取消touch 效果，不发生滚动 <-  监听touch 事件来判断滚动方向，判断元素是否要越过元素边缘滚动 <- 判断touch 的对象，是否为要限制的元素\n```\n\n让我们从想到的效果开始，一步一步来看。\n\n### 取消 touch 效果\n\ntouch 事件有 touchstart、touchend、touchmove 等事件类型，实际导致滚动的自然是 touchmove 事件，所以我们对元素增加事件监听器，在事件回调中判断 cancelable，然后执行 preventDefault：\n\n```js\ntargetEl.addEventListener(\n\t'touchstart',\n\t(event) => {\n\t\tif (event.cancelable) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t},\n\tfalse\n); // 注意passive 要设为false\n```\n\n### 判断元素是否要越过元素边缘滚动\n\ntouch 相关的事件并没有获取滑动方向的相关属性，所以我们需要自己计算滚动的方向。\n可以记录 touchstart 事件的坐标，以它的坐标为原点进行计算。\n为了简化代码及更清楚的说明相关逻辑，我们以最常用的上下滑动来举例：\n\n```js\nlet touchStartY;\n\nconst recordTouchStart = (event) => {\n\ttouchStartY = event.touches ? event.touches[0].screenY : event.screenY;\n};\nconst preventTouchMove = (event) => {\n\tlet allowScroll = false;\n\n\tconst el = targetEl;\n\tconst currentTouchY = event.touches\n\t\t? event.touches[0].screenY\n\t\t: event.screenY;\n\tconst isOverTop = touchStartY <= currentTouchY && el.scrollTop === 0;\n\tconst isOverBottom =\n\t\ttouchStartY >= currentTouchY &&\n\t\tel.scrollHeight - el.scrollTop <= el.offsetHeight;\n\tif (!(isOverBottom || isOverTop)) {\n\t\tallowScroll = true;\n\t}\n\n\tif (!allowScroll) {\n\t\tif (event.cancelable) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t\tevent.stopPropagation();\n\t}\n};\n\nif (\n\twindow &&\n\twindow.navigator &&\n\twindow.navigator.userAgent.match(/iPhone|iPad/)\n) {\n\ttargetEl.addEventListener('touchstart', recordTouchStart, { passive: false });\n\ttargetEl.addEventListener('touchmove', preventTouchMove, { passive: false });\n}\n```\n\n### 判断 touch 的对象，是否为要限制的元素\n\n以上的代码其实已经可以解决滚动链的问题了，但如果有多个元素需要滚动时，多个监听器不好维护。同时 touch 事件也是可以跨元素的，触摸时也有可能出现问题。\n最好的方法还是加上事件委托，做进一步的限制。\n\n```js\nlet touchStartY;\n\nconst recordTouchStart = (event) => {\n\tif (targetElWrapper.contains(event.target)) {\n\t\ttouchStartY = event.touches ? event.touches[0].screenY : event.screenY;\n\t}\n};\nconst preventTouchMove = (event) => {\n\tlet allowScroll = false;\n\tif (targetElWrapper.contains(event.target)) {\n\t\tconst el = targetEl;\n\t\tconst currentTouchY = event.touches\n\t\t\t? event.touches[0].screenY\n\t\t\t: event.screenY;\n\t\tconst isOverTop = touchStartY <= currentTouchY && el.scrollTop === 0;\n\t\tconst isOverBottom =\n\t\t\ttouchStartY >= currentTouchY &&\n\t\t\tel.scrollHeight - el.scrollTop <= el.offsetHeight;\n\t\tif (!(isOverBottom || isOverTop)) {\n\t\t\tallowScroll = true;\n\t\t}\n\t}\n\n\tif (!allowScroll) {\n\t\tif (event.cancelable) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t\tevent.stopPropagation();\n\t}\n};\n\nif (\n\twindow &&\n\twindow.navigator &&\n\twindow.navigator.userAgent.match(/iPhone|iPad/)\n) {\n\tdocument.addEventListener('touchstart', recordTouchStart, { passive: false });\n\tdocument.addEventListener('touchmove', preventTouchMove, { passive: false });\n}\n```\n","source":"_posts/别再滚了-现在就要解决你的滚动穿透.md","raw":"---\ntitle: 别再滚了 - 现在就要解决你的滚动穿透问题\ndate: 2022-03-17 17:45:20\ntags:\n---\n\n# 前言\n\n日常 web 开发中，我们经常遇到想要滚动某元素，但却导致了其他元素发生了滚动的问题。\n\n比如我们某元素使用了浮层，当浮层无法滑动时，我们尝试滑动浮层，会发现浮层下的元素（通常来说是页面）发生了滚动，这就是滚动穿透。\n\n而元素滚动到底时，再尝试滚动会导致元素的可滚动父级开始滚动，这就是滚动链(Scroll Chaining)，如下 demo:\n\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"滚动穿透\" src=\"https://codepen.io/hnsxxscyx/embed/qBpbErW?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/hnsxxscyx/pen/qBpbErW\">\n  滚动穿透</a> by 不得不错 (<a href=\"https://codepen.io/hnsxxscyx\">@hnsxxscyx</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n\n通常来说这并不是什么问题，尤其是在桌面端，但移动端的滚动会尤其让用户感觉奇怪。\n\n如果你也遇到了这样的问题，那不妨从下面找一下解决方案。\n\n# 原因\n\n通常的滚动不是我们自己实现的，利用 transform 等模拟 scroll 的库也不会有滚动穿透的现象发生。\n\n是因为子元素的 scroll 事件冒泡到根节点，导致根节点进行滚动了吗？\n\n实际上并不是，在子元素上，scroll event 其实是不冒泡的，参见!(MDN)[https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event]。而 document 上 的滚动是冒泡的，这就是为什么我们监听页面滚动时可以将监听事件挂载到 document 或 window 上。\n\n<!-- 其实这种现象虽然奇怪，但浏览器厂商的实现是没有问题的，一起来看一下[W3C 的规范](https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#scrolling-events)。\n重点放在这一段：\n```\nWhenever an element gets scrolled (whether in response to user interaction or by an API), the user agent must run these steps:\n\n    Let doc be the element’s node document.\n\n    If the element is already in doc’s pending scroll event targets, abort these steps.\n\n    Append the element to doc’s pending scroll event targets.\n\n``` -->\n\n那为什么会这样呢？我想滑动的明明是子元素，父级元素却滚动起来了，[W3C 的规范](https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#scrolling-events) 也没要求这样啊。\n\n换个说法来说规范可能更好理解一些，规范不是用户手册，它只会规定了你要有哪些特性以及如何实现这些特性，但它不会规定你不要实现某些特性。而各大浏览器厂商不约而同的选择了这样的模式：当尝试滚动目标元素时，如果元素不能滚动，那就去尝试让它的父级元素进行滚动，哪个能滚滚哪个。\n\n与此一致的还有滚动链(Scroll Chaining), 当滚动元素滚动到底部或顶部时，再进行滚动(PC 需要使用滚轮)，会带动外层元素或页面继续滚动。\n\n参考这个 codepen, 滚动.scroll-wrapper-2 元素到底时，继续滚动会使.scroll-wrapper-1 开始滚动，而.scroll-wrapper-1 滚动到底时，会带动页面滚动。\n了解了原因，问题就好解决了。\n\n# 如何解决\n\n## 滚动穿透\n\n当有 mask 时，我们把 document 变为不可滚动的即可。\n\n通常情况下我们都可以直接给 body 添加 overflow: hidden 属性，这样别说滚动穿透，连页面的滚动都被限制了，自然不会产生滚动了（bootstrap 也是这样做的，可以看这个[demo](https://codepen.io/hnsxxscyx/pen/jOYwLYe))。\n\n再给想要可以滚动的元素(如弹窗)添加上相应的 overflow 属性值，这样弹窗上的元素也可以滚动。\n\n通常来说滚动穿透的问题这样就可以解决了，哪怕是多层嵌套的问题，也可以套用这个模板来解决：只让允许的部分发生滚动。\n\n## 滚动链(Scroll Chaining)\n\n感谢 W3C，为我们带来了好用的[overscroll-behavior](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior) 属性，我先来简单介绍一下它。\n\n```css\noverscroll-behavior: [ contain | none | auto ]{1,2};\n```\n\nauto 作为默认值没什么好说的，重点在于 contain 与 none 值。\n\n<b>contain</b> 属性保留了默认的滚动行为，但它不会传递滚动行为，就像我可以在目标元素内进行下拉刷新的操作，但不论如何滚动，滚动行为始终被局限在此元素内。\n\n<b>none</b> 属性移除了滚动边界的一些行为，元素始终也不能超过其滚动边界，当然，它也把滚动行为限制到了元素内。\n\n这两个属性主要在移动端的实际表现有所不同（PC 端通常没有元素需要跨越滚动边界的特性）。\n\n喜大普奔，事情完美被解决了，如果你不需要兼容 Safari 的话。\n\n连 IE 都可以使用-ms-scroll-chaining 来近似实现这一效果，但无论是桌面端还是移动端，Safari 目前都不支持这一特性，唯一让人感觉有希望的应该就是可以在 developer menu 中开启对它的支持，想必正式支持也快了吧。\n\n如果说桌面端的 Safari 还可以忽略的话，iOS 的市占率决定了必须要对这一问题进行修复。对于 iOS 系统来说，它不允许浏览器使用其他内核，所以 Chrome 更像是套了一层 Safari 内核的壳，所以不管用什么浏览器，它都没有支持这一特性。\n\n未来可能是美好的，但现在还是需要自己动手。\n\n应用元素上的滚动事件并不能使用 preventDefault 来阻止滚动行为，scroll event 的 cancelable 属性是 false。也可以这样想，scroll 的效果在先，scroll event 在后，当 listener 拿到 event 时，它已经发生滚动了，总不能让元素再滚回来吧。\n\n那我们就要从其他方向入手，比如是什么导致了滚动。\n\n在桌面端，通常是滚动滚动与拖拽滚动条，而移动端，自然是[Touch](https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Using_Touch_Events) 相关的事件。\n\n此处仅以移动端为例，桌面端将 touch 相关的事件换为[Wheel](https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent) 事件即可（注意[MouseScrollEvent](https://developer.mozilla.org/en-US/docs/Web/API/MouseScrollEvent) 已经逐渐被废弃）。\n\ntouch 事件是可以被 preventDefault 的，所以我们阻止越界滚动的思路是这样：\n\n```\n取消touch 效果，不发生滚动 <-  监听touch 事件来判断滚动方向，判断元素是否要越过元素边缘滚动 <- 判断touch 的对象，是否为要限制的元素\n```\n\n让我们从想到的效果开始，一步一步来看。\n\n### 取消 touch 效果\n\ntouch 事件有 touchstart、touchend、touchmove 等事件类型，实际导致滚动的自然是 touchmove 事件，所以我们对元素增加事件监听器，在事件回调中判断 cancelable，然后执行 preventDefault：\n\n```js\ntargetEl.addEventListener(\n\t'touchstart',\n\t(event) => {\n\t\tif (event.cancelable) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t},\n\tfalse\n); // 注意passive 要设为false\n```\n\n### 判断元素是否要越过元素边缘滚动\n\ntouch 相关的事件并没有获取滑动方向的相关属性，所以我们需要自己计算滚动的方向。\n可以记录 touchstart 事件的坐标，以它的坐标为原点进行计算。\n为了简化代码及更清楚的说明相关逻辑，我们以最常用的上下滑动来举例：\n\n```js\nlet touchStartY;\n\nconst recordTouchStart = (event) => {\n\ttouchStartY = event.touches ? event.touches[0].screenY : event.screenY;\n};\nconst preventTouchMove = (event) => {\n\tlet allowScroll = false;\n\n\tconst el = targetEl;\n\tconst currentTouchY = event.touches\n\t\t? event.touches[0].screenY\n\t\t: event.screenY;\n\tconst isOverTop = touchStartY <= currentTouchY && el.scrollTop === 0;\n\tconst isOverBottom =\n\t\ttouchStartY >= currentTouchY &&\n\t\tel.scrollHeight - el.scrollTop <= el.offsetHeight;\n\tif (!(isOverBottom || isOverTop)) {\n\t\tallowScroll = true;\n\t}\n\n\tif (!allowScroll) {\n\t\tif (event.cancelable) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t\tevent.stopPropagation();\n\t}\n};\n\nif (\n\twindow &&\n\twindow.navigator &&\n\twindow.navigator.userAgent.match(/iPhone|iPad/)\n) {\n\ttargetEl.addEventListener('touchstart', recordTouchStart, { passive: false });\n\ttargetEl.addEventListener('touchmove', preventTouchMove, { passive: false });\n}\n```\n\n### 判断 touch 的对象，是否为要限制的元素\n\n以上的代码其实已经可以解决滚动链的问题了，但如果有多个元素需要滚动时，多个监听器不好维护。同时 touch 事件也是可以跨元素的，触摸时也有可能出现问题。\n最好的方法还是加上事件委托，做进一步的限制。\n\n```js\nlet touchStartY;\n\nconst recordTouchStart = (event) => {\n\tif (targetElWrapper.contains(event.target)) {\n\t\ttouchStartY = event.touches ? event.touches[0].screenY : event.screenY;\n\t}\n};\nconst preventTouchMove = (event) => {\n\tlet allowScroll = false;\n\tif (targetElWrapper.contains(event.target)) {\n\t\tconst el = targetEl;\n\t\tconst currentTouchY = event.touches\n\t\t\t? event.touches[0].screenY\n\t\t\t: event.screenY;\n\t\tconst isOverTop = touchStartY <= currentTouchY && el.scrollTop === 0;\n\t\tconst isOverBottom =\n\t\t\ttouchStartY >= currentTouchY &&\n\t\t\tel.scrollHeight - el.scrollTop <= el.offsetHeight;\n\t\tif (!(isOverBottom || isOverTop)) {\n\t\t\tallowScroll = true;\n\t\t}\n\t}\n\n\tif (!allowScroll) {\n\t\tif (event.cancelable) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t\tevent.stopPropagation();\n\t}\n};\n\nif (\n\twindow &&\n\twindow.navigator &&\n\twindow.navigator.userAgent.match(/iPhone|iPad/)\n) {\n\tdocument.addEventListener('touchstart', recordTouchStart, { passive: false });\n\tdocument.addEventListener('touchmove', preventTouchMove, { passive: false });\n}\n```\n","slug":"别再滚了-现在就要解决你的滚动穿透","published":1,"updated":"2022-03-29T11:40:09.923Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6ze000duh1yu8xgt27o","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>日常 web 开发中，我们经常遇到想要滚动某元素，但却导致了其他元素发生了滚动的问题。</p>\n<p>比如我们某元素使用了浮层，当浮层无法滑动时，我们尝试滑动浮层，会发现浮层下的元素（通常来说是页面）发生了滚动，这就是滚动穿透。</p>\n<p>而元素滚动到底时，再尝试滚动会导致元素的可滚动父级开始滚动，这就是滚动链(Scroll Chaining)，如下 demo:</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"滚动穿透\" src=\"https://codepen.io/hnsxxscyx/embed/qBpbErW?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\"><br>  See the Pen <a href=\"https://codepen.io/hnsxxscyx/pen/qBpbErW\" target=\"_blank\" rel=\"noopener\"><br>  滚动穿透</a> by 不得不错 (<a href=\"https://codepen.io/hnsxxscyx\" target=\"_blank\" rel=\"noopener\">@hnsxxscyx</a>)<br>  on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.<br></iframe>\n\n<p>通常来说这并不是什么问题，尤其是在桌面端，但移动端的滚动会尤其让用户感觉奇怪。</p>\n<p>如果你也遇到了这样的问题，那不妨从下面找一下解决方案。</p>\n<h1 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h1><p>通常的滚动不是我们自己实现的，利用 transform 等模拟 scroll 的库也不会有滚动穿透的现象发生。</p>\n<p>是因为子元素的 scroll 事件冒泡到根节点，导致根节点进行滚动了吗？</p>\n<p>实际上并不是，在子元素上，scroll event 其实是不冒泡的，参见!(MDN)[<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event]。而\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event]。而</a> document 上 的滚动是冒泡的，这就是为什么我们监听页面滚动时可以将监听事件挂载到 document 或 window 上。</p>\n<!-- 其实这种现象虽然奇怪，但浏览器厂商的实现是没有问题的，一起来看一下[W3C 的规范](https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#scrolling-events)。\n重点放在这一段：\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Whenever an element gets scrolled (whether in response to user interaction or by an API), the user agent must run these steps:</span><br><span class=\"line\"></span><br><span class=\"line\">    Let doc be the element’s node document.</span><br><span class=\"line\"></span><br><span class=\"line\">    If the element is already in doc’s pending scroll event targets, abort these steps.</span><br><span class=\"line\"></span><br><span class=\"line\">    Append the element to doc’s pending scroll event targets.</span><br><span class=\"line\"></span><br><span class=\"line\">``` --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">那为什么会这样呢？我想滑动的明明是子元素，父级元素却滚动起来了，[W3C 的规范](https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#scrolling-events) 也没要求这样啊。</span><br><span class=\"line\"></span><br><span class=\"line\">换个说法来说规范可能更好理解一些，规范不是用户手册，它只会规定了你要有哪些特性以及如何实现这些特性，但它不会规定你不要实现某些特性。而各大浏览器厂商不约而同的选择了这样的模式：当尝试滚动目标元素时，如果元素不能滚动，那就去尝试让它的父级元素进行滚动，哪个能滚滚哪个。</span><br><span class=\"line\"></span><br><span class=\"line\">与此一致的还有滚动链(Scroll Chaining), 当滚动元素滚动到底部或顶部时，再进行滚动(PC 需要使用滚轮)，会带动外层元素或页面继续滚动。</span><br><span class=\"line\"></span><br><span class=\"line\">参考这个 codepen, 滚动.scroll-wrapper-2 元素到底时，继续滚动会使.scroll-wrapper-1 开始滚动，而.scroll-wrapper-1 滚动到底时，会带动页面滚动。</span><br><span class=\"line\">了解了原因，问题就好解决了。</span><br><span class=\"line\"></span><br><span class=\"line\"># 如何解决</span><br><span class=\"line\"></span><br><span class=\"line\">## 滚动穿透</span><br><span class=\"line\"></span><br><span class=\"line\">当有 mask 时，我们把 document 变为不可滚动的即可。</span><br><span class=\"line\"></span><br><span class=\"line\">通常情况下我们都可以直接给 body 添加 overflow: hidden 属性，这样别说滚动穿透，连页面的滚动都被限制了，自然不会产生滚动了（bootstrap 也是这样做的，可以看这个[demo](https://codepen.io/hnsxxscyx/pen/jOYwLYe))。</span><br><span class=\"line\"></span><br><span class=\"line\">再给想要可以滚动的元素(如弹窗)添加上相应的 overflow 属性值，这样弹窗上的元素也可以滚动。</span><br><span class=\"line\"></span><br><span class=\"line\">通常来说滚动穿透的问题这样就可以解决了，哪怕是多层嵌套的问题，也可以套用这个模板来解决：只让允许的部分发生滚动。</span><br><span class=\"line\"></span><br><span class=\"line\">## 滚动链(Scroll Chaining)</span><br><span class=\"line\"></span><br><span class=\"line\">感谢 W3C，为我们带来了好用的[overscroll-behavior](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior) 属性，我先来简单介绍一下它。</span><br><span class=\"line\"></span><br><span class=\"line\">```css</span><br><span class=\"line\">overscroll-behavior: [ contain | none | auto ]&#123;1,2&#125;;</span><br></pre></td></tr></table></figure>\n<p>auto 作为默认值没什么好说的，重点在于 contain 与 none 值。</p>\n<p><b>contain</b> 属性保留了默认的滚动行为，但它不会传递滚动行为，就像我可以在目标元素内进行下拉刷新的操作，但不论如何滚动，滚动行为始终被局限在此元素内。</p>\n<p><b>none</b> 属性移除了滚动边界的一些行为，元素始终也不能超过其滚动边界，当然，它也把滚动行为限制到了元素内。</p>\n<p>这两个属性主要在移动端的实际表现有所不同（PC 端通常没有元素需要跨越滚动边界的特性）。</p>\n<p>喜大普奔，事情完美被解决了，如果你不需要兼容 Safari 的话。</p>\n<p>连 IE 都可以使用-ms-scroll-chaining 来近似实现这一效果，但无论是桌面端还是移动端，Safari 目前都不支持这一特性，唯一让人感觉有希望的应该就是可以在 developer menu 中开启对它的支持，想必正式支持也快了吧。</p>\n<p>如果说桌面端的 Safari 还可以忽略的话，iOS 的市占率决定了必须要对这一问题进行修复。对于 iOS 系统来说，它不允许浏览器使用其他内核，所以 Chrome 更像是套了一层 Safari 内核的壳，所以不管用什么浏览器，它都没有支持这一特性。</p>\n<p>未来可能是美好的，但现在还是需要自己动手。</p>\n<p>应用元素上的滚动事件并不能使用 preventDefault 来阻止滚动行为，scroll event 的 cancelable 属性是 false。也可以这样想，scroll 的效果在先，scroll event 在后，当 listener 拿到 event 时，它已经发生滚动了，总不能让元素再滚回来吧。</p>\n<p>那我们就要从其他方向入手，比如是什么导致了滚动。</p>\n<p>在桌面端，通常是滚动滚动与拖拽滚动条，而移动端，自然是<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Using_Touch_Events\">Touch</a> 相关的事件。</p>\n<p>此处仅以移动端为例，桌面端将 touch 相关的事件换为<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent\">Wheel</a> 事件即可（注意<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseScrollEvent\">MouseScrollEvent</a> 已经逐渐被废弃）。</p>\n<p>touch 事件是可以被 preventDefault 的，所以我们阻止越界滚动的思路是这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">取消touch 效果，不发生滚动 &lt;-  监听touch 事件来判断滚动方向，判断元素是否要越过元素边缘滚动 &lt;- 判断touch 的对象，是否为要限制的元素</span><br></pre></td></tr></table></figure>\n<p>让我们从想到的效果开始，一步一步来看。</p>\n<h3 id=\"取消-touch-效果\"><a href=\"#取消-touch-效果\" class=\"headerlink\" title=\"取消 touch 效果\"></a>取消 touch 效果</h3><p>touch 事件有 touchstart、touchend、touchmove 等事件类型，实际导致滚动的自然是 touchmove 事件，所以我们对元素增加事件监听器，在事件回调中判断 cancelable，然后执行 preventDefault：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">targetEl.addEventListener(</span><br><span class=\"line\">\t<span class=\"string\">'touchstart'</span>,</span><br><span class=\"line\">\t(event) =&gt; &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (event.cancelable) &#123;</span><br><span class=\"line\">\t\t\tevent.preventDefault();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"literal\">false</span></span><br><span class=\"line\">); <span class=\"comment\">// 注意passive 要设为false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"判断元素是否要越过元素边缘滚动\"><a href=\"#判断元素是否要越过元素边缘滚动\" class=\"headerlink\" title=\"判断元素是否要越过元素边缘滚动\"></a>判断元素是否要越过元素边缘滚动</h3><p>touch 相关的事件并没有获取滑动方向的相关属性，所以我们需要自己计算滚动的方向。<br>可以记录 touchstart 事件的坐标，以它的坐标为原点进行计算。<br>为了简化代码及更清楚的说明相关逻辑，我们以最常用的上下滑动来举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> touchStartY;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> recordTouchStart = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\ttouchStartY = event.touches ? event.touches[<span class=\"number\">0</span>].screenY : event.screenY;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> preventTouchMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> allowScroll = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> el = targetEl;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> currentTouchY = event.touches</span><br><span class=\"line\">\t\t? event.touches[<span class=\"number\">0</span>].screenY</span><br><span class=\"line\">\t\t: event.screenY;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> isOverTop = touchStartY &lt;= currentTouchY &amp;&amp; el.scrollTop === <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> isOverBottom =</span><br><span class=\"line\">\t\ttouchStartY &gt;= currentTouchY &amp;&amp;</span><br><span class=\"line\">\t\tel.scrollHeight - el.scrollTop &lt;= el.offsetHeight;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!(isOverBottom || isOverTop)) &#123;</span><br><span class=\"line\">\t\tallowScroll = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!allowScroll) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (event.cancelable) &#123;</span><br><span class=\"line\">\t\t\tevent.preventDefault();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tevent.stopPropagation();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (</span><br><span class=\"line\">\t<span class=\"built_in\">window</span> &amp;&amp;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.navigator &amp;&amp;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.navigator.userAgent.match(<span class=\"regexp\">/iPhone|iPad/</span>)</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">\ttargetEl.addEventListener(<span class=\"string\">'touchstart'</span>, recordTouchStart, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">\ttargetEl.addEventListener(<span class=\"string\">'touchmove'</span>, preventTouchMove, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"判断-touch-的对象，是否为要限制的元素\"><a href=\"#判断-touch-的对象，是否为要限制的元素\" class=\"headerlink\" title=\"判断 touch 的对象，是否为要限制的元素\"></a>判断 touch 的对象，是否为要限制的元素</h3><p>以上的代码其实已经可以解决滚动链的问题了，但如果有多个元素需要滚动时，多个监听器不好维护。同时 touch 事件也是可以跨元素的，触摸时也有可能出现问题。<br>最好的方法还是加上事件委托，做进一步的限制。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> touchStartY;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> recordTouchStart = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (targetElWrapper.contains(event.target)) &#123;</span><br><span class=\"line\">\t\ttouchStartY = event.touches ? event.touches[<span class=\"number\">0</span>].screenY : event.screenY;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> preventTouchMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> allowScroll = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (targetElWrapper.contains(event.target)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> el = targetEl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> currentTouchY = event.touches</span><br><span class=\"line\">\t\t\t? event.touches[<span class=\"number\">0</span>].screenY</span><br><span class=\"line\">\t\t\t: event.screenY;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> isOverTop = touchStartY &lt;= currentTouchY &amp;&amp; el.scrollTop === <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> isOverBottom =</span><br><span class=\"line\">\t\t\ttouchStartY &gt;= currentTouchY &amp;&amp;</span><br><span class=\"line\">\t\t\tel.scrollHeight - el.scrollTop &lt;= el.offsetHeight;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!(isOverBottom || isOverTop)) &#123;</span><br><span class=\"line\">\t\t\tallowScroll = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!allowScroll) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (event.cancelable) &#123;</span><br><span class=\"line\">\t\t\tevent.preventDefault();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tevent.stopPropagation();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (</span><br><span class=\"line\">\t<span class=\"built_in\">window</span> &amp;&amp;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.navigator &amp;&amp;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.navigator.userAgent.match(<span class=\"regexp\">/iPhone|iPad/</span>)</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchstart'</span>, recordTouchStart, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchmove'</span>, preventTouchMove, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n-->","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>日常 web 开发中，我们经常遇到想要滚动某元素，但却导致了其他元素发生了滚动的问题。</p>\n<p>比如我们某元素使用了浮层，当浮层无法滑动时，我们尝试滑动浮层，会发现浮层下的元素（通常来说是页面）发生了滚动，这就是滚动穿透。</p>\n<p>而元素滚动到底时，再尝试滚动会导致元素的可滚动父级开始滚动，这就是滚动链(Scroll Chaining)，如下 demo:</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"滚动穿透\" src=\"https://codepen.io/hnsxxscyx/embed/qBpbErW?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\"><br>  See the Pen <a href=\"https://codepen.io/hnsxxscyx/pen/qBpbErW\" target=\"_blank\" rel=\"noopener\"><br>  滚动穿透</a> by 不得不错 (<a href=\"https://codepen.io/hnsxxscyx\" target=\"_blank\" rel=\"noopener\">@hnsxxscyx</a>)<br>  on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.<br></iframe>\n\n<p>通常来说这并不是什么问题，尤其是在桌面端，但移动端的滚动会尤其让用户感觉奇怪。</p>\n<p>如果你也遇到了这样的问题，那不妨从下面找一下解决方案。</p>\n<h1 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h1><p>通常的滚动不是我们自己实现的，利用 transform 等模拟 scroll 的库也不会有滚动穿透的现象发生。</p>\n<p>是因为子元素的 scroll 事件冒泡到根节点，导致根节点进行滚动了吗？</p>\n<p>实际上并不是，在子元素上，scroll event 其实是不冒泡的，参见!(MDN)[<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event]。而\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event]。而</a> document 上 的滚动是冒泡的，这就是为什么我们监听页面滚动时可以将监听事件挂载到 document 或 window 上。</p>\n<!-- 其实这种现象虽然奇怪，但浏览器厂商的实现是没有问题的，一起来看一下[W3C 的规范](https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#scrolling-events)。\n重点放在这一段：\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Whenever an element gets scrolled (whether in response to user interaction or by an API), the user agent must run these steps:</span><br><span class=\"line\"></span><br><span class=\"line\">    Let doc be the element’s node document.</span><br><span class=\"line\"></span><br><span class=\"line\">    If the element is already in doc’s pending scroll event targets, abort these steps.</span><br><span class=\"line\"></span><br><span class=\"line\">    Append the element to doc’s pending scroll event targets.</span><br><span class=\"line\"></span><br><span class=\"line\">``` --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">那为什么会这样呢？我想滑动的明明是子元素，父级元素却滚动起来了，[W3C 的规范](https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#scrolling-events) 也没要求这样啊。</span><br><span class=\"line\"></span><br><span class=\"line\">换个说法来说规范可能更好理解一些，规范不是用户手册，它只会规定了你要有哪些特性以及如何实现这些特性，但它不会规定你不要实现某些特性。而各大浏览器厂商不约而同的选择了这样的模式：当尝试滚动目标元素时，如果元素不能滚动，那就去尝试让它的父级元素进行滚动，哪个能滚滚哪个。</span><br><span class=\"line\"></span><br><span class=\"line\">与此一致的还有滚动链(Scroll Chaining), 当滚动元素滚动到底部或顶部时，再进行滚动(PC 需要使用滚轮)，会带动外层元素或页面继续滚动。</span><br><span class=\"line\"></span><br><span class=\"line\">参考这个 codepen, 滚动.scroll-wrapper-2 元素到底时，继续滚动会使.scroll-wrapper-1 开始滚动，而.scroll-wrapper-1 滚动到底时，会带动页面滚动。</span><br><span class=\"line\">了解了原因，问题就好解决了。</span><br><span class=\"line\"></span><br><span class=\"line\"># 如何解决</span><br><span class=\"line\"></span><br><span class=\"line\">## 滚动穿透</span><br><span class=\"line\"></span><br><span class=\"line\">当有 mask 时，我们把 document 变为不可滚动的即可。</span><br><span class=\"line\"></span><br><span class=\"line\">通常情况下我们都可以直接给 body 添加 overflow: hidden 属性，这样别说滚动穿透，连页面的滚动都被限制了，自然不会产生滚动了（bootstrap 也是这样做的，可以看这个[demo](https://codepen.io/hnsxxscyx/pen/jOYwLYe))。</span><br><span class=\"line\"></span><br><span class=\"line\">再给想要可以滚动的元素(如弹窗)添加上相应的 overflow 属性值，这样弹窗上的元素也可以滚动。</span><br><span class=\"line\"></span><br><span class=\"line\">通常来说滚动穿透的问题这样就可以解决了，哪怕是多层嵌套的问题，也可以套用这个模板来解决：只让允许的部分发生滚动。</span><br><span class=\"line\"></span><br><span class=\"line\">## 滚动链(Scroll Chaining)</span><br><span class=\"line\"></span><br><span class=\"line\">感谢 W3C，为我们带来了好用的[overscroll-behavior](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior) 属性，我先来简单介绍一下它。</span><br><span class=\"line\"></span><br><span class=\"line\">```css</span><br><span class=\"line\">overscroll-behavior: [ contain | none | auto ]&#123;1,2&#125;;</span><br></pre></td></tr></table></figure>\n<p>auto 作为默认值没什么好说的，重点在于 contain 与 none 值。</p>\n<p><b>contain</b> 属性保留了默认的滚动行为，但它不会传递滚动行为，就像我可以在目标元素内进行下拉刷新的操作，但不论如何滚动，滚动行为始终被局限在此元素内。</p>\n<p><b>none</b> 属性移除了滚动边界的一些行为，元素始终也不能超过其滚动边界，当然，它也把滚动行为限制到了元素内。</p>\n<p>这两个属性主要在移动端的实际表现有所不同（PC 端通常没有元素需要跨越滚动边界的特性）。</p>\n<p>喜大普奔，事情完美被解决了，如果你不需要兼容 Safari 的话。</p>\n<p>连 IE 都可以使用-ms-scroll-chaining 来近似实现这一效果，但无论是桌面端还是移动端，Safari 目前都不支持这一特性，唯一让人感觉有希望的应该就是可以在 developer menu 中开启对它的支持，想必正式支持也快了吧。</p>\n<p>如果说桌面端的 Safari 还可以忽略的话，iOS 的市占率决定了必须要对这一问题进行修复。对于 iOS 系统来说，它不允许浏览器使用其他内核，所以 Chrome 更像是套了一层 Safari 内核的壳，所以不管用什么浏览器，它都没有支持这一特性。</p>\n<p>未来可能是美好的，但现在还是需要自己动手。</p>\n<p>应用元素上的滚动事件并不能使用 preventDefault 来阻止滚动行为，scroll event 的 cancelable 属性是 false。也可以这样想，scroll 的效果在先，scroll event 在后，当 listener 拿到 event 时，它已经发生滚动了，总不能让元素再滚回来吧。</p>\n<p>那我们就要从其他方向入手，比如是什么导致了滚动。</p>\n<p>在桌面端，通常是滚动滚动与拖拽滚动条，而移动端，自然是<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Using_Touch_Events\">Touch</a> 相关的事件。</p>\n<p>此处仅以移动端为例，桌面端将 touch 相关的事件换为<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent\">Wheel</a> 事件即可（注意<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseScrollEvent\">MouseScrollEvent</a> 已经逐渐被废弃）。</p>\n<p>touch 事件是可以被 preventDefault 的，所以我们阻止越界滚动的思路是这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">取消touch 效果，不发生滚动 &lt;-  监听touch 事件来判断滚动方向，判断元素是否要越过元素边缘滚动 &lt;- 判断touch 的对象，是否为要限制的元素</span><br></pre></td></tr></table></figure>\n<p>让我们从想到的效果开始，一步一步来看。</p>\n<h3 id=\"取消-touch-效果\"><a href=\"#取消-touch-效果\" class=\"headerlink\" title=\"取消 touch 效果\"></a>取消 touch 效果</h3><p>touch 事件有 touchstart、touchend、touchmove 等事件类型，实际导致滚动的自然是 touchmove 事件，所以我们对元素增加事件监听器，在事件回调中判断 cancelable，然后执行 preventDefault：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">targetEl.addEventListener(</span><br><span class=\"line\">\t<span class=\"string\">'touchstart'</span>,</span><br><span class=\"line\">\t(event) =&gt; &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (event.cancelable) &#123;</span><br><span class=\"line\">\t\t\tevent.preventDefault();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"literal\">false</span></span><br><span class=\"line\">); <span class=\"comment\">// 注意passive 要设为false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"判断元素是否要越过元素边缘滚动\"><a href=\"#判断元素是否要越过元素边缘滚动\" class=\"headerlink\" title=\"判断元素是否要越过元素边缘滚动\"></a>判断元素是否要越过元素边缘滚动</h3><p>touch 相关的事件并没有获取滑动方向的相关属性，所以我们需要自己计算滚动的方向。<br>可以记录 touchstart 事件的坐标，以它的坐标为原点进行计算。<br>为了简化代码及更清楚的说明相关逻辑，我们以最常用的上下滑动来举例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> touchStartY;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> recordTouchStart = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\ttouchStartY = event.touches ? event.touches[<span class=\"number\">0</span>].screenY : event.screenY;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> preventTouchMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> allowScroll = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> el = targetEl;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> currentTouchY = event.touches</span><br><span class=\"line\">\t\t? event.touches[<span class=\"number\">0</span>].screenY</span><br><span class=\"line\">\t\t: event.screenY;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> isOverTop = touchStartY &lt;= currentTouchY &amp;&amp; el.scrollTop === <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> isOverBottom =</span><br><span class=\"line\">\t\ttouchStartY &gt;= currentTouchY &amp;&amp;</span><br><span class=\"line\">\t\tel.scrollHeight - el.scrollTop &lt;= el.offsetHeight;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!(isOverBottom || isOverTop)) &#123;</span><br><span class=\"line\">\t\tallowScroll = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!allowScroll) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (event.cancelable) &#123;</span><br><span class=\"line\">\t\t\tevent.preventDefault();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tevent.stopPropagation();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (</span><br><span class=\"line\">\t<span class=\"built_in\">window</span> &amp;&amp;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.navigator &amp;&amp;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.navigator.userAgent.match(<span class=\"regexp\">/iPhone|iPad/</span>)</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">\ttargetEl.addEventListener(<span class=\"string\">'touchstart'</span>, recordTouchStart, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">\ttargetEl.addEventListener(<span class=\"string\">'touchmove'</span>, preventTouchMove, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"判断-touch-的对象，是否为要限制的元素\"><a href=\"#判断-touch-的对象，是否为要限制的元素\" class=\"headerlink\" title=\"判断 touch 的对象，是否为要限制的元素\"></a>判断 touch 的对象，是否为要限制的元素</h3><p>以上的代码其实已经可以解决滚动链的问题了，但如果有多个元素需要滚动时，多个监听器不好维护。同时 touch 事件也是可以跨元素的，触摸时也有可能出现问题。<br>最好的方法还是加上事件委托，做进一步的限制。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> touchStartY;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> recordTouchStart = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (targetElWrapper.contains(event.target)) &#123;</span><br><span class=\"line\">\t\ttouchStartY = event.touches ? event.touches[<span class=\"number\">0</span>].screenY : event.screenY;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> preventTouchMove = <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> allowScroll = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (targetElWrapper.contains(event.target)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> el = targetEl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> currentTouchY = event.touches</span><br><span class=\"line\">\t\t\t? event.touches[<span class=\"number\">0</span>].screenY</span><br><span class=\"line\">\t\t\t: event.screenY;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> isOverTop = touchStartY &lt;= currentTouchY &amp;&amp; el.scrollTop === <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> isOverBottom =</span><br><span class=\"line\">\t\t\ttouchStartY &gt;= currentTouchY &amp;&amp;</span><br><span class=\"line\">\t\t\tel.scrollHeight - el.scrollTop &lt;= el.offsetHeight;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!(isOverBottom || isOverTop)) &#123;</span><br><span class=\"line\">\t\t\tallowScroll = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!allowScroll) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (event.cancelable) &#123;</span><br><span class=\"line\">\t\t\tevent.preventDefault();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tevent.stopPropagation();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (</span><br><span class=\"line\">\t<span class=\"built_in\">window</span> &amp;&amp;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.navigator &amp;&amp;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.navigator.userAgent.match(<span class=\"regexp\">/iPhone|iPad/</span>)</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchstart'</span>, recordTouchStart, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchmove'</span>, preventTouchMove, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">false</span> &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n-->"},{"title":"Taro 多端统一的开发解决方案浅析","date":"2021-09-16T10:43:05.000Z","_content":"# 前言\n![Taro](https://static001.infoq.cn/resource/image/0e/4c/0e62251a903c2341c3a8091a4773bb4c.jpg)  \n\n同一个世界，同一个梦想。Write once, run everywhere 是每个开发者心中的梦。  \n\n无需特别注意端的差异，把更多的精力放在业务与coding 上，无数的框架也在这个方向上持续改进和努力着。  \n\n17年1月，微信小程序正式上线，与web 相近的开发方式与微信上亿的用户基数让小程序迅速在”前端圈“走红，无数小程序也在开发和被开发的路上。但因种种原因，原生微信小程序的开发方式并不尽如人意，前端生态的丰富资源及开发模式也无法直接被引入小程序的开发流程。  \n\n为了改善开发小程序的开发体验及提交开发效率，Taro应运而生，它使用了类react 的语法，并且积极引入了前端流行的开发流程，并实现了一套代码多端复用（小程序、H5、React native)，在最近的大版本更新中，更是支持了React/Vue2/Vue3，让多端开发体验更加优雅和高效。  \n\n让我们一起来看看Taro 是怎么做的。\n# 尝试一下Taro build\n我们可以新建一个空白的[Taro](https://docs.taro.zone/docs/2.x/GETTING-STARTED) 模板项目，然后使用taro build 命令将项目打包，我们再来一起看看Taro 做了什么。\n我们先使用Taro 2 进行build看看。\n## 小程序\n由于小程序的原理大同小异，微信小程序几乎又是小程序的实际标准，所以build 小程序就以微信小程序来举例。\n\n忽略掉模板代码，build 完成后多出了dist 文件夹，目录下就是产出的微信小程序项目文件。\n目录结构如下：\n```\n|-- dist\n|   |-- app.js\n|   |-- app.json\n|   |-- app.wxss\n|   |-- project.config.json\n|   |-- npm\n|   |   |-- @tarojs\n|   |       |-- taro\n|   |       |   |-- index.js\n|   |       |   |-- dist\n|   |       |       |-- index.js\n|   |       |-- taro-weapp\n|   |           |-- index.js\n|   |           |-- dist\n|   |               |-- index.js\n|   |-- pages\n|       |-- index\n|           |-- index.js\n|           |-- index.json\n|           |-- index.wxml\n|           |-- index.wxss\n```\n从dist 文件夹可以看出，输出代码遵循了微信小程序所要求的[目录结构](https://developers.weixin.qq.com/miniprogram/dev/framework/structure.html)。    \n\n我们从pages 入手，看一下打包后的文件。  \n\n### pages 下的json, wxml 与wxss 文件\njson 文件中的配置想很明显是微信小程序所要求的的[页面配置](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html)项。  \n\n再看wxml 文件，很明显可以看出它就是普通的微信小程序模板，只不过与Taro 原始项目文件相比多了一层block 标签。  \n\n而wxss 文件也是普通的微信小程序[wxss](https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html) 样式语言。  \n\n由此可以简单推测，Taro 在转换为微信小程序时几乎把原代码转成了微信小程序所支持的语法，以此来在平台上运行。  \n\n### pages 下的js 文件\njs 文件是经过编译过的，不太方便阅读，但是某些函数基本上还是能一一对应的，比如在return 的_createClass 方法中仍然能看到react 生命周期函数，如componentWillMount、componentDidMount 等。  \n\n在文件末尾，还可以看到js 文件导出了一个变量，并将此变量传入了createComponent 方法。\n## h5\n执行taro build --type h5，等build 完成后多出的是.temp 与dist文件夹，目录如下：\n```\n|-- .temp\n|   |-- app.js\n|   |-- app.scss\n|   |-- index.html\n|   |-- pages\n|       |-- index\n|           |-- index.js\n|           |-- index.scss\n|-- dist\n|   |-- index.html\n|   |-- chunk\n|   |   |-- 2.js\n|   |   |-- index_index.js\n|   |-- css\n|   |   |-- 2.css\n|   |   |-- app.css\n|   |   |-- index_index.css\n|   |-- js\n|       |-- app.js\n```\n从dist 目录下的文件来看，输出的文件似乎与普通web 应用打包后的文件没什么不同。但.temp 文件夹下就奇怪了，这个目录是干做什么用的？\n### .temp 目录下的文件\n我们先来看app.js, 除去taro 的某些api(如createHistory、initPxTransform)，它似乎与普通的React 语法没什么不同，同样的生命周期方法，同样最后使用了render方法，只不过是引入和使用了[Nerv](https://nerv.aotu.io/)，当然，Nerv 使用了和React 16一致的使用方式与API。  \n\n再让我们去看pages 下的文件，又是典型的React 语法，只不过jsx 中使用的标签是微信小程序标签名，如View，Text。它们又是从@tarojs/components 引入的。\n对比源代码后就更奇怪了，似乎.temp 目录只是将Nerv 引入了项目，究竟发生了什么？  \n\n# 基本原理分析 - 如何把一套代码转换为另一套代码\n让我们忽略其他所有的因素，回到问题最初的原点：我有一套代码，我想通过某些操作，直接让它在另一个运行环境运行，应该怎么做？  \n\n答案很简单，把这套代码转译成目标运行环境所支持的代码就好，例如[PythonJs](https://github.com/PythonJS/PythonJS) 或者[Transcrypt](https://www.transcrypt.org)。实际上，Taro 2 正是这么做的。  \n\n说起来简简单单，实际做起来可没那么容易，这样的代码转换其实就是编译原理的内容，作为计算机基础重要的专业课，涉及到语言和文法、词法分析、语法分析、中间代码生成和目标代码生成。\n幸好，JavaScript 生态足够丰富，大量的工具可以直接使用。Taro 就在转换这个最核心的部分大量的借用了Babel 模块。  \n\n## 编译\n### Babel\n[Babel](https://babeljs.io/)是JavaScript的转换编译器，日常开发中接触最多的就是使用其将ES6+ 代码转换为向后兼容的JavaScript 语法。但它能做的远不止这些。  \n\n借助于[@babel/parser](https://babeljs.io/docs/en/babel-parser.html),Babel 可以解析JavaScript/TypeScript/JSX 等为AST(Abstract Syntax Tree)。当代码被转为AST 时，代码对于开发者来说只是一个遵循规则的树状数据结构，这时我们就可以对代码进行一系列的操作。比如我们常用的ESlint，就是将代码转换为了AST再对其进行语法检查、错误提示等（ESlint 使用的parser为[espree](https://github.com/eslint/espree))。  \n\n![Babel](https://www.osvlabs.com/blog/wp-content/uploads/2022/02/babel.png)  \n\n例如`let a = 1;`解析为AST 后就是：\n ```json\n {\n  \"type\": \"Program\",\n  \"start\": 0,\n  \"end\": 10,\n  \"body\": [\n    {\n      \"type\": \"VariableDeclaration\",\n      \"start\": 0,\n      \"end\": 10,\n      \"declarations\": [\n        {\n          \"type\": \"VariableDeclarator\",\n          \"start\": 4,\n          \"end\": 9,\n          \"id\": {\n            \"type\": \"Identifier\",\n            \"start\": 4,\n            \"end\": 5,\n            \"name\": \"a\"\n          },\n          \"init\": {\n            \"type\": \"Literal\",\n            \"start\": 8,\n            \"end\": 9,\n            \"value\": 1,\n            \"raw\": \"1\"\n          }\n        }\n      ],\n      \"kind\": \"let\"\n    }\n  ],\n  \"sourceType\": \"module\"\n}\n```\n也可以使用[AST explorer](https://astexplorer.net/)来在线看一下一段代码被转换AST 的结构。  \n\n代码转换为AST 之后，还需要对节点进行处理，[@babel/traverse](https://github.com/babel/babel/tree/master/packages/babel-traverse)可以方便的遍历节点树，并且可以方便的对其进行删除、添加、替换。  \n\n最后，借助于[@babel/generator](https://github.com/babel/babel/tree/master/packages/babel-generator), 我们可以将AST 转换为code。  \n\n借助于babel的这几个package，已经可以方便的实现将遵循规范的源代码转换为目标代码这一流程。  \n\n仅使用生态的力量是不够的，作为新兴的平台，小程序自己定义了一套DSL，所以由AST 转为小程序代码的工作只能Taro 自己来完成。  \n\n转换小程序的这一部分的核心位于[taro-transformer-wx](https://github.com/NervJS/taro/tree/2.x/packages/taro-transformer-wx)。 从src/index.ts 的transform方法也可以看出，taro 在转换代码时的流程依然是解析、处理、生成这一流程。\n## 运行\n### 小程序的运行\n编译让本不能运行的代码在环境中可以运行（比如ES6 被编译为ES5，就可以运行在绝大多数的浏览器环境），但并非所有的问题都需要靠编译来解决。  \n\n在微信小程序中，页面使用[Page](https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html) 方法传入一个对象，如果借助编译的话，那就是需要将Class 或者 Function 都编译为对象，并将属性一一对应起来。这样做不仅让编译的工作变得复杂多变，当出现异常时出错crash 的几率也变得特别高。  \n\nTaro 使用了非常聪明的方法解决了这个问题，页面使用的是对象，那最终传给它一个对象不就完了？所以在小程序中，Taro 实现了createComponent 方法，将原本的Taro 类，转换为小程序所需要的Object。\n[createComponent](https://github.com/NervJS/taro/blob/master/packages/taro-weapp/src/create-component.js) 方法主要做了三件事：将state 转换为小程序的data;将Taro 的生命周期映射到小程序生命周期；将事件处理函数映射到小程序的事件处理函数。  \n\n映射生命周期与时间处理函数比较好理解，所以我们重点关注一下state 的转换。  \n\n忽略掉其他因素，可以简单的将state 直接对应为小程序的data。但jsx 的写法多变，小程序的模板却无法像jsx 那样灵活，例如在render 函数中，生成了新变量（state 的数据先经过处理，如map、filter后再使用）。Taro 使用了一个_createData 方法来处理这种情况，render return 前所有定义变量或对props、state 产生新变量的操作，都会被编译到_createData方法来执行，并且在data 中创建一个新变量，使其可以映射到小程序的模板上。 \n\n### h5 的运行\n之前在build 时已经发现，h5 的build 会多出一个.temp 文件夹，里面的代码最为明显的改动似乎只是引入了Nerv。作为纯粹的web 框架，小程序组件肯定是不存在于web端的，如何使用小程序的组件，是使用h5 的第一个问题。  \n\n首先最好想到的方法，是像小程序编译一样，将小程序的原生标签编译为对应的HTML 标签，例如使用div 直接替换view，对于没有可以直接映射的组件或标签，如swiper，就直接维护一套组件，根据小程序的表现来实现组件，这样就可以在浏览器中运行了。  \n\n维护没有的组件没有什么问题，但view 与div 这种却不能一一对应。拿view 来说，在小程序中存在一些属性，如hover-class、hover-start-time 这些，在web 端并不存在。所以Taro 直接依照小程序，维护了一个实现小程序规范的web 版[组件](https://github.com/NervJS/taro/tree/master/packages/taro-components/src/components)，这样，在web段的表现也能与小程序一致了。  \n其他方面，Taro 自行在web 端补足了小程序的api，由于小程序的输入输出都非常清晰，Taro 只需要使用web 端来实现这些[API](https://github.com/NervJS/taro/tree/master/packages/taro-h5/src/api)，同时还能方便的进行promise 的包装。  \n# Taro3 的不同解\nTaro2 只支持了类react 的写法，但是[Taro3](https://docs.taro.zone/docs/)支持使用 React/Vue/Nerv 等框架来开发小程序、h5等应用，这又是怎么做到的？  \n\n从两个版本的简介中可以明显看出不同，Taro 2 时介绍Taro 为\n> Taro 是一套遵循 React 语法规范的 多端开发 解决方案\n\n而Taro 3则是**支持使用**React/Vue/Nerv 等框架来开发，甚至明确表示**可以使用完整的React/Vue/Vue3/Nerv 开发体验**。如果依照Taro 2 重编译的做法，恐怕Taro 要做巨量的工作来支持新语法，并且投入巨大的人力物力来维护生态。进一步来说，也绝对不可能打出使用完整的 xx框架开发体验，那么Taro 3 是怎么解决run everywhere 的问题的呢？  \n\n在概述中，我们可以看到Taro 官方的说明：\n> Taro 3 支持将 Web 框架直接运行在各平台，开发者使用的是真实的 React 和 Vue 等框架。\n\n这是怎么实现的呢？似乎是框架作为运行时，可以跑在各个端上。  \n\n我们将taro-cli 升级，再创建一些taro 的模板项目来看一看。  \n\n首先选取框架为vue3，模板为vue3-vuex，然后执行taro build --type weapp，执行完毕后目录如下：\n```\n|-- dist\n|   |-- app.js\n|   |-- app.json\n|   |-- app.wxss\n|   |-- base.wxml\n|   |-- comp.js\n|   |-- comp.json\n|   |-- comp.wxml\n|   |-- custom-wrapper.js\n|   |-- custom-wrapper.json\n|   |-- custom-wrapper.wxml\n|   |-- project.config.json\n|   |-- runtime.js\n|   |-- taro.js\n|   |-- taro.js.LICENSE.txt\n|   |-- utils.wxs\n|   |-- vendors.js\n|   |-- vendors.js.LICENSE.txt\n|   |-- pages\n|       |-- index\n|           |-- index.js\n|           |-- index.json\n|           |-- index.wxml\n|           |-- index.wxss\n|-- src\n    |-- app.config.js\n    |-- app.js\n    |-- app.scss\n    |-- index.html\n    |-- store.js\n    |-- components\n    |   |-- NumberDisplay.vue\n    |   |-- NumberSubmit.vue\n    |-- pages\n        |-- index\n            |-- index.config.js\n            |-- index.vue\n```\n\n可以看出，模板代码中组件与页面都是.vue文件，编译后的则是小程序文件。奇怪的是，源代码中的components 并没有被生成对应的小程序组件，但却多了comp.xxx 一众文件，由comp.json 的内容可以看出，comp 即是编译后的自定义组件。而原模板组件中的样式，被编译到了pages/index.wxss 中。  \n\nTaro 3 到底做了什么？  \n\n让我们再次回归问题的原点，[小程序架构](https://developers.weixin.qq.com/community/develop/article/doc/000c8eba1ec3b8c7ce287954c53c13),Vue 虽然都借鉴了MVVM的设计，但与React 一样更类似于data => UI 的映射。如果说小程序团队有能力使用某种方式来实现数据到UI 的映射，那么React 与Vue作为浏览器层面的library，肯定是必须借助浏览器的API来实现映射的。  \n\n这些API，其实就是DOM/BOM 的相关API，简单来说，就是我只需要新建、修改、删除DOM 节点的能力，我就可以实现data => UI 的映射。  \n\n所以Taro next 改变了以往的思路，如果让操纵节点的API 跨端了，那么使用这些API 的框架也能跨端使用。更何况无论是小程序、React还是Vue都是使用Virtual Dom 的概念，并通过某些方式来使真实DOM 保持同步。  \n\nTaro 这部分的实现位于[@tarojs/runtime](https://github.com/NervJS/taro/tree/next/packages/taro-runtime)，从[node.ts](https://github.com/NervJS/taro/blob/next/packages/taro-runtime/src/dom/node.ts) 可以看出，它实现了大量的DOM 标准化方法（如insertBefore,removeChild）。  \n\nVue 或是React 都自己维护着Virtual DOM，还需要一些操作让Virtual DOM 可以调取taro-runtime 的API，[@tarojs/react](https://github.com/NervJS/taro/tree/next/packages/taro-react)就是小程序专用的react 渲染器，它让React 的Virtual DOM 可以调用Taro 自实现的node API。  \n\n在小程序编译阶段，Taro会将所有组件进行模板化处理，当Taro的 DOM tree 要渲染到页面上时，Taro 会基于组件的template 去动态的递归遍历渲染整棵树，这就是为什么上面编译出来的组件不会一一对应的原因，因为它们已经被模板化成为一个个的template了。","source":"_posts/Taro 多端统一的开发解决方案浅析.md","raw":"---\ntitle: Taro 多端统一的开发解决方案浅析\ndate: 2021-09-16 18:43:05\ntags: [前端, Taro]\n---\n# 前言\n![Taro](https://static001.infoq.cn/resource/image/0e/4c/0e62251a903c2341c3a8091a4773bb4c.jpg)  \n\n同一个世界，同一个梦想。Write once, run everywhere 是每个开发者心中的梦。  \n\n无需特别注意端的差异，把更多的精力放在业务与coding 上，无数的框架也在这个方向上持续改进和努力着。  \n\n17年1月，微信小程序正式上线，与web 相近的开发方式与微信上亿的用户基数让小程序迅速在”前端圈“走红，无数小程序也在开发和被开发的路上。但因种种原因，原生微信小程序的开发方式并不尽如人意，前端生态的丰富资源及开发模式也无法直接被引入小程序的开发流程。  \n\n为了改善开发小程序的开发体验及提交开发效率，Taro应运而生，它使用了类react 的语法，并且积极引入了前端流行的开发流程，并实现了一套代码多端复用（小程序、H5、React native)，在最近的大版本更新中，更是支持了React/Vue2/Vue3，让多端开发体验更加优雅和高效。  \n\n让我们一起来看看Taro 是怎么做的。\n# 尝试一下Taro build\n我们可以新建一个空白的[Taro](https://docs.taro.zone/docs/2.x/GETTING-STARTED) 模板项目，然后使用taro build 命令将项目打包，我们再来一起看看Taro 做了什么。\n我们先使用Taro 2 进行build看看。\n## 小程序\n由于小程序的原理大同小异，微信小程序几乎又是小程序的实际标准，所以build 小程序就以微信小程序来举例。\n\n忽略掉模板代码，build 完成后多出了dist 文件夹，目录下就是产出的微信小程序项目文件。\n目录结构如下：\n```\n|-- dist\n|   |-- app.js\n|   |-- app.json\n|   |-- app.wxss\n|   |-- project.config.json\n|   |-- npm\n|   |   |-- @tarojs\n|   |       |-- taro\n|   |       |   |-- index.js\n|   |       |   |-- dist\n|   |       |       |-- index.js\n|   |       |-- taro-weapp\n|   |           |-- index.js\n|   |           |-- dist\n|   |               |-- index.js\n|   |-- pages\n|       |-- index\n|           |-- index.js\n|           |-- index.json\n|           |-- index.wxml\n|           |-- index.wxss\n```\n从dist 文件夹可以看出，输出代码遵循了微信小程序所要求的[目录结构](https://developers.weixin.qq.com/miniprogram/dev/framework/structure.html)。    \n\n我们从pages 入手，看一下打包后的文件。  \n\n### pages 下的json, wxml 与wxss 文件\njson 文件中的配置想很明显是微信小程序所要求的的[页面配置](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html)项。  \n\n再看wxml 文件，很明显可以看出它就是普通的微信小程序模板，只不过与Taro 原始项目文件相比多了一层block 标签。  \n\n而wxss 文件也是普通的微信小程序[wxss](https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html) 样式语言。  \n\n由此可以简单推测，Taro 在转换为微信小程序时几乎把原代码转成了微信小程序所支持的语法，以此来在平台上运行。  \n\n### pages 下的js 文件\njs 文件是经过编译过的，不太方便阅读，但是某些函数基本上还是能一一对应的，比如在return 的_createClass 方法中仍然能看到react 生命周期函数，如componentWillMount、componentDidMount 等。  \n\n在文件末尾，还可以看到js 文件导出了一个变量，并将此变量传入了createComponent 方法。\n## h5\n执行taro build --type h5，等build 完成后多出的是.temp 与dist文件夹，目录如下：\n```\n|-- .temp\n|   |-- app.js\n|   |-- app.scss\n|   |-- index.html\n|   |-- pages\n|       |-- index\n|           |-- index.js\n|           |-- index.scss\n|-- dist\n|   |-- index.html\n|   |-- chunk\n|   |   |-- 2.js\n|   |   |-- index_index.js\n|   |-- css\n|   |   |-- 2.css\n|   |   |-- app.css\n|   |   |-- index_index.css\n|   |-- js\n|       |-- app.js\n```\n从dist 目录下的文件来看，输出的文件似乎与普通web 应用打包后的文件没什么不同。但.temp 文件夹下就奇怪了，这个目录是干做什么用的？\n### .temp 目录下的文件\n我们先来看app.js, 除去taro 的某些api(如createHistory、initPxTransform)，它似乎与普通的React 语法没什么不同，同样的生命周期方法，同样最后使用了render方法，只不过是引入和使用了[Nerv](https://nerv.aotu.io/)，当然，Nerv 使用了和React 16一致的使用方式与API。  \n\n再让我们去看pages 下的文件，又是典型的React 语法，只不过jsx 中使用的标签是微信小程序标签名，如View，Text。它们又是从@tarojs/components 引入的。\n对比源代码后就更奇怪了，似乎.temp 目录只是将Nerv 引入了项目，究竟发生了什么？  \n\n# 基本原理分析 - 如何把一套代码转换为另一套代码\n让我们忽略其他所有的因素，回到问题最初的原点：我有一套代码，我想通过某些操作，直接让它在另一个运行环境运行，应该怎么做？  \n\n答案很简单，把这套代码转译成目标运行环境所支持的代码就好，例如[PythonJs](https://github.com/PythonJS/PythonJS) 或者[Transcrypt](https://www.transcrypt.org)。实际上，Taro 2 正是这么做的。  \n\n说起来简简单单，实际做起来可没那么容易，这样的代码转换其实就是编译原理的内容，作为计算机基础重要的专业课，涉及到语言和文法、词法分析、语法分析、中间代码生成和目标代码生成。\n幸好，JavaScript 生态足够丰富，大量的工具可以直接使用。Taro 就在转换这个最核心的部分大量的借用了Babel 模块。  \n\n## 编译\n### Babel\n[Babel](https://babeljs.io/)是JavaScript的转换编译器，日常开发中接触最多的就是使用其将ES6+ 代码转换为向后兼容的JavaScript 语法。但它能做的远不止这些。  \n\n借助于[@babel/parser](https://babeljs.io/docs/en/babel-parser.html),Babel 可以解析JavaScript/TypeScript/JSX 等为AST(Abstract Syntax Tree)。当代码被转为AST 时，代码对于开发者来说只是一个遵循规则的树状数据结构，这时我们就可以对代码进行一系列的操作。比如我们常用的ESlint，就是将代码转换为了AST再对其进行语法检查、错误提示等（ESlint 使用的parser为[espree](https://github.com/eslint/espree))。  \n\n![Babel](https://www.osvlabs.com/blog/wp-content/uploads/2022/02/babel.png)  \n\n例如`let a = 1;`解析为AST 后就是：\n ```json\n {\n  \"type\": \"Program\",\n  \"start\": 0,\n  \"end\": 10,\n  \"body\": [\n    {\n      \"type\": \"VariableDeclaration\",\n      \"start\": 0,\n      \"end\": 10,\n      \"declarations\": [\n        {\n          \"type\": \"VariableDeclarator\",\n          \"start\": 4,\n          \"end\": 9,\n          \"id\": {\n            \"type\": \"Identifier\",\n            \"start\": 4,\n            \"end\": 5,\n            \"name\": \"a\"\n          },\n          \"init\": {\n            \"type\": \"Literal\",\n            \"start\": 8,\n            \"end\": 9,\n            \"value\": 1,\n            \"raw\": \"1\"\n          }\n        }\n      ],\n      \"kind\": \"let\"\n    }\n  ],\n  \"sourceType\": \"module\"\n}\n```\n也可以使用[AST explorer](https://astexplorer.net/)来在线看一下一段代码被转换AST 的结构。  \n\n代码转换为AST 之后，还需要对节点进行处理，[@babel/traverse](https://github.com/babel/babel/tree/master/packages/babel-traverse)可以方便的遍历节点树，并且可以方便的对其进行删除、添加、替换。  \n\n最后，借助于[@babel/generator](https://github.com/babel/babel/tree/master/packages/babel-generator), 我们可以将AST 转换为code。  \n\n借助于babel的这几个package，已经可以方便的实现将遵循规范的源代码转换为目标代码这一流程。  \n\n仅使用生态的力量是不够的，作为新兴的平台，小程序自己定义了一套DSL，所以由AST 转为小程序代码的工作只能Taro 自己来完成。  \n\n转换小程序的这一部分的核心位于[taro-transformer-wx](https://github.com/NervJS/taro/tree/2.x/packages/taro-transformer-wx)。 从src/index.ts 的transform方法也可以看出，taro 在转换代码时的流程依然是解析、处理、生成这一流程。\n## 运行\n### 小程序的运行\n编译让本不能运行的代码在环境中可以运行（比如ES6 被编译为ES5，就可以运行在绝大多数的浏览器环境），但并非所有的问题都需要靠编译来解决。  \n\n在微信小程序中，页面使用[Page](https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html) 方法传入一个对象，如果借助编译的话，那就是需要将Class 或者 Function 都编译为对象，并将属性一一对应起来。这样做不仅让编译的工作变得复杂多变，当出现异常时出错crash 的几率也变得特别高。  \n\nTaro 使用了非常聪明的方法解决了这个问题，页面使用的是对象，那最终传给它一个对象不就完了？所以在小程序中，Taro 实现了createComponent 方法，将原本的Taro 类，转换为小程序所需要的Object。\n[createComponent](https://github.com/NervJS/taro/blob/master/packages/taro-weapp/src/create-component.js) 方法主要做了三件事：将state 转换为小程序的data;将Taro 的生命周期映射到小程序生命周期；将事件处理函数映射到小程序的事件处理函数。  \n\n映射生命周期与时间处理函数比较好理解，所以我们重点关注一下state 的转换。  \n\n忽略掉其他因素，可以简单的将state 直接对应为小程序的data。但jsx 的写法多变，小程序的模板却无法像jsx 那样灵活，例如在render 函数中，生成了新变量（state 的数据先经过处理，如map、filter后再使用）。Taro 使用了一个_createData 方法来处理这种情况，render return 前所有定义变量或对props、state 产生新变量的操作，都会被编译到_createData方法来执行，并且在data 中创建一个新变量，使其可以映射到小程序的模板上。 \n\n### h5 的运行\n之前在build 时已经发现，h5 的build 会多出一个.temp 文件夹，里面的代码最为明显的改动似乎只是引入了Nerv。作为纯粹的web 框架，小程序组件肯定是不存在于web端的，如何使用小程序的组件，是使用h5 的第一个问题。  \n\n首先最好想到的方法，是像小程序编译一样，将小程序的原生标签编译为对应的HTML 标签，例如使用div 直接替换view，对于没有可以直接映射的组件或标签，如swiper，就直接维护一套组件，根据小程序的表现来实现组件，这样就可以在浏览器中运行了。  \n\n维护没有的组件没有什么问题，但view 与div 这种却不能一一对应。拿view 来说，在小程序中存在一些属性，如hover-class、hover-start-time 这些，在web 端并不存在。所以Taro 直接依照小程序，维护了一个实现小程序规范的web 版[组件](https://github.com/NervJS/taro/tree/master/packages/taro-components/src/components)，这样，在web段的表现也能与小程序一致了。  \n其他方面，Taro 自行在web 端补足了小程序的api，由于小程序的输入输出都非常清晰，Taro 只需要使用web 端来实现这些[API](https://github.com/NervJS/taro/tree/master/packages/taro-h5/src/api)，同时还能方便的进行promise 的包装。  \n# Taro3 的不同解\nTaro2 只支持了类react 的写法，但是[Taro3](https://docs.taro.zone/docs/)支持使用 React/Vue/Nerv 等框架来开发小程序、h5等应用，这又是怎么做到的？  \n\n从两个版本的简介中可以明显看出不同，Taro 2 时介绍Taro 为\n> Taro 是一套遵循 React 语法规范的 多端开发 解决方案\n\n而Taro 3则是**支持使用**React/Vue/Nerv 等框架来开发，甚至明确表示**可以使用完整的React/Vue/Vue3/Nerv 开发体验**。如果依照Taro 2 重编译的做法，恐怕Taro 要做巨量的工作来支持新语法，并且投入巨大的人力物力来维护生态。进一步来说，也绝对不可能打出使用完整的 xx框架开发体验，那么Taro 3 是怎么解决run everywhere 的问题的呢？  \n\n在概述中，我们可以看到Taro 官方的说明：\n> Taro 3 支持将 Web 框架直接运行在各平台，开发者使用的是真实的 React 和 Vue 等框架。\n\n这是怎么实现的呢？似乎是框架作为运行时，可以跑在各个端上。  \n\n我们将taro-cli 升级，再创建一些taro 的模板项目来看一看。  \n\n首先选取框架为vue3，模板为vue3-vuex，然后执行taro build --type weapp，执行完毕后目录如下：\n```\n|-- dist\n|   |-- app.js\n|   |-- app.json\n|   |-- app.wxss\n|   |-- base.wxml\n|   |-- comp.js\n|   |-- comp.json\n|   |-- comp.wxml\n|   |-- custom-wrapper.js\n|   |-- custom-wrapper.json\n|   |-- custom-wrapper.wxml\n|   |-- project.config.json\n|   |-- runtime.js\n|   |-- taro.js\n|   |-- taro.js.LICENSE.txt\n|   |-- utils.wxs\n|   |-- vendors.js\n|   |-- vendors.js.LICENSE.txt\n|   |-- pages\n|       |-- index\n|           |-- index.js\n|           |-- index.json\n|           |-- index.wxml\n|           |-- index.wxss\n|-- src\n    |-- app.config.js\n    |-- app.js\n    |-- app.scss\n    |-- index.html\n    |-- store.js\n    |-- components\n    |   |-- NumberDisplay.vue\n    |   |-- NumberSubmit.vue\n    |-- pages\n        |-- index\n            |-- index.config.js\n            |-- index.vue\n```\n\n可以看出，模板代码中组件与页面都是.vue文件，编译后的则是小程序文件。奇怪的是，源代码中的components 并没有被生成对应的小程序组件，但却多了comp.xxx 一众文件，由comp.json 的内容可以看出，comp 即是编译后的自定义组件。而原模板组件中的样式，被编译到了pages/index.wxss 中。  \n\nTaro 3 到底做了什么？  \n\n让我们再次回归问题的原点，[小程序架构](https://developers.weixin.qq.com/community/develop/article/doc/000c8eba1ec3b8c7ce287954c53c13),Vue 虽然都借鉴了MVVM的设计，但与React 一样更类似于data => UI 的映射。如果说小程序团队有能力使用某种方式来实现数据到UI 的映射，那么React 与Vue作为浏览器层面的library，肯定是必须借助浏览器的API来实现映射的。  \n\n这些API，其实就是DOM/BOM 的相关API，简单来说，就是我只需要新建、修改、删除DOM 节点的能力，我就可以实现data => UI 的映射。  \n\n所以Taro next 改变了以往的思路，如果让操纵节点的API 跨端了，那么使用这些API 的框架也能跨端使用。更何况无论是小程序、React还是Vue都是使用Virtual Dom 的概念，并通过某些方式来使真实DOM 保持同步。  \n\nTaro 这部分的实现位于[@tarojs/runtime](https://github.com/NervJS/taro/tree/next/packages/taro-runtime)，从[node.ts](https://github.com/NervJS/taro/blob/next/packages/taro-runtime/src/dom/node.ts) 可以看出，它实现了大量的DOM 标准化方法（如insertBefore,removeChild）。  \n\nVue 或是React 都自己维护着Virtual DOM，还需要一些操作让Virtual DOM 可以调取taro-runtime 的API，[@tarojs/react](https://github.com/NervJS/taro/tree/next/packages/taro-react)就是小程序专用的react 渲染器，它让React 的Virtual DOM 可以调用Taro 自实现的node API。  \n\n在小程序编译阶段，Taro会将所有组件进行模板化处理，当Taro的 DOM tree 要渲染到页面上时，Taro 会基于组件的template 去动态的递归遍历渲染整棵树，这就是为什么上面编译出来的组件不会一一对应的原因，因为它们已经被模板化成为一个个的template了。","slug":"Taro 多端统一的开发解决方案浅析","published":1,"updated":"2022-02-28T02:25:58.609Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl1c2n6zf000euh1yxmaekqf8","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><img src=\"https://static001.infoq.cn/resource/image/0e/4c/0e62251a903c2341c3a8091a4773bb4c.jpg\" alt=\"Taro\">  </p>\n<p>同一个世界，同一个梦想。Write once, run everywhere 是每个开发者心中的梦。  </p>\n<p>无需特别注意端的差异，把更多的精力放在业务与coding 上，无数的框架也在这个方向上持续改进和努力着。  </p>\n<p>17年1月，微信小程序正式上线，与web 相近的开发方式与微信上亿的用户基数让小程序迅速在”前端圈“走红，无数小程序也在开发和被开发的路上。但因种种原因，原生微信小程序的开发方式并不尽如人意，前端生态的丰富资源及开发模式也无法直接被引入小程序的开发流程。  </p>\n<p>为了改善开发小程序的开发体验及提交开发效率，Taro应运而生，它使用了类react 的语法，并且积极引入了前端流行的开发流程，并实现了一套代码多端复用（小程序、H5、React native)，在最近的大版本更新中，更是支持了React/Vue2/Vue3，让多端开发体验更加优雅和高效。  </p>\n<p>让我们一起来看看Taro 是怎么做的。</p>\n<h1 id=\"尝试一下Taro-build\"><a href=\"#尝试一下Taro-build\" class=\"headerlink\" title=\"尝试一下Taro build\"></a>尝试一下Taro build</h1><p>我们可以新建一个空白的<a href=\"https://docs.taro.zone/docs/2.x/GETTING-STARTED\" target=\"_blank\" rel=\"noopener\">Taro</a> 模板项目，然后使用taro build 命令将项目打包，我们再来一起看看Taro 做了什么。<br>我们先使用Taro 2 进行build看看。</p>\n<h2 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h2><p>由于小程序的原理大同小异，微信小程序几乎又是小程序的实际标准，所以build 小程序就以微信小程序来举例。</p>\n<p>忽略掉模板代码，build 完成后多出了dist 文件夹，目录下就是产出的微信小程序项目文件。<br>目录结构如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- dist</span><br><span class=\"line\">|   |-- app.js</span><br><span class=\"line\">|   |-- app.json</span><br><span class=\"line\">|   |-- app.wxss</span><br><span class=\"line\">|   |-- project.config.json</span><br><span class=\"line\">|   |-- npm</span><br><span class=\"line\">|   |   |-- @tarojs</span><br><span class=\"line\">|   |       |-- taro</span><br><span class=\"line\">|   |       |   |-- index.js</span><br><span class=\"line\">|   |       |   |-- dist</span><br><span class=\"line\">|   |       |       |-- index.js</span><br><span class=\"line\">|   |       |-- taro-weapp</span><br><span class=\"line\">|   |           |-- index.js</span><br><span class=\"line\">|   |           |-- dist</span><br><span class=\"line\">|   |               |-- index.js</span><br><span class=\"line\">|   |-- pages</span><br><span class=\"line\">|       |-- index</span><br><span class=\"line\">|           |-- index.js</span><br><span class=\"line\">|           |-- index.json</span><br><span class=\"line\">|           |-- index.wxml</span><br><span class=\"line\">|           |-- index.wxss</span><br></pre></td></tr></table></figure></p>\n<p>从dist 文件夹可以看出，输出代码遵循了微信小程序所要求的<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/structure.html\" target=\"_blank\" rel=\"noopener\">目录结构</a>。    </p>\n<p>我们从pages 入手，看一下打包后的文件。  </p>\n<h3 id=\"pages-下的json-wxml-与wxss-文件\"><a href=\"#pages-下的json-wxml-与wxss-文件\" class=\"headerlink\" title=\"pages 下的json, wxml 与wxss 文件\"></a>pages 下的json, wxml 与wxss 文件</h3><p>json 文件中的配置想很明显是微信小程序所要求的的<a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html\" target=\"_blank\" rel=\"noopener\">页面配置</a>项。  </p>\n<p>再看wxml 文件，很明显可以看出它就是普通的微信小程序模板，只不过与Taro 原始项目文件相比多了一层block 标签。  </p>\n<p>而wxss 文件也是普通的微信小程序<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html\" target=\"_blank\" rel=\"noopener\">wxss</a> 样式语言。  </p>\n<p>由此可以简单推测，Taro 在转换为微信小程序时几乎把原代码转成了微信小程序所支持的语法，以此来在平台上运行。  </p>\n<h3 id=\"pages-下的js-文件\"><a href=\"#pages-下的js-文件\" class=\"headerlink\" title=\"pages 下的js 文件\"></a>pages 下的js 文件</h3><p>js 文件是经过编译过的，不太方便阅读，但是某些函数基本上还是能一一对应的，比如在return 的_createClass 方法中仍然能看到react 生命周期函数，如componentWillMount、componentDidMount 等。  </p>\n<p>在文件末尾，还可以看到js 文件导出了一个变量，并将此变量传入了createComponent 方法。</p>\n<h2 id=\"h5\"><a href=\"#h5\" class=\"headerlink\" title=\"h5\"></a>h5</h2><p>执行taro build –type h5，等build 完成后多出的是.temp 与dist文件夹，目录如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- .temp</span><br><span class=\"line\">|   |-- app.js</span><br><span class=\"line\">|   |-- app.scss</span><br><span class=\"line\">|   |-- index.html</span><br><span class=\"line\">|   |-- pages</span><br><span class=\"line\">|       |-- index</span><br><span class=\"line\">|           |-- index.js</span><br><span class=\"line\">|           |-- index.scss</span><br><span class=\"line\">|-- dist</span><br><span class=\"line\">|   |-- index.html</span><br><span class=\"line\">|   |-- chunk</span><br><span class=\"line\">|   |   |-- 2.js</span><br><span class=\"line\">|   |   |-- index_index.js</span><br><span class=\"line\">|   |-- css</span><br><span class=\"line\">|   |   |-- 2.css</span><br><span class=\"line\">|   |   |-- app.css</span><br><span class=\"line\">|   |   |-- index_index.css</span><br><span class=\"line\">|   |-- js</span><br><span class=\"line\">|       |-- app.js</span><br></pre></td></tr></table></figure></p>\n<p>从dist 目录下的文件来看，输出的文件似乎与普通web 应用打包后的文件没什么不同。但.temp 文件夹下就奇怪了，这个目录是干做什么用的？</p>\n<h3 id=\"temp-目录下的文件\"><a href=\"#temp-目录下的文件\" class=\"headerlink\" title=\".temp 目录下的文件\"></a>.temp 目录下的文件</h3><p>我们先来看app.js, 除去taro 的某些api(如createHistory、initPxTransform)，它似乎与普通的React 语法没什么不同，同样的生命周期方法，同样最后使用了render方法，只不过是引入和使用了<a href=\"https://nerv.aotu.io/\" target=\"_blank\" rel=\"noopener\">Nerv</a>，当然，Nerv 使用了和React 16一致的使用方式与API。  </p>\n<p>再让我们去看pages 下的文件，又是典型的React 语法，只不过jsx 中使用的标签是微信小程序标签名，如View，Text。它们又是从@tarojs/components 引入的。<br>对比源代码后就更奇怪了，似乎.temp 目录只是将Nerv 引入了项目，究竟发生了什么？  </p>\n<h1 id=\"基本原理分析-如何把一套代码转换为另一套代码\"><a href=\"#基本原理分析-如何把一套代码转换为另一套代码\" class=\"headerlink\" title=\"基本原理分析 - 如何把一套代码转换为另一套代码\"></a>基本原理分析 - 如何把一套代码转换为另一套代码</h1><p>让我们忽略其他所有的因素，回到问题最初的原点：我有一套代码，我想通过某些操作，直接让它在另一个运行环境运行，应该怎么做？  </p>\n<p>答案很简单，把这套代码转译成目标运行环境所支持的代码就好，例如<a href=\"https://github.com/PythonJS/PythonJS\" target=\"_blank\" rel=\"noopener\">PythonJs</a> 或者<a href=\"https://www.transcrypt.org\" target=\"_blank\" rel=\"noopener\">Transcrypt</a>。实际上，Taro 2 正是这么做的。  </p>\n<p>说起来简简单单，实际做起来可没那么容易，这样的代码转换其实就是编译原理的内容，作为计算机基础重要的专业课，涉及到语言和文法、词法分析、语法分析、中间代码生成和目标代码生成。<br>幸好，JavaScript 生态足够丰富，大量的工具可以直接使用。Taro 就在转换这个最核心的部分大量的借用了Babel 模块。  </p>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><h3 id=\"Babel\"><a href=\"#Babel\" class=\"headerlink\" title=\"Babel\"></a>Babel</h3><p><a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener\">Babel</a>是JavaScript的转换编译器，日常开发中接触最多的就是使用其将ES6+ 代码转换为向后兼容的JavaScript 语法。但它能做的远不止这些。  </p>\n<p>借助于<a href=\"https://babeljs.io/docs/en/babel-parser.html\" target=\"_blank\" rel=\"noopener\">@babel/parser</a>,Babel 可以解析JavaScript/TypeScript/JSX 等为AST(Abstract Syntax Tree)。当代码被转为AST 时，代码对于开发者来说只是一个遵循规则的树状数据结构，这时我们就可以对代码进行一系列的操作。比如我们常用的ESlint，就是将代码转换为了AST再对其进行语法检查、错误提示等（ESlint 使用的parser为<a href=\"https://github.com/eslint/espree\" target=\"_blank\" rel=\"noopener\">espree</a>)。  </p>\n<p><img src=\"https://www.osvlabs.com/blog/wp-content/uploads/2022/02/babel.png\" alt=\"Babel\">  </p>\n<p>例如<code>let a = 1;</code>解析为AST 后就是：<br> <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"Program\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"start\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"end\"</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"body\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"VariableDeclaration\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"start\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"end\"</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"declarations\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"VariableDeclarator\"</span>,</span><br><span class=\"line\">          <span class=\"attr\">\"start\"</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">          <span class=\"attr\">\"end\"</span>: <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"attr\">\"id\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"Identifier\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"start\"</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"end\"</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"a\"</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"attr\">\"init\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"Literal\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"start\"</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"end\"</span>: <span class=\"number\">9</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"value\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"raw\"</span>: <span class=\"string\">\"1\"</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"attr\">\"kind\"</span>: <span class=\"string\">\"let\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">\"sourceType\"</span>: <span class=\"string\">\"module\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>也可以使用<a href=\"https://astexplorer.net/\" target=\"_blank\" rel=\"noopener\">AST explorer</a>来在线看一下一段代码被转换AST 的结构。  </p>\n<p>代码转换为AST 之后，还需要对节点进行处理，<a href=\"https://github.com/babel/babel/tree/master/packages/babel-traverse\" target=\"_blank\" rel=\"noopener\">@babel/traverse</a>可以方便的遍历节点树，并且可以方便的对其进行删除、添加、替换。  </p>\n<p>最后，借助于<a href=\"https://github.com/babel/babel/tree/master/packages/babel-generator\" target=\"_blank\" rel=\"noopener\">@babel/generator</a>, 我们可以将AST 转换为code。  </p>\n<p>借助于babel的这几个package，已经可以方便的实现将遵循规范的源代码转换为目标代码这一流程。  </p>\n<p>仅使用生态的力量是不够的，作为新兴的平台，小程序自己定义了一套DSL，所以由AST 转为小程序代码的工作只能Taro 自己来完成。  </p>\n<p>转换小程序的这一部分的核心位于<a href=\"https://github.com/NervJS/taro/tree/2.x/packages/taro-transformer-wx\" target=\"_blank\" rel=\"noopener\">taro-transformer-wx</a>。 从src/index.ts 的transform方法也可以看出，taro 在转换代码时的流程依然是解析、处理、生成这一流程。</p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><h3 id=\"小程序的运行\"><a href=\"#小程序的运行\" class=\"headerlink\" title=\"小程序的运行\"></a>小程序的运行</h3><p>编译让本不能运行的代码在环境中可以运行（比如ES6 被编译为ES5，就可以运行在绝大多数的浏览器环境），但并非所有的问题都需要靠编译来解决。  </p>\n<p>在微信小程序中，页面使用<a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html\" target=\"_blank\" rel=\"noopener\">Page</a> 方法传入一个对象，如果借助编译的话，那就是需要将Class 或者 Function 都编译为对象，并将属性一一对应起来。这样做不仅让编译的工作变得复杂多变，当出现异常时出错crash 的几率也变得特别高。  </p>\n<p>Taro 使用了非常聪明的方法解决了这个问题，页面使用的是对象，那最终传给它一个对象不就完了？所以在小程序中，Taro 实现了createComponent 方法，将原本的Taro 类，转换为小程序所需要的Object。<br><a href=\"https://github.com/NervJS/taro/blob/master/packages/taro-weapp/src/create-component.js\" target=\"_blank\" rel=\"noopener\">createComponent</a> 方法主要做了三件事：将state 转换为小程序的data;将Taro 的生命周期映射到小程序生命周期；将事件处理函数映射到小程序的事件处理函数。  </p>\n<p>映射生命周期与时间处理函数比较好理解，所以我们重点关注一下state 的转换。  </p>\n<p>忽略掉其他因素，可以简单的将state 直接对应为小程序的data。但jsx 的写法多变，小程序的模板却无法像jsx 那样灵活，例如在render 函数中，生成了新变量（state 的数据先经过处理，如map、filter后再使用）。Taro 使用了一个_createData 方法来处理这种情况，render return 前所有定义变量或对props、state 产生新变量的操作，都会被编译到_createData方法来执行，并且在data 中创建一个新变量，使其可以映射到小程序的模板上。 </p>\n<h3 id=\"h5-的运行\"><a href=\"#h5-的运行\" class=\"headerlink\" title=\"h5 的运行\"></a>h5 的运行</h3><p>之前在build 时已经发现，h5 的build 会多出一个.temp 文件夹，里面的代码最为明显的改动似乎只是引入了Nerv。作为纯粹的web 框架，小程序组件肯定是不存在于web端的，如何使用小程序的组件，是使用h5 的第一个问题。  </p>\n<p>首先最好想到的方法，是像小程序编译一样，将小程序的原生标签编译为对应的HTML 标签，例如使用div 直接替换view，对于没有可以直接映射的组件或标签，如swiper，就直接维护一套组件，根据小程序的表现来实现组件，这样就可以在浏览器中运行了。  </p>\n<p>维护没有的组件没有什么问题，但view 与div 这种却不能一一对应。拿view 来说，在小程序中存在一些属性，如hover-class、hover-start-time 这些，在web 端并不存在。所以Taro 直接依照小程序，维护了一个实现小程序规范的web 版<a href=\"https://github.com/NervJS/taro/tree/master/packages/taro-components/src/components\" target=\"_blank\" rel=\"noopener\">组件</a>，这样，在web段的表现也能与小程序一致了。<br>其他方面，Taro 自行在web 端补足了小程序的api，由于小程序的输入输出都非常清晰，Taro 只需要使用web 端来实现这些<a href=\"https://github.com/NervJS/taro/tree/master/packages/taro-h5/src/api\" target=\"_blank\" rel=\"noopener\">API</a>，同时还能方便的进行promise 的包装。  </p>\n<h1 id=\"Taro3-的不同解\"><a href=\"#Taro3-的不同解\" class=\"headerlink\" title=\"Taro3 的不同解\"></a>Taro3 的不同解</h1><p>Taro2 只支持了类react 的写法，但是<a href=\"https://docs.taro.zone/docs/\" target=\"_blank\" rel=\"noopener\">Taro3</a>支持使用 React/Vue/Nerv 等框架来开发小程序、h5等应用，这又是怎么做到的？  </p>\n<p>从两个版本的简介中可以明显看出不同，Taro 2 时介绍Taro 为</p>\n<blockquote>\n<p>Taro 是一套遵循 React 语法规范的 多端开发 解决方案</p>\n</blockquote>\n<p>而Taro 3则是<strong>支持使用</strong>React/Vue/Nerv 等框架来开发，甚至明确表示<strong>可以使用完整的React/Vue/Vue3/Nerv 开发体验</strong>。如果依照Taro 2 重编译的做法，恐怕Taro 要做巨量的工作来支持新语法，并且投入巨大的人力物力来维护生态。进一步来说，也绝对不可能打出使用完整的 xx框架开发体验，那么Taro 3 是怎么解决run everywhere 的问题的呢？  </p>\n<p>在概述中，我们可以看到Taro 官方的说明：</p>\n<blockquote>\n<p>Taro 3 支持将 Web 框架直接运行在各平台，开发者使用的是真实的 React 和 Vue 等框架。</p>\n</blockquote>\n<p>这是怎么实现的呢？似乎是框架作为运行时，可以跑在各个端上。  </p>\n<p>我们将taro-cli 升级，再创建一些taro 的模板项目来看一看。  </p>\n<p>首先选取框架为vue3，模板为vue3-vuex，然后执行taro build –type weapp，执行完毕后目录如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- dist</span><br><span class=\"line\">|   |-- app.js</span><br><span class=\"line\">|   |-- app.json</span><br><span class=\"line\">|   |-- app.wxss</span><br><span class=\"line\">|   |-- base.wxml</span><br><span class=\"line\">|   |-- comp.js</span><br><span class=\"line\">|   |-- comp.json</span><br><span class=\"line\">|   |-- comp.wxml</span><br><span class=\"line\">|   |-- custom-wrapper.js</span><br><span class=\"line\">|   |-- custom-wrapper.json</span><br><span class=\"line\">|   |-- custom-wrapper.wxml</span><br><span class=\"line\">|   |-- project.config.json</span><br><span class=\"line\">|   |-- runtime.js</span><br><span class=\"line\">|   |-- taro.js</span><br><span class=\"line\">|   |-- taro.js.LICENSE.txt</span><br><span class=\"line\">|   |-- utils.wxs</span><br><span class=\"line\">|   |-- vendors.js</span><br><span class=\"line\">|   |-- vendors.js.LICENSE.txt</span><br><span class=\"line\">|   |-- pages</span><br><span class=\"line\">|       |-- index</span><br><span class=\"line\">|           |-- index.js</span><br><span class=\"line\">|           |-- index.json</span><br><span class=\"line\">|           |-- index.wxml</span><br><span class=\"line\">|           |-- index.wxss</span><br><span class=\"line\">|-- src</span><br><span class=\"line\">    |-- app.config.js</span><br><span class=\"line\">    |-- app.js</span><br><span class=\"line\">    |-- app.scss</span><br><span class=\"line\">    |-- index.html</span><br><span class=\"line\">    |-- store.js</span><br><span class=\"line\">    |-- components</span><br><span class=\"line\">    |   |-- NumberDisplay.vue</span><br><span class=\"line\">    |   |-- NumberSubmit.vue</span><br><span class=\"line\">    |-- pages</span><br><span class=\"line\">        |-- index</span><br><span class=\"line\">            |-- index.config.js</span><br><span class=\"line\">            |-- index.vue</span><br></pre></td></tr></table></figure></p>\n<p>可以看出，模板代码中组件与页面都是.vue文件，编译后的则是小程序文件。奇怪的是，源代码中的components 并没有被生成对应的小程序组件，但却多了comp.xxx 一众文件，由comp.json 的内容可以看出，comp 即是编译后的自定义组件。而原模板组件中的样式，被编译到了pages/index.wxss 中。  </p>\n<p>Taro 3 到底做了什么？  </p>\n<p>让我们再次回归问题的原点，<a href=\"https://developers.weixin.qq.com/community/develop/article/doc/000c8eba1ec3b8c7ce287954c53c13\" target=\"_blank\" rel=\"noopener\">小程序架构</a>,Vue 虽然都借鉴了MVVM的设计，但与React 一样更类似于data =&gt; UI 的映射。如果说小程序团队有能力使用某种方式来实现数据到UI 的映射，那么React 与Vue作为浏览器层面的library，肯定是必须借助浏览器的API来实现映射的。  </p>\n<p>这些API，其实就是DOM/BOM 的相关API，简单来说，就是我只需要新建、修改、删除DOM 节点的能力，我就可以实现data =&gt; UI 的映射。  </p>\n<p>所以Taro next 改变了以往的思路，如果让操纵节点的API 跨端了，那么使用这些API 的框架也能跨端使用。更何况无论是小程序、React还是Vue都是使用Virtual Dom 的概念，并通过某些方式来使真实DOM 保持同步。  </p>\n<p>Taro 这部分的实现位于<a href=\"https://github.com/NervJS/taro/tree/next/packages/taro-runtime\" target=\"_blank\" rel=\"noopener\">@tarojs/runtime</a>，从<a href=\"https://github.com/NervJS/taro/blob/next/packages/taro-runtime/src/dom/node.ts\" target=\"_blank\" rel=\"noopener\">node.ts</a> 可以看出，它实现了大量的DOM 标准化方法（如insertBefore,removeChild）。  </p>\n<p>Vue 或是React 都自己维护着Virtual DOM，还需要一些操作让Virtual DOM 可以调取taro-runtime 的API，<a href=\"https://github.com/NervJS/taro/tree/next/packages/taro-react\" target=\"_blank\" rel=\"noopener\">@tarojs/react</a>就是小程序专用的react 渲染器，它让React 的Virtual DOM 可以调用Taro 自实现的node API。  </p>\n<p>在小程序编译阶段，Taro会将所有组件进行模板化处理，当Taro的 DOM tree 要渲染到页面上时，Taro 会基于组件的template 去动态的递归遍历渲染整棵树，这就是为什么上面编译出来的组件不会一一对应的原因，因为它们已经被模板化成为一个个的template了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><img src=\"https://static001.infoq.cn/resource/image/0e/4c/0e62251a903c2341c3a8091a4773bb4c.jpg\" alt=\"Taro\">  </p>\n<p>同一个世界，同一个梦想。Write once, run everywhere 是每个开发者心中的梦。  </p>\n<p>无需特别注意端的差异，把更多的精力放在业务与coding 上，无数的框架也在这个方向上持续改进和努力着。  </p>\n<p>17年1月，微信小程序正式上线，与web 相近的开发方式与微信上亿的用户基数让小程序迅速在”前端圈“走红，无数小程序也在开发和被开发的路上。但因种种原因，原生微信小程序的开发方式并不尽如人意，前端生态的丰富资源及开发模式也无法直接被引入小程序的开发流程。  </p>\n<p>为了改善开发小程序的开发体验及提交开发效率，Taro应运而生，它使用了类react 的语法，并且积极引入了前端流行的开发流程，并实现了一套代码多端复用（小程序、H5、React native)，在最近的大版本更新中，更是支持了React/Vue2/Vue3，让多端开发体验更加优雅和高效。  </p>\n<p>让我们一起来看看Taro 是怎么做的。</p>\n<h1 id=\"尝试一下Taro-build\"><a href=\"#尝试一下Taro-build\" class=\"headerlink\" title=\"尝试一下Taro build\"></a>尝试一下Taro build</h1><p>我们可以新建一个空白的<a href=\"https://docs.taro.zone/docs/2.x/GETTING-STARTED\" target=\"_blank\" rel=\"noopener\">Taro</a> 模板项目，然后使用taro build 命令将项目打包，我们再来一起看看Taro 做了什么。<br>我们先使用Taro 2 进行build看看。</p>\n<h2 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h2><p>由于小程序的原理大同小异，微信小程序几乎又是小程序的实际标准，所以build 小程序就以微信小程序来举例。</p>\n<p>忽略掉模板代码，build 完成后多出了dist 文件夹，目录下就是产出的微信小程序项目文件。<br>目录结构如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- dist</span><br><span class=\"line\">|   |-- app.js</span><br><span class=\"line\">|   |-- app.json</span><br><span class=\"line\">|   |-- app.wxss</span><br><span class=\"line\">|   |-- project.config.json</span><br><span class=\"line\">|   |-- npm</span><br><span class=\"line\">|   |   |-- @tarojs</span><br><span class=\"line\">|   |       |-- taro</span><br><span class=\"line\">|   |       |   |-- index.js</span><br><span class=\"line\">|   |       |   |-- dist</span><br><span class=\"line\">|   |       |       |-- index.js</span><br><span class=\"line\">|   |       |-- taro-weapp</span><br><span class=\"line\">|   |           |-- index.js</span><br><span class=\"line\">|   |           |-- dist</span><br><span class=\"line\">|   |               |-- index.js</span><br><span class=\"line\">|   |-- pages</span><br><span class=\"line\">|       |-- index</span><br><span class=\"line\">|           |-- index.js</span><br><span class=\"line\">|           |-- index.json</span><br><span class=\"line\">|           |-- index.wxml</span><br><span class=\"line\">|           |-- index.wxss</span><br></pre></td></tr></table></figure></p>\n<p>从dist 文件夹可以看出，输出代码遵循了微信小程序所要求的<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/structure.html\" target=\"_blank\" rel=\"noopener\">目录结构</a>。    </p>\n<p>我们从pages 入手，看一下打包后的文件。  </p>\n<h3 id=\"pages-下的json-wxml-与wxss-文件\"><a href=\"#pages-下的json-wxml-与wxss-文件\" class=\"headerlink\" title=\"pages 下的json, wxml 与wxss 文件\"></a>pages 下的json, wxml 与wxss 文件</h3><p>json 文件中的配置想很明显是微信小程序所要求的的<a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html\" target=\"_blank\" rel=\"noopener\">页面配置</a>项。  </p>\n<p>再看wxml 文件，很明显可以看出它就是普通的微信小程序模板，只不过与Taro 原始项目文件相比多了一层block 标签。  </p>\n<p>而wxss 文件也是普通的微信小程序<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html\" target=\"_blank\" rel=\"noopener\">wxss</a> 样式语言。  </p>\n<p>由此可以简单推测，Taro 在转换为微信小程序时几乎把原代码转成了微信小程序所支持的语法，以此来在平台上运行。  </p>\n<h3 id=\"pages-下的js-文件\"><a href=\"#pages-下的js-文件\" class=\"headerlink\" title=\"pages 下的js 文件\"></a>pages 下的js 文件</h3><p>js 文件是经过编译过的，不太方便阅读，但是某些函数基本上还是能一一对应的，比如在return 的_createClass 方法中仍然能看到react 生命周期函数，如componentWillMount、componentDidMount 等。  </p>\n<p>在文件末尾，还可以看到js 文件导出了一个变量，并将此变量传入了createComponent 方法。</p>\n<h2 id=\"h5\"><a href=\"#h5\" class=\"headerlink\" title=\"h5\"></a>h5</h2><p>执行taro build –type h5，等build 完成后多出的是.temp 与dist文件夹，目录如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- .temp</span><br><span class=\"line\">|   |-- app.js</span><br><span class=\"line\">|   |-- app.scss</span><br><span class=\"line\">|   |-- index.html</span><br><span class=\"line\">|   |-- pages</span><br><span class=\"line\">|       |-- index</span><br><span class=\"line\">|           |-- index.js</span><br><span class=\"line\">|           |-- index.scss</span><br><span class=\"line\">|-- dist</span><br><span class=\"line\">|   |-- index.html</span><br><span class=\"line\">|   |-- chunk</span><br><span class=\"line\">|   |   |-- 2.js</span><br><span class=\"line\">|   |   |-- index_index.js</span><br><span class=\"line\">|   |-- css</span><br><span class=\"line\">|   |   |-- 2.css</span><br><span class=\"line\">|   |   |-- app.css</span><br><span class=\"line\">|   |   |-- index_index.css</span><br><span class=\"line\">|   |-- js</span><br><span class=\"line\">|       |-- app.js</span><br></pre></td></tr></table></figure></p>\n<p>从dist 目录下的文件来看，输出的文件似乎与普通web 应用打包后的文件没什么不同。但.temp 文件夹下就奇怪了，这个目录是干做什么用的？</p>\n<h3 id=\"temp-目录下的文件\"><a href=\"#temp-目录下的文件\" class=\"headerlink\" title=\".temp 目录下的文件\"></a>.temp 目录下的文件</h3><p>我们先来看app.js, 除去taro 的某些api(如createHistory、initPxTransform)，它似乎与普通的React 语法没什么不同，同样的生命周期方法，同样最后使用了render方法，只不过是引入和使用了<a href=\"https://nerv.aotu.io/\" target=\"_blank\" rel=\"noopener\">Nerv</a>，当然，Nerv 使用了和React 16一致的使用方式与API。  </p>\n<p>再让我们去看pages 下的文件，又是典型的React 语法，只不过jsx 中使用的标签是微信小程序标签名，如View，Text。它们又是从@tarojs/components 引入的。<br>对比源代码后就更奇怪了，似乎.temp 目录只是将Nerv 引入了项目，究竟发生了什么？  </p>\n<h1 id=\"基本原理分析-如何把一套代码转换为另一套代码\"><a href=\"#基本原理分析-如何把一套代码转换为另一套代码\" class=\"headerlink\" title=\"基本原理分析 - 如何把一套代码转换为另一套代码\"></a>基本原理分析 - 如何把一套代码转换为另一套代码</h1><p>让我们忽略其他所有的因素，回到问题最初的原点：我有一套代码，我想通过某些操作，直接让它在另一个运行环境运行，应该怎么做？  </p>\n<p>答案很简单，把这套代码转译成目标运行环境所支持的代码就好，例如<a href=\"https://github.com/PythonJS/PythonJS\" target=\"_blank\" rel=\"noopener\">PythonJs</a> 或者<a href=\"https://www.transcrypt.org\" target=\"_blank\" rel=\"noopener\">Transcrypt</a>。实际上，Taro 2 正是这么做的。  </p>\n<p>说起来简简单单，实际做起来可没那么容易，这样的代码转换其实就是编译原理的内容，作为计算机基础重要的专业课，涉及到语言和文法、词法分析、语法分析、中间代码生成和目标代码生成。<br>幸好，JavaScript 生态足够丰富，大量的工具可以直接使用。Taro 就在转换这个最核心的部分大量的借用了Babel 模块。  </p>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><h3 id=\"Babel\"><a href=\"#Babel\" class=\"headerlink\" title=\"Babel\"></a>Babel</h3><p><a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener\">Babel</a>是JavaScript的转换编译器，日常开发中接触最多的就是使用其将ES6+ 代码转换为向后兼容的JavaScript 语法。但它能做的远不止这些。  </p>\n<p>借助于<a href=\"https://babeljs.io/docs/en/babel-parser.html\" target=\"_blank\" rel=\"noopener\">@babel/parser</a>,Babel 可以解析JavaScript/TypeScript/JSX 等为AST(Abstract Syntax Tree)。当代码被转为AST 时，代码对于开发者来说只是一个遵循规则的树状数据结构，这时我们就可以对代码进行一系列的操作。比如我们常用的ESlint，就是将代码转换为了AST再对其进行语法检查、错误提示等（ESlint 使用的parser为<a href=\"https://github.com/eslint/espree\" target=\"_blank\" rel=\"noopener\">espree</a>)。  </p>\n<p><img src=\"https://www.osvlabs.com/blog/wp-content/uploads/2022/02/babel.png\" alt=\"Babel\">  </p>\n<p>例如<code>let a = 1;</code>解析为AST 后就是：<br> <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"Program\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"start\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"end\"</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"body\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"VariableDeclaration\"</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"start\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"end\"</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">      <span class=\"attr\">\"declarations\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"VariableDeclarator\"</span>,</span><br><span class=\"line\">          <span class=\"attr\">\"start\"</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">          <span class=\"attr\">\"end\"</span>: <span class=\"number\">9</span>,</span><br><span class=\"line\">          <span class=\"attr\">\"id\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"Identifier\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"start\"</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"end\"</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"a\"</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"attr\">\"init\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"Literal\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"start\"</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"end\"</span>: <span class=\"number\">9</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"value\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"raw\"</span>: <span class=\"string\">\"1\"</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"attr\">\"kind\"</span>: <span class=\"string\">\"let\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">\"sourceType\"</span>: <span class=\"string\">\"module\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>也可以使用<a href=\"https://astexplorer.net/\" target=\"_blank\" rel=\"noopener\">AST explorer</a>来在线看一下一段代码被转换AST 的结构。  </p>\n<p>代码转换为AST 之后，还需要对节点进行处理，<a href=\"https://github.com/babel/babel/tree/master/packages/babel-traverse\" target=\"_blank\" rel=\"noopener\">@babel/traverse</a>可以方便的遍历节点树，并且可以方便的对其进行删除、添加、替换。  </p>\n<p>最后，借助于<a href=\"https://github.com/babel/babel/tree/master/packages/babel-generator\" target=\"_blank\" rel=\"noopener\">@babel/generator</a>, 我们可以将AST 转换为code。  </p>\n<p>借助于babel的这几个package，已经可以方便的实现将遵循规范的源代码转换为目标代码这一流程。  </p>\n<p>仅使用生态的力量是不够的，作为新兴的平台，小程序自己定义了一套DSL，所以由AST 转为小程序代码的工作只能Taro 自己来完成。  </p>\n<p>转换小程序的这一部分的核心位于<a href=\"https://github.com/NervJS/taro/tree/2.x/packages/taro-transformer-wx\" target=\"_blank\" rel=\"noopener\">taro-transformer-wx</a>。 从src/index.ts 的transform方法也可以看出，taro 在转换代码时的流程依然是解析、处理、生成这一流程。</p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><h3 id=\"小程序的运行\"><a href=\"#小程序的运行\" class=\"headerlink\" title=\"小程序的运行\"></a>小程序的运行</h3><p>编译让本不能运行的代码在环境中可以运行（比如ES6 被编译为ES5，就可以运行在绝大多数的浏览器环境），但并非所有的问题都需要靠编译来解决。  </p>\n<p>在微信小程序中，页面使用<a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html\" target=\"_blank\" rel=\"noopener\">Page</a> 方法传入一个对象，如果借助编译的话，那就是需要将Class 或者 Function 都编译为对象，并将属性一一对应起来。这样做不仅让编译的工作变得复杂多变，当出现异常时出错crash 的几率也变得特别高。  </p>\n<p>Taro 使用了非常聪明的方法解决了这个问题，页面使用的是对象，那最终传给它一个对象不就完了？所以在小程序中，Taro 实现了createComponent 方法，将原本的Taro 类，转换为小程序所需要的Object。<br><a href=\"https://github.com/NervJS/taro/blob/master/packages/taro-weapp/src/create-component.js\" target=\"_blank\" rel=\"noopener\">createComponent</a> 方法主要做了三件事：将state 转换为小程序的data;将Taro 的生命周期映射到小程序生命周期；将事件处理函数映射到小程序的事件处理函数。  </p>\n<p>映射生命周期与时间处理函数比较好理解，所以我们重点关注一下state 的转换。  </p>\n<p>忽略掉其他因素，可以简单的将state 直接对应为小程序的data。但jsx 的写法多变，小程序的模板却无法像jsx 那样灵活，例如在render 函数中，生成了新变量（state 的数据先经过处理，如map、filter后再使用）。Taro 使用了一个_createData 方法来处理这种情况，render return 前所有定义变量或对props、state 产生新变量的操作，都会被编译到_createData方法来执行，并且在data 中创建一个新变量，使其可以映射到小程序的模板上。 </p>\n<h3 id=\"h5-的运行\"><a href=\"#h5-的运行\" class=\"headerlink\" title=\"h5 的运行\"></a>h5 的运行</h3><p>之前在build 时已经发现，h5 的build 会多出一个.temp 文件夹，里面的代码最为明显的改动似乎只是引入了Nerv。作为纯粹的web 框架，小程序组件肯定是不存在于web端的，如何使用小程序的组件，是使用h5 的第一个问题。  </p>\n<p>首先最好想到的方法，是像小程序编译一样，将小程序的原生标签编译为对应的HTML 标签，例如使用div 直接替换view，对于没有可以直接映射的组件或标签，如swiper，就直接维护一套组件，根据小程序的表现来实现组件，这样就可以在浏览器中运行了。  </p>\n<p>维护没有的组件没有什么问题，但view 与div 这种却不能一一对应。拿view 来说，在小程序中存在一些属性，如hover-class、hover-start-time 这些，在web 端并不存在。所以Taro 直接依照小程序，维护了一个实现小程序规范的web 版<a href=\"https://github.com/NervJS/taro/tree/master/packages/taro-components/src/components\" target=\"_blank\" rel=\"noopener\">组件</a>，这样，在web段的表现也能与小程序一致了。<br>其他方面，Taro 自行在web 端补足了小程序的api，由于小程序的输入输出都非常清晰，Taro 只需要使用web 端来实现这些<a href=\"https://github.com/NervJS/taro/tree/master/packages/taro-h5/src/api\" target=\"_blank\" rel=\"noopener\">API</a>，同时还能方便的进行promise 的包装。  </p>\n<h1 id=\"Taro3-的不同解\"><a href=\"#Taro3-的不同解\" class=\"headerlink\" title=\"Taro3 的不同解\"></a>Taro3 的不同解</h1><p>Taro2 只支持了类react 的写法，但是<a href=\"https://docs.taro.zone/docs/\" target=\"_blank\" rel=\"noopener\">Taro3</a>支持使用 React/Vue/Nerv 等框架来开发小程序、h5等应用，这又是怎么做到的？  </p>\n<p>从两个版本的简介中可以明显看出不同，Taro 2 时介绍Taro 为</p>\n<blockquote>\n<p>Taro 是一套遵循 React 语法规范的 多端开发 解决方案</p>\n</blockquote>\n<p>而Taro 3则是<strong>支持使用</strong>React/Vue/Nerv 等框架来开发，甚至明确表示<strong>可以使用完整的React/Vue/Vue3/Nerv 开发体验</strong>。如果依照Taro 2 重编译的做法，恐怕Taro 要做巨量的工作来支持新语法，并且投入巨大的人力物力来维护生态。进一步来说，也绝对不可能打出使用完整的 xx框架开发体验，那么Taro 3 是怎么解决run everywhere 的问题的呢？  </p>\n<p>在概述中，我们可以看到Taro 官方的说明：</p>\n<blockquote>\n<p>Taro 3 支持将 Web 框架直接运行在各平台，开发者使用的是真实的 React 和 Vue 等框架。</p>\n</blockquote>\n<p>这是怎么实现的呢？似乎是框架作为运行时，可以跑在各个端上。  </p>\n<p>我们将taro-cli 升级，再创建一些taro 的模板项目来看一看。  </p>\n<p>首先选取框架为vue3，模板为vue3-vuex，然后执行taro build –type weapp，执行完毕后目录如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- dist</span><br><span class=\"line\">|   |-- app.js</span><br><span class=\"line\">|   |-- app.json</span><br><span class=\"line\">|   |-- app.wxss</span><br><span class=\"line\">|   |-- base.wxml</span><br><span class=\"line\">|   |-- comp.js</span><br><span class=\"line\">|   |-- comp.json</span><br><span class=\"line\">|   |-- comp.wxml</span><br><span class=\"line\">|   |-- custom-wrapper.js</span><br><span class=\"line\">|   |-- custom-wrapper.json</span><br><span class=\"line\">|   |-- custom-wrapper.wxml</span><br><span class=\"line\">|   |-- project.config.json</span><br><span class=\"line\">|   |-- runtime.js</span><br><span class=\"line\">|   |-- taro.js</span><br><span class=\"line\">|   |-- taro.js.LICENSE.txt</span><br><span class=\"line\">|   |-- utils.wxs</span><br><span class=\"line\">|   |-- vendors.js</span><br><span class=\"line\">|   |-- vendors.js.LICENSE.txt</span><br><span class=\"line\">|   |-- pages</span><br><span class=\"line\">|       |-- index</span><br><span class=\"line\">|           |-- index.js</span><br><span class=\"line\">|           |-- index.json</span><br><span class=\"line\">|           |-- index.wxml</span><br><span class=\"line\">|           |-- index.wxss</span><br><span class=\"line\">|-- src</span><br><span class=\"line\">    |-- app.config.js</span><br><span class=\"line\">    |-- app.js</span><br><span class=\"line\">    |-- app.scss</span><br><span class=\"line\">    |-- index.html</span><br><span class=\"line\">    |-- store.js</span><br><span class=\"line\">    |-- components</span><br><span class=\"line\">    |   |-- NumberDisplay.vue</span><br><span class=\"line\">    |   |-- NumberSubmit.vue</span><br><span class=\"line\">    |-- pages</span><br><span class=\"line\">        |-- index</span><br><span class=\"line\">            |-- index.config.js</span><br><span class=\"line\">            |-- index.vue</span><br></pre></td></tr></table></figure></p>\n<p>可以看出，模板代码中组件与页面都是.vue文件，编译后的则是小程序文件。奇怪的是，源代码中的components 并没有被生成对应的小程序组件，但却多了comp.xxx 一众文件，由comp.json 的内容可以看出，comp 即是编译后的自定义组件。而原模板组件中的样式，被编译到了pages/index.wxss 中。  </p>\n<p>Taro 3 到底做了什么？  </p>\n<p>让我们再次回归问题的原点，<a href=\"https://developers.weixin.qq.com/community/develop/article/doc/000c8eba1ec3b8c7ce287954c53c13\" target=\"_blank\" rel=\"noopener\">小程序架构</a>,Vue 虽然都借鉴了MVVM的设计，但与React 一样更类似于data =&gt; UI 的映射。如果说小程序团队有能力使用某种方式来实现数据到UI 的映射，那么React 与Vue作为浏览器层面的library，肯定是必须借助浏览器的API来实现映射的。  </p>\n<p>这些API，其实就是DOM/BOM 的相关API，简单来说，就是我只需要新建、修改、删除DOM 节点的能力，我就可以实现data =&gt; UI 的映射。  </p>\n<p>所以Taro next 改变了以往的思路，如果让操纵节点的API 跨端了，那么使用这些API 的框架也能跨端使用。更何况无论是小程序、React还是Vue都是使用Virtual Dom 的概念，并通过某些方式来使真实DOM 保持同步。  </p>\n<p>Taro 这部分的实现位于<a href=\"https://github.com/NervJS/taro/tree/next/packages/taro-runtime\" target=\"_blank\" rel=\"noopener\">@tarojs/runtime</a>，从<a href=\"https://github.com/NervJS/taro/blob/next/packages/taro-runtime/src/dom/node.ts\" target=\"_blank\" rel=\"noopener\">node.ts</a> 可以看出，它实现了大量的DOM 标准化方法（如insertBefore,removeChild）。  </p>\n<p>Vue 或是React 都自己维护着Virtual DOM，还需要一些操作让Virtual DOM 可以调取taro-runtime 的API，<a href=\"https://github.com/NervJS/taro/tree/next/packages/taro-react\" target=\"_blank\" rel=\"noopener\">@tarojs/react</a>就是小程序专用的react 渲染器，它让React 的Virtual DOM 可以调用Taro 自实现的node API。  </p>\n<p>在小程序编译阶段，Taro会将所有组件进行模板化处理，当Taro的 DOM tree 要渲染到页面上时，Taro 会基于组件的template 去动态的递归遍历渲染整棵树，这就是为什么上面编译出来的组件不会一一对应的原因，因为它们已经被模板化成为一个个的template了。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl1c2n6ui0001uh1ykhieqqi8","category_id":"cl1c2n6za000buh1yagxc5v7g","_id":"cl1c2n7170016uh1ygrmsqfa5"},{"post_id":"cl1c2n6up0003uh1yts8zz3u6","category_id":"cl1c2n6za000buh1yagxc5v7g","_id":"cl1c2n7170018uh1ymzwozv6b"},{"post_id":"cl1c2n6uv0006uh1yof1qgaji","category_id":"cl1c2n6za000buh1yagxc5v7g","_id":"cl1c2n718001auh1yr8311sdo"},{"post_id":"cl1c2n6uz000auh1yd7a7qsq3","category_id":"cl1c2n6za000buh1yagxc5v7g","_id":"cl1c2n718001cuh1yfyubo1i1"}],"PostTag":[{"post_id":"cl1c2n6ui0001uh1ykhieqqi8","tag_id":"cl1c2n6zd000cuh1yf0setchw","_id":"cl1c2n7170014uh1ysoc53bws"},{"post_id":"cl1c2n6ui0001uh1ykhieqqi8","tag_id":"cl1c2n6zg000guh1yzac0blch","_id":"cl1c2n7170017uh1yzyb5zqxk"},{"post_id":"cl1c2n6ui0001uh1ykhieqqi8","tag_id":"cl1c2n6zi000iuh1ypjamcf8r","_id":"cl1c2n7170019uh1y6f7neefx"},{"post_id":"cl1c2n6up0003uh1yts8zz3u6","tag_id":"cl1c2n6zd000cuh1yf0setchw","_id":"cl1c2n718001buh1y1aw406k7"},{"post_id":"cl1c2n6up0003uh1yts8zz3u6","tag_id":"cl1c2n6zg000guh1yzac0blch","_id":"cl1c2n718001duh1yl50gw45q"},{"post_id":"cl1c2n6up0003uh1yts8zz3u6","tag_id":"cl1c2n6zi000iuh1ypjamcf8r","_id":"cl1c2n718001euh1yluc0duis"},{"post_id":"cl1c2n6ur0004uh1yfreikljr","tag_id":"cl1c2n6zl000nuh1ylfywvu6y","_id":"cl1c2n718001fuh1y29i8w6ie"},{"post_id":"cl1c2n6us0005uh1ys2108emp","tag_id":"cl1c2n6zm000ouh1y5tlfittj","_id":"cl1c2n719001guh1ye1eebj3f"},{"post_id":"cl1c2n6us0005uh1ys2108emp","tag_id":"cl1c2n6zn000puh1y88aowtf9","_id":"cl1c2n719001huh1ytrofmomb"},{"post_id":"cl1c2n6us0005uh1ys2108emp","tag_id":"cl1c2n6zn000quh1y0z39avjd","_id":"cl1c2n719001iuh1yhy4jmn0g"},{"post_id":"cl1c2n6uv0006uh1yof1qgaji","tag_id":"cl1c2n6zd000cuh1yf0setchw","_id":"cl1c2n719001juh1yl0mi7i90"},{"post_id":"cl1c2n6uv0006uh1yof1qgaji","tag_id":"cl1c2n6zg000guh1yzac0blch","_id":"cl1c2n71b001kuh1ybg084osz"},{"post_id":"cl1c2n6uv0006uh1yof1qgaji","tag_id":"cl1c2n6zi000iuh1ypjamcf8r","_id":"cl1c2n71b001luh1ydzqdo54z"},{"post_id":"cl1c2n6uv0006uh1yof1qgaji","tag_id":"cl1c2n6zp000uuh1yi60nr39h","_id":"cl1c2n71b001muh1ym6dq9dxu"},{"post_id":"cl1c2n6uw0007uh1ynyqtnyeu","tag_id":"cl1c2n6zp000vuh1ynyxwae46","_id":"cl1c2n71b001nuh1y1gf1jf1y"},{"post_id":"cl1c2n6uw0007uh1ynyqtnyeu","tag_id":"cl1c2n6zq000wuh1y2xk94iqd","_id":"cl1c2n71b001ouh1y7f3ph91g"},{"post_id":"cl1c2n6uw0007uh1ynyqtnyeu","tag_id":"cl1c2n6zr000xuh1yw1x63v4y","_id":"cl1c2n71b001puh1y0eilhisq"},{"post_id":"cl1c2n6ux0008uh1y2ym4wdyj","tag_id":"cl1c2n6zr000yuh1yjsf132th","_id":"cl1c2n71b001quh1ycve0b43k"},{"post_id":"cl1c2n6ux0008uh1y2ym4wdyj","tag_id":"cl1c2n6zs000zuh1y35v8zl69","_id":"cl1c2n71b001ruh1ydesituvj"},{"post_id":"cl1c2n6ux0008uh1y2ym4wdyj","tag_id":"cl1c2n6zs0010uh1ytivle0wn","_id":"cl1c2n71c001suh1yvszqns9j"},{"post_id":"cl1c2n6uy0009uh1yspd8560w","tag_id":"cl1c2n6zt0011uh1ymt1md1xf","_id":"cl1c2n71c001tuh1ygtefpe5n"},{"post_id":"cl1c2n6uz000auh1yd7a7qsq3","tag_id":"cl1c2n6zt0012uh1yo5q0wnqs","_id":"cl1c2n71c001uuh1yu36aatcn"},{"post_id":"cl1c2n6uz000auh1yd7a7qsq3","tag_id":"cl1c2n6zu0013uh1yo3h36ew7","_id":"cl1c2n71c001vuh1ynht3tla6"},{"post_id":"cl1c2n6zf000euh1yxmaekqf8","tag_id":"cl1c2n6zt0011uh1ymt1md1xf","_id":"cl1c2n72l001wuh1y2xdvjcl4"},{"post_id":"cl1c2n6zf000euh1yxmaekqf8","tag_id":"cl1c2n7170015uh1yvw8fihyo","_id":"cl1c2n72l001xuh1y1534icse"}],"Tag":[{"name":"源码","_id":"cl1c2n6zd000cuh1yf0setchw"},{"name":"JavaScript","_id":"cl1c2n6zg000guh1yzac0blch"},{"name":"zepto","_id":"cl1c2n6zi000iuh1ypjamcf8r"},{"name":"Vue","_id":"cl1c2n6zl000nuh1ylfywvu6y"},{"name":"游戏","_id":"cl1c2n6zm000ouh1y5tlfittj"},{"name":"回顾","_id":"cl1c2n6zn000puh1y88aowtf9"},{"name":"团队协作","_id":"cl1c2n6zn000quh1y0z39avjd"},{"name":"自述","_id":"cl1c2n6zp000uuh1yi60nr39h"},{"name":"生活","_id":"cl1c2n6zp000vuh1ynyxwae46"},{"name":"华晨宇","_id":"cl1c2n6zq000wuh1y2xk94iqd"},{"name":"旅游","_id":"cl1c2n6zr000xuh1yw1x63v4y"},{"name":"laravel","_id":"cl1c2n6zr000yuh1yjsf132th"},{"name":"WebSockets","_id":"cl1c2n6zs000zuh1y35v8zl69"},{"name":"web","_id":"cl1c2n6zs0010uh1ytivle0wn"},{"name":"前端","_id":"cl1c2n6zt0011uh1ymt1md1xf"},{"name":"sicp","_id":"cl1c2n6zt0012uh1yo5q0wnqs"},{"name":"计算机基础","_id":"cl1c2n6zu0013uh1yo3h36ew7"},{"name":"Taro","_id":"cl1c2n7170015uh1yvw8fihyo"}]}}